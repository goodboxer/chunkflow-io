{"version":3,"file":"vendor_genai-CLscWybu.js","sources":["../../node_modules/@google/genai/dist/web/index.mjs"],"sourcesContent":["/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass BaseModule {\n}\nfunction formatMap(templateString, valueMap) {\n    // Use a regular expression to find all placeholders in the template string\n    const regex = /\\{([^}]+)\\}/g;\n    // Replace each placeholder with its corresponding value from the valueMap\n    return templateString.replace(regex, (match, key) => {\n        if (Object.prototype.hasOwnProperty.call(valueMap, key)) {\n            const value = valueMap[key];\n            // Convert the value to a string if it's not a string already\n            return value !== undefined && value !== null ? String(value) : '';\n        }\n        else {\n            // Handle missing keys\n            throw new Error(`Key '${key}' not found in valueMap.`);\n        }\n    });\n}\nfunction setValueByPath(data, keys, value) {\n    for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i];\n        if (key.endsWith('[]')) {\n            const keyName = key.slice(0, -2);\n            if (!(keyName in data)) {\n                if (Array.isArray(value)) {\n                    data[keyName] = Array.from({ length: value.length }, () => ({}));\n                }\n                else {\n                    throw new Error(`Value must be a list given an array path ${key}`);\n                }\n            }\n            if (Array.isArray(data[keyName])) {\n                const arrayData = data[keyName];\n                if (Array.isArray(value)) {\n                    for (let j = 0; j < arrayData.length; j++) {\n                        const entry = arrayData[j];\n                        setValueByPath(entry, keys.slice(i + 1), value[j]);\n                    }\n                }\n                else {\n                    for (const d of arrayData) {\n                        setValueByPath(d, keys.slice(i + 1), value);\n                    }\n                }\n            }\n            return;\n        }\n        else if (key.endsWith('[0]')) {\n            const keyName = key.slice(0, -3);\n            if (!(keyName in data)) {\n                data[keyName] = [{}];\n            }\n            const arrayData = data[keyName];\n            setValueByPath(arrayData[0], keys.slice(i + 1), value);\n            return;\n        }\n        if (!data[key] || typeof data[key] !== 'object') {\n            data[key] = {};\n        }\n        data = data[key];\n    }\n    const keyToSet = keys[keys.length - 1];\n    const existingData = data[keyToSet];\n    if (existingData !== undefined) {\n        if (!value ||\n            (typeof value === 'object' && Object.keys(value).length === 0)) {\n            return;\n        }\n        if (value === existingData) {\n            return;\n        }\n        if (typeof existingData === 'object' &&\n            typeof value === 'object' &&\n            existingData !== null &&\n            value !== null) {\n            Object.assign(existingData, value);\n        }\n        else {\n            throw new Error(`Cannot set value for an existing key. Key: ${keyToSet}`);\n        }\n    }\n    else {\n        data[keyToSet] = value;\n    }\n}\nfunction getValueByPath(data, keys) {\n    try {\n        if (keys.length === 1 && keys[0] === '_self') {\n            return data;\n        }\n        for (let i = 0; i < keys.length; i++) {\n            if (typeof data !== 'object' || data === null) {\n                return undefined;\n            }\n            const key = keys[i];\n            if (key.endsWith('[]')) {\n                const keyName = key.slice(0, -2);\n                if (keyName in data) {\n                    const arrayData = data[keyName];\n                    if (!Array.isArray(arrayData)) {\n                        return undefined;\n                    }\n                    return arrayData.map((d) => getValueByPath(d, keys.slice(i + 1)));\n                }\n                else {\n                    return undefined;\n                }\n            }\n            else {\n                data = data[key];\n            }\n        }\n        return data;\n    }\n    catch (error) {\n        if (error instanceof TypeError) {\n            return undefined;\n        }\n        throw error;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction tModel(apiClient, model) {\n    if (!model || typeof model !== 'string') {\n        throw new Error('model is required and must be a string');\n    }\n    if (apiClient.isVertexAI()) {\n        if (model.startsWith('publishers/') ||\n            model.startsWith('projects/') ||\n            model.startsWith('models/')) {\n            return model;\n        }\n        else if (model.indexOf('/') >= 0) {\n            const parts = model.split('/', 2);\n            return `publishers/${parts[0]}/models/${parts[1]}`;\n        }\n        else {\n            return `publishers/google/models/${model}`;\n        }\n    }\n    else {\n        if (model.startsWith('models/') || model.startsWith('tunedModels/')) {\n            return model;\n        }\n        else {\n            return `models/${model}`;\n        }\n    }\n}\nfunction tCachesModel(apiClient, model) {\n    const transformedModel = tModel(apiClient, model);\n    if (!transformedModel) {\n        return '';\n    }\n    if (transformedModel.startsWith('publishers/') && apiClient.isVertexAI()) {\n        // vertex caches only support model name start with projects.\n        return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/${transformedModel}`;\n    }\n    else if (transformedModel.startsWith('models/') && apiClient.isVertexAI()) {\n        return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/publishers/google/${transformedModel}`;\n    }\n    else {\n        return transformedModel;\n    }\n}\nfunction tPart(apiClient, origin) {\n    if (origin === null || origin === undefined) {\n        throw new Error('PartUnion is required');\n    }\n    if (typeof origin === 'object') {\n        return origin;\n    }\n    if (typeof origin === 'string') {\n        return { text: origin };\n    }\n    throw new Error(`Unsupported part type: ${typeof origin}`);\n}\nfunction tParts(apiClient, origin) {\n    if (origin === null ||\n        origin === undefined ||\n        (Array.isArray(origin) && origin.length === 0)) {\n        throw new Error('PartListUnion is required');\n    }\n    if (Array.isArray(origin)) {\n        return origin.map((item) => tPart(apiClient, item));\n    }\n    return [tPart(apiClient, origin)];\n}\nfunction _isContent(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'parts' in origin &&\n        Array.isArray(origin.parts));\n}\nfunction _isFunctionCallPart(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'functionCall' in origin);\n}\nfunction _isFunctionResponsePart(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'functionResponse' in origin);\n}\nfunction tContent(apiClient, origin) {\n    if (origin === null || origin === undefined) {\n        throw new Error('ContentUnion is required');\n    }\n    if (_isContent(origin)) {\n        // _isContent is a utility function that checks if the\n        // origin is a Content.\n        return origin;\n    }\n    return {\n        role: 'user',\n        parts: tParts(apiClient, origin),\n    };\n}\nfunction tContentsForEmbed(apiClient, origin) {\n    if (!origin) {\n        return [];\n    }\n    if (apiClient.isVertexAI() && Array.isArray(origin)) {\n        return origin.flatMap((item) => {\n            const content = tContent(apiClient, item);\n            if (content.parts &&\n                content.parts.length > 0 &&\n                content.parts[0].text !== undefined) {\n                return [content.parts[0].text];\n            }\n            return [];\n        });\n    }\n    else if (apiClient.isVertexAI()) {\n        const content = tContent(apiClient, origin);\n        if (content.parts &&\n            content.parts.length > 0 &&\n            content.parts[0].text !== undefined) {\n            return [content.parts[0].text];\n        }\n        return [];\n    }\n    if (Array.isArray(origin)) {\n        return origin.map((item) => tContent(apiClient, item));\n    }\n    return [tContent(apiClient, origin)];\n}\nfunction tContents(apiClient, origin) {\n    if (origin === null ||\n        origin === undefined ||\n        (Array.isArray(origin) && origin.length === 0)) {\n        throw new Error('contents are required');\n    }\n    if (!Array.isArray(origin)) {\n        // If it's not an array, it's a single content or a single PartUnion.\n        if (_isFunctionCallPart(origin) || _isFunctionResponsePart(origin)) {\n            throw new Error('To specify functionCall or functionResponse parts, please wrap them in a Content object, specifying the role for them');\n        }\n        return [tContent(apiClient, origin)];\n    }\n    const result = [];\n    const accumulatedParts = [];\n    const isContentArray = _isContent(origin[0]);\n    for (const item of origin) {\n        const isContent = _isContent(item);\n        if (isContent != isContentArray) {\n            throw new Error('Mixing Content and Parts is not supported, please group the parts into a the appropriate Content objects and specify the roles for them');\n        }\n        if (isContent) {\n            // `isContent` contains the result of _isContent, which is a utility\n            // function that checks if the item is a Content.\n            result.push(item);\n        }\n        else if (_isFunctionCallPart(item) || _isFunctionResponsePart(item)) {\n            throw new Error('To specify functionCall or functionResponse parts, please wrap them, and any other parts, in Content objects as appropriate, specifying the role for them');\n        }\n        else {\n            accumulatedParts.push(item);\n        }\n    }\n    if (!isContentArray) {\n        result.push({ role: 'user', parts: tParts(apiClient, accumulatedParts) });\n    }\n    return result;\n}\nfunction processSchema(apiClient, schema) {\n    if (!apiClient.isVertexAI()) {\n        if ('default' in schema) {\n            throw new Error('Default value is not supported in the response schema for the Gemini API.');\n        }\n    }\n    if ('anyOf' in schema) {\n        if (schema['anyOf'] !== undefined) {\n            for (const subSchema of schema['anyOf']) {\n                processSchema(apiClient, subSchema);\n            }\n        }\n    }\n    if ('items' in schema) {\n        if (schema['items'] !== undefined) {\n            processSchema(apiClient, schema['items']);\n        }\n    }\n    if ('properties' in schema) {\n        if (schema['properties'] !== undefined) {\n            for (const subSchema of Object.values(schema['properties'])) {\n                processSchema(apiClient, subSchema);\n            }\n        }\n    }\n}\nfunction tSchema(apiClient, schema) {\n    processSchema(apiClient, schema);\n    return schema;\n}\nfunction tSpeechConfig(apiClient, speechConfig) {\n    if (typeof speechConfig === 'object' && 'voiceConfig' in speechConfig) {\n        return speechConfig;\n    }\n    else if (typeof speechConfig === 'string') {\n        return {\n            voiceConfig: {\n                prebuiltVoiceConfig: {\n                    voiceName: speechConfig,\n                },\n            },\n        };\n    }\n    else {\n        throw new Error(`Unsupported speechConfig type: ${typeof speechConfig}`);\n    }\n}\nfunction tTool(apiClient, tool) {\n    return tool;\n}\nfunction tTools(apiClient, tool) {\n    if (!Array.isArray(tool)) {\n        throw new Error('tool is required and must be an array of Tools');\n    }\n    return tool;\n}\n/**\n * Prepends resource name with project, location, resource_prefix if needed.\n *\n * @param client The API client.\n * @param resourceName The resource name.\n * @param resourcePrefix The resource prefix.\n * @param splitsAfterPrefix The number of splits after the prefix.\n * @returns The completed resource name.\n *\n * Examples:\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/bar/locations/us-west1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'projects/foo/locations/us-central1/cachedContents/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/foo/locations/us-central1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns 'cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'some/wrong/cachedContents/resource/name/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * # client.vertexai = True\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * -> 'some/wrong/resource/name/123'\n * ```\n */\nfunction resourceName(client, resourceName, resourcePrefix, splitsAfterPrefix = 1) {\n    const shouldAppendPrefix = !resourceName.startsWith(`${resourcePrefix}/`) &&\n        resourceName.split('/').length === splitsAfterPrefix;\n    if (client.isVertexAI()) {\n        if (resourceName.startsWith('projects/')) {\n            return resourceName;\n        }\n        else if (resourceName.startsWith('locations/')) {\n            return `projects/${client.getProject()}/${resourceName}`;\n        }\n        else if (resourceName.startsWith(`${resourcePrefix}/`)) {\n            return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourceName}`;\n        }\n        else if (shouldAppendPrefix) {\n            return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourcePrefix}/${resourceName}`;\n        }\n        else {\n            return resourceName;\n        }\n    }\n    if (shouldAppendPrefix) {\n        return `${resourcePrefix}/${resourceName}`;\n    }\n    return resourceName;\n}\nfunction tCachedContentName(apiClient, name) {\n    if (typeof name !== 'string') {\n        throw new Error('name must be a string');\n    }\n    return resourceName(apiClient, name, 'cachedContents');\n}\nfunction tBytes(apiClient, fromImageBytes) {\n    if (typeof fromImageBytes !== 'string') {\n        throw new Error('fromImageBytes must be a string');\n    }\n    // TODO(b/389133914): Remove dummy bytes converter.\n    return fromImageBytes;\n}\nfunction tFileName(apiClient, fromName) {\n    if (typeof fromName !== 'string') {\n        throw new Error('fromName must be a string');\n    }\n    // Remove the files/ prefx for MLdev urls to get the actual name of the file.\n    if (fromName.startsWith('files/')) {\n        return fromName.split('files/')[1];\n    }\n    return fromName;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction partToMldev$2(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['videoMetadata']) !== undefined) {\n        throw new Error('videoMetadata parameter is not supported in Gemini API.');\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partToMldev$2(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev$2(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['response']) !== undefined) {\n        throw new Error('response parameter is not supported in Gemini API.');\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev$2() {\n    const toObject = {};\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev$2(apiClient, fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction toolToMldev$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        if (Array.isArray(fromFunctionDeclarations)) {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations.map((item) => {\n                return functionDeclarationToMldev$2(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations);\n        }\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev$2());\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev$2(apiClient, fromGoogleSearchRetrieval));\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction toolConfigToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToMldev$1(apiClient, fromFunctionCallingConfig));\n    }\n    return toObject;\n}\nfunction createCachedContentConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (parentObject !== undefined && fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(parentObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToMldev$2(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(parentObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToMldev$2(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['tools'], fromTools.map((item) => {\n                return toolToMldev$2(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(parentObject, ['tools'], fromTools);\n        }\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToMldev$1(apiClient, fromToolConfig));\n    }\n    return toObject;\n}\nfunction createCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], tCachesModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createCachedContentConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction deleteCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction updateCachedContentConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    return toObject;\n}\nfunction updateCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], updateCachedContentConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction listCachedContentsConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    return toObject;\n}\nfunction listCachedContentsParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listCachedContentsConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction partToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partToVertex$2(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromExample = getValueByPath(fromObject, ['example']);\n    if (fromExample != null) {\n        setValueByPath(toObject, ['example'], fromExample);\n    }\n    const fromPattern = getValueByPath(fromObject, ['pattern']);\n    if (fromPattern != null) {\n        setValueByPath(toObject, ['pattern'], fromPattern);\n    }\n    const fromDefault = getValueByPath(fromObject, ['default']);\n    if (fromDefault != null) {\n        setValueByPath(toObject, ['default'], fromDefault);\n    }\n    const fromMaxLength = getValueByPath(fromObject, ['maxLength']);\n    if (fromMaxLength != null) {\n        setValueByPath(toObject, ['maxLength'], fromMaxLength);\n    }\n    const fromMinLength = getValueByPath(fromObject, ['minLength']);\n    if (fromMinLength != null) {\n        setValueByPath(toObject, ['minLength'], fromMinLength);\n    }\n    const fromMinProperties = getValueByPath(fromObject, [\n        'minProperties',\n    ]);\n    if (fromMinProperties != null) {\n        setValueByPath(toObject, ['minProperties'], fromMinProperties);\n    }\n    const fromMaxProperties = getValueByPath(fromObject, [\n        'maxProperties',\n    ]);\n    if (fromMaxProperties != null) {\n        setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n    }\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction functionDeclarationToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], schemaToVertex$2(apiClient, fromResponse));\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    return toObject;\n}\nfunction googleSearchToVertex$2() {\n    const toObject = {};\n    return toObject;\n}\nfunction dynamicRetrievalConfigToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToVertex$2(apiClient, fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction toolToVertex$2(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        if (Array.isArray(fromFunctionDeclarations)) {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations.map((item) => {\n                return functionDeclarationToVertex$2(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations);\n        }\n    }\n    const fromRetrieval = getValueByPath(fromObject, ['retrieval']);\n    if (fromRetrieval != null) {\n        setValueByPath(toObject, ['retrieval'], fromRetrieval);\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToVertex$2());\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToVertex$2(apiClient, fromGoogleSearchRetrieval));\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction toolConfigToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToVertex$1(apiClient, fromFunctionCallingConfig));\n    }\n    return toObject;\n}\nfunction createCachedContentConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (parentObject !== undefined && fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(parentObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToVertex$2(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(parentObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToVertex$2(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['tools'], fromTools.map((item) => {\n                return toolToVertex$2(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(parentObject, ['tools'], fromTools);\n        }\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToVertex$1(apiClient, fromToolConfig));\n    }\n    return toObject;\n}\nfunction createCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], tCachesModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createCachedContentConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction deleteCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction updateCachedContentConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    return toObject;\n}\nfunction updateCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], updateCachedContentConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction listCachedContentsConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    return toObject;\n}\nfunction listCachedContentsParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listCachedContentsConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction cachedContentFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (fromExpireTime != null) {\n        setValueByPath(toObject, ['expireTime'], fromExpireTime);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction deleteCachedContentResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction listCachedContentsResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromCachedContents = getValueByPath(fromObject, [\n        'cachedContents',\n    ]);\n    if (fromCachedContents != null) {\n        if (Array.isArray(fromCachedContents)) {\n            setValueByPath(toObject, ['cachedContents'], fromCachedContents.map((item) => {\n                return cachedContentFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['cachedContents'], fromCachedContents);\n        }\n    }\n    return toObject;\n}\nfunction cachedContentFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (fromExpireTime != null) {\n        setValueByPath(toObject, ['expireTime'], fromExpireTime);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction deleteCachedContentResponseFromVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction listCachedContentsResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromCachedContents = getValueByPath(fromObject, [\n        'cachedContents',\n    ]);\n    if (fromCachedContents != null) {\n        if (Array.isArray(fromCachedContents)) {\n            setValueByPath(toObject, ['cachedContents'], fromCachedContents.map((item) => {\n                return cachedContentFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['cachedContents'], fromCachedContents);\n        }\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Pagers for the GenAI List APIs.\n */\nvar PagedItem;\n(function (PagedItem) {\n    PagedItem[\"PAGED_ITEM_BATCH_JOBS\"] = \"batchJobs\";\n    PagedItem[\"PAGED_ITEM_MODELS\"] = \"models\";\n    PagedItem[\"PAGED_ITEM_TUNING_JOBS\"] = \"tuningJobs\";\n    PagedItem[\"PAGED_ITEM_FILES\"] = \"files\";\n    PagedItem[\"PAGED_ITEM_CACHED_CONTENTS\"] = \"cachedContents\";\n})(PagedItem || (PagedItem = {}));\n/**\n * Pager class for iterating through paginated results.\n */\nclass Pager {\n    constructor(name, request, response, params) {\n        this.pageInternal = [];\n        this.paramsInternal = {};\n        this.requestInternal = request;\n        this.init(name, response, params);\n    }\n    init(name, response, params) {\n        var _a, _b;\n        this.nameInternal = name;\n        this.pageInternal = response[this.nameInternal] || [];\n        this.idxInternal = 0;\n        let requestParams = { config: {} };\n        if (!params) {\n            requestParams = { config: {} };\n        }\n        else if (typeof params === 'object') {\n            requestParams = Object.assign({}, params);\n        }\n        else {\n            requestParams = params;\n        }\n        if (requestParams['config']) {\n            requestParams['config']['pageToken'] = response['nextPageToken'];\n        }\n        this.paramsInternal = requestParams;\n        this.pageInternalSize =\n            (_b = (_a = requestParams['config']) === null || _a === void 0 ? void 0 : _a['pageSize']) !== null && _b !== void 0 ? _b : this.pageInternal.length;\n    }\n    initNextPage(response) {\n        this.init(this.nameInternal, response, this.paramsInternal);\n    }\n    /**\n     * Returns the current page, which is a list of items.\n     *\n     * @remarks\n     * The first page is retrieved when the pager is created. The returned list of\n     * items could be a subset of the entire list.\n     */\n    get page() {\n        return this.pageInternal;\n    }\n    /**\n     * Returns the type of paged item (for example, ``batch_jobs``).\n     */\n    get name() {\n        return this.nameInternal;\n    }\n    /**\n     * Returns the length of the page fetched each time by this pager.\n     *\n     * @remarks\n     * The number of items in the page is less than or equal to the page length.\n     */\n    get pageSize() {\n        return this.pageInternalSize;\n    }\n    /**\n     * Returns the parameters when making the API request for the next page.\n     *\n     * @remarks\n     * Parameters contain a set of optional configs that can be\n     * used to customize the API request. For example, the `pageToken` parameter\n     * contains the token to request the next page.\n     */\n    get params() {\n        return this.paramsInternal;\n    }\n    /**\n     * Returns the total number of items in the current page.\n     */\n    get pageLength() {\n        return this.pageInternal.length;\n    }\n    /**\n     * Returns the item at the given index.\n     */\n    getItem(index) {\n        return this.pageInternal[index];\n    }\n    /**\n     * Returns an async iterator that support iterating through all items\n     * retrieved from the API.\n     *\n     * @remarks\n     * The iterator will automatically fetch the next page if there are more items\n     * to fetch from the API.\n     *\n     * @example\n     *\n     * ```ts\n     * const pager = await ai.files.list({config: {pageSize: 10}});\n     * for await (const file of pager) {\n     *   console.log(file.name);\n     * }\n     * ```\n     */\n    [Symbol.asyncIterator]() {\n        return {\n            next: async () => {\n                if (this.idxInternal >= this.pageLength) {\n                    if (this.hasNextPage()) {\n                        await this.nextPage();\n                    }\n                    else {\n                        return { value: undefined, done: true };\n                    }\n                }\n                const item = this.getItem(this.idxInternal);\n                this.idxInternal += 1;\n                return { value: item, done: false };\n            },\n            return: async () => {\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * Fetches the next page of items. This makes a new API request.\n     *\n     * @throws {Error} If there are no more pages to fetch.\n     *\n     * @example\n     *\n     * ```ts\n     * const pager = await ai.files.list({config: {pageSize: 10}});\n     * let page = pager.page;\n     * while (true) {\n     *   for (const file of page) {\n     *     console.log(file.name);\n     *   }\n     *   if (!pager.hasNextPage()) {\n     *     break;\n     *   }\n     *   page = await pager.nextPage();\n     * }\n     * ```\n     */\n    async nextPage() {\n        if (!this.hasNextPage()) {\n            throw new Error('No more pages to fetch.');\n        }\n        const response = await this.requestInternal(this.params);\n        this.initNextPage(response);\n        return this.page;\n    }\n    /**\n     * Returns true if there are more pages to fetch from the API.\n     */\n    hasNextPage() {\n        var _a;\n        if (((_a = this.params['config']) === null || _a === void 0 ? void 0 : _a['pageToken']) !== undefined) {\n            return true;\n        }\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n/** Required. Outcome of the code execution. */\nvar Outcome;\n(function (Outcome) {\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"OUTCOME_UNSPECIFIED\";\n    Outcome[\"OUTCOME_OK\"] = \"OUTCOME_OK\";\n    Outcome[\"OUTCOME_FAILED\"] = \"OUTCOME_FAILED\";\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"OUTCOME_DEADLINE_EXCEEDED\";\n})(Outcome || (Outcome = {}));\n/** Required. Programming language of the `code`. */\nvar Language;\n(function (Language) {\n    Language[\"LANGUAGE_UNSPECIFIED\"] = \"LANGUAGE_UNSPECIFIED\";\n    Language[\"PYTHON\"] = \"PYTHON\";\n})(Language || (Language = {}));\n/** Optional. The type of the data. */\nvar Type;\n(function (Type) {\n    Type[\"TYPE_UNSPECIFIED\"] = \"TYPE_UNSPECIFIED\";\n    Type[\"STRING\"] = \"STRING\";\n    Type[\"NUMBER\"] = \"NUMBER\";\n    Type[\"INTEGER\"] = \"INTEGER\";\n    Type[\"BOOLEAN\"] = \"BOOLEAN\";\n    Type[\"ARRAY\"] = \"ARRAY\";\n    Type[\"OBJECT\"] = \"OBJECT\";\n})(Type || (Type = {}));\n/** Required. Harm category. */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(HarmCategory || (HarmCategory = {}));\n/** Optional. Specify if the threshold is used for probability or severity score. If not specified, the threshold is used for probability score. */\nvar HarmBlockMethod;\n(function (HarmBlockMethod) {\n    HarmBlockMethod[\"HARM_BLOCK_METHOD_UNSPECIFIED\"] = \"HARM_BLOCK_METHOD_UNSPECIFIED\";\n    HarmBlockMethod[\"SEVERITY\"] = \"SEVERITY\";\n    HarmBlockMethod[\"PROBABILITY\"] = \"PROBABILITY\";\n})(HarmBlockMethod || (HarmBlockMethod = {}));\n/** Required. The harm block threshold. */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n    HarmBlockThreshold[\"OFF\"] = \"OFF\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/** The mode of the predictor to be used in dynamic retrieval. */\nvar Mode;\n(function (Mode) {\n    Mode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    Mode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(Mode || (Mode = {}));\n/** Output only. The reason why the model stopped generating tokens.\n\n  If empty, the model has not stopped generating the tokens.\n   */\nvar FinishReason;\n(function (FinishReason) {\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    FinishReason[\"STOP\"] = \"STOP\";\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    FinishReason[\"OTHER\"] = \"OTHER\";\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    FinishReason[\"SPII\"] = \"SPII\";\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    FinishReason[\"IMAGE_SAFETY\"] = \"IMAGE_SAFETY\";\n})(FinishReason || (FinishReason = {}));\n/** Output only. Harm probability levels in the content. */\nvar HarmProbability;\n(function (HarmProbability) {\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    HarmProbability[\"LOW\"] = \"LOW\";\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/** Output only. Harm severity levels in the content. */\nvar HarmSeverity;\n(function (HarmSeverity) {\n    HarmSeverity[\"HARM_SEVERITY_UNSPECIFIED\"] = \"HARM_SEVERITY_UNSPECIFIED\";\n    HarmSeverity[\"HARM_SEVERITY_NEGLIGIBLE\"] = \"HARM_SEVERITY_NEGLIGIBLE\";\n    HarmSeverity[\"HARM_SEVERITY_LOW\"] = \"HARM_SEVERITY_LOW\";\n    HarmSeverity[\"HARM_SEVERITY_MEDIUM\"] = \"HARM_SEVERITY_MEDIUM\";\n    HarmSeverity[\"HARM_SEVERITY_HIGH\"] = \"HARM_SEVERITY_HIGH\";\n})(HarmSeverity || (HarmSeverity = {}));\n/** Output only. Blocked reason. */\nvar BlockedReason;\n(function (BlockedReason) {\n    BlockedReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    BlockedReason[\"SAFETY\"] = \"SAFETY\";\n    BlockedReason[\"OTHER\"] = \"OTHER\";\n    BlockedReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    BlockedReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n})(BlockedReason || (BlockedReason = {}));\n/** Output only. Traffic type. This shows whether a request consumes Pay-As-You-Go or Provisioned Throughput quota. */\nvar TrafficType;\n(function (TrafficType) {\n    TrafficType[\"TRAFFIC_TYPE_UNSPECIFIED\"] = \"TRAFFIC_TYPE_UNSPECIFIED\";\n    TrafficType[\"ON_DEMAND\"] = \"ON_DEMAND\";\n    TrafficType[\"PROVISIONED_THROUGHPUT\"] = \"PROVISIONED_THROUGHPUT\";\n})(TrafficType || (TrafficType = {}));\n/** Server content modalities. */\nvar Modality;\n(function (Modality) {\n    Modality[\"MODALITY_UNSPECIFIED\"] = \"MODALITY_UNSPECIFIED\";\n    Modality[\"TEXT\"] = \"TEXT\";\n    Modality[\"IMAGE\"] = \"IMAGE\";\n    Modality[\"AUDIO\"] = \"AUDIO\";\n})(Modality || (Modality = {}));\n/** The media resolution to use. */\nvar MediaResolution;\n(function (MediaResolution) {\n    MediaResolution[\"MEDIA_RESOLUTION_UNSPECIFIED\"] = \"MEDIA_RESOLUTION_UNSPECIFIED\";\n    MediaResolution[\"MEDIA_RESOLUTION_LOW\"] = \"MEDIA_RESOLUTION_LOW\";\n    MediaResolution[\"MEDIA_RESOLUTION_MEDIUM\"] = \"MEDIA_RESOLUTION_MEDIUM\";\n    MediaResolution[\"MEDIA_RESOLUTION_HIGH\"] = \"MEDIA_RESOLUTION_HIGH\";\n})(MediaResolution || (MediaResolution = {}));\n/** Options for feature selection preference. */\nvar FeatureSelectionPreference;\n(function (FeatureSelectionPreference) {\n    FeatureSelectionPreference[\"FEATURE_SELECTION_PREFERENCE_UNSPECIFIED\"] = \"FEATURE_SELECTION_PREFERENCE_UNSPECIFIED\";\n    FeatureSelectionPreference[\"PRIORITIZE_QUALITY\"] = \"PRIORITIZE_QUALITY\";\n    FeatureSelectionPreference[\"BALANCED\"] = \"BALANCED\";\n    FeatureSelectionPreference[\"PRIORITIZE_COST\"] = \"PRIORITIZE_COST\";\n})(FeatureSelectionPreference || (FeatureSelectionPreference = {}));\n/** Config for the dynamic retrieval config mode. */\nvar DynamicRetrievalConfigMode;\n(function (DynamicRetrievalConfigMode) {\n    DynamicRetrievalConfigMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    DynamicRetrievalConfigMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalConfigMode || (DynamicRetrievalConfigMode = {}));\n/** Config for the function calling config mode. */\nvar FunctionCallingConfigMode;\n(function (FunctionCallingConfigMode) {\n    FunctionCallingConfigMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    FunctionCallingConfigMode[\"AUTO\"] = \"AUTO\";\n    FunctionCallingConfigMode[\"ANY\"] = \"ANY\";\n    FunctionCallingConfigMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingConfigMode || (FunctionCallingConfigMode = {}));\n/** Enum that controls the safety filter level for objectionable content. */\nvar SafetyFilterLevel;\n(function (SafetyFilterLevel) {\n    SafetyFilterLevel[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    SafetyFilterLevel[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    SafetyFilterLevel[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    SafetyFilterLevel[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(SafetyFilterLevel || (SafetyFilterLevel = {}));\n/** Enum that controls the generation of people. */\nvar PersonGeneration;\n(function (PersonGeneration) {\n    PersonGeneration[\"DONT_ALLOW\"] = \"DONT_ALLOW\";\n    PersonGeneration[\"ALLOW_ADULT\"] = \"ALLOW_ADULT\";\n    PersonGeneration[\"ALLOW_ALL\"] = \"ALLOW_ALL\";\n})(PersonGeneration || (PersonGeneration = {}));\n/** Enum that specifies the language of the text in the prompt. */\nvar ImagePromptLanguage;\n(function (ImagePromptLanguage) {\n    ImagePromptLanguage[\"auto\"] = \"auto\";\n    ImagePromptLanguage[\"en\"] = \"en\";\n    ImagePromptLanguage[\"ja\"] = \"ja\";\n    ImagePromptLanguage[\"ko\"] = \"ko\";\n    ImagePromptLanguage[\"hi\"] = \"hi\";\n})(ImagePromptLanguage || (ImagePromptLanguage = {}));\n/** State for the lifecycle of a File. */\nvar FileState;\n(function (FileState) {\n    FileState[\"STATE_UNSPECIFIED\"] = \"STATE_UNSPECIFIED\";\n    FileState[\"PROCESSING\"] = \"PROCESSING\";\n    FileState[\"ACTIVE\"] = \"ACTIVE\";\n    FileState[\"FAILED\"] = \"FAILED\";\n})(FileState || (FileState = {}));\n/** Source of the File. */\nvar FileSource;\n(function (FileSource) {\n    FileSource[\"SOURCE_UNSPECIFIED\"] = \"SOURCE_UNSPECIFIED\";\n    FileSource[\"UPLOADED\"] = \"UPLOADED\";\n    FileSource[\"GENERATED\"] = \"GENERATED\";\n})(FileSource || (FileSource = {}));\n/** Enum representing the mask mode of a mask reference image. */\nvar MaskReferenceMode;\n(function (MaskReferenceMode) {\n    MaskReferenceMode[\"MASK_MODE_DEFAULT\"] = \"MASK_MODE_DEFAULT\";\n    MaskReferenceMode[\"MASK_MODE_USER_PROVIDED\"] = \"MASK_MODE_USER_PROVIDED\";\n    MaskReferenceMode[\"MASK_MODE_BACKGROUND\"] = \"MASK_MODE_BACKGROUND\";\n    MaskReferenceMode[\"MASK_MODE_FOREGROUND\"] = \"MASK_MODE_FOREGROUND\";\n    MaskReferenceMode[\"MASK_MODE_SEMANTIC\"] = \"MASK_MODE_SEMANTIC\";\n})(MaskReferenceMode || (MaskReferenceMode = {}));\n/** Enum representing the control type of a control reference image. */\nvar ControlReferenceType;\n(function (ControlReferenceType) {\n    ControlReferenceType[\"CONTROL_TYPE_DEFAULT\"] = \"CONTROL_TYPE_DEFAULT\";\n    ControlReferenceType[\"CONTROL_TYPE_CANNY\"] = \"CONTROL_TYPE_CANNY\";\n    ControlReferenceType[\"CONTROL_TYPE_SCRIBBLE\"] = \"CONTROL_TYPE_SCRIBBLE\";\n    ControlReferenceType[\"CONTROL_TYPE_FACE_MESH\"] = \"CONTROL_TYPE_FACE_MESH\";\n})(ControlReferenceType || (ControlReferenceType = {}));\n/** Enum representing the subject type of a subject reference image. */\nvar SubjectReferenceType;\n(function (SubjectReferenceType) {\n    SubjectReferenceType[\"SUBJECT_TYPE_DEFAULT\"] = \"SUBJECT_TYPE_DEFAULT\";\n    SubjectReferenceType[\"SUBJECT_TYPE_PERSON\"] = \"SUBJECT_TYPE_PERSON\";\n    SubjectReferenceType[\"SUBJECT_TYPE_ANIMAL\"] = \"SUBJECT_TYPE_ANIMAL\";\n    SubjectReferenceType[\"SUBJECT_TYPE_PRODUCT\"] = \"SUBJECT_TYPE_PRODUCT\";\n})(SubjectReferenceType || (SubjectReferenceType = {}));\n/** Server content modalities. */\nvar MediaModality;\n(function (MediaModality) {\n    MediaModality[\"MODALITY_UNSPECIFIED\"] = \"MODALITY_UNSPECIFIED\";\n    MediaModality[\"TEXT\"] = \"TEXT\";\n    MediaModality[\"IMAGE\"] = \"IMAGE\";\n    MediaModality[\"VIDEO\"] = \"VIDEO\";\n    MediaModality[\"AUDIO\"] = \"AUDIO\";\n    MediaModality[\"DOCUMENT\"] = \"DOCUMENT\";\n})(MediaModality || (MediaModality = {}));\n/** Start of speech sensitivity. */\nvar StartSensitivity;\n(function (StartSensitivity) {\n    StartSensitivity[\"START_SENSITIVITY_UNSPECIFIED\"] = \"START_SENSITIVITY_UNSPECIFIED\";\n    StartSensitivity[\"START_SENSITIVITY_HIGH\"] = \"START_SENSITIVITY_HIGH\";\n    StartSensitivity[\"START_SENSITIVITY_LOW\"] = \"START_SENSITIVITY_LOW\";\n})(StartSensitivity || (StartSensitivity = {}));\n/** End of speech sensitivity. */\nvar EndSensitivity;\n(function (EndSensitivity) {\n    EndSensitivity[\"END_SENSITIVITY_UNSPECIFIED\"] = \"END_SENSITIVITY_UNSPECIFIED\";\n    EndSensitivity[\"END_SENSITIVITY_HIGH\"] = \"END_SENSITIVITY_HIGH\";\n    EndSensitivity[\"END_SENSITIVITY_LOW\"] = \"END_SENSITIVITY_LOW\";\n})(EndSensitivity || (EndSensitivity = {}));\n/** The different ways of handling user activity. */\nvar ActivityHandling;\n(function (ActivityHandling) {\n    ActivityHandling[\"ACTIVITY_HANDLING_UNSPECIFIED\"] = \"ACTIVITY_HANDLING_UNSPECIFIED\";\n    ActivityHandling[\"START_OF_ACTIVITY_INTERRUPTS\"] = \"START_OF_ACTIVITY_INTERRUPTS\";\n    ActivityHandling[\"NO_INTERRUPTION\"] = \"NO_INTERRUPTION\";\n})(ActivityHandling || (ActivityHandling = {}));\n/** Options about which input is included in the user's turn. */\nvar TurnCoverage;\n(function (TurnCoverage) {\n    TurnCoverage[\"TURN_COVERAGE_UNSPECIFIED\"] = \"TURN_COVERAGE_UNSPECIFIED\";\n    TurnCoverage[\"TURN_INCLUDES_ONLY_ACTIVITY\"] = \"TURN_INCLUDES_ONLY_ACTIVITY\";\n    TurnCoverage[\"TURN_INCLUDES_ALL_INPUT\"] = \"TURN_INCLUDES_ALL_INPUT\";\n})(TurnCoverage || (TurnCoverage = {}));\n/** A function response. */\nclass FunctionResponse {\n}\n/**\n * Creates a `Part` object from a `URI` string.\n */\nfunction createPartFromUri(uri, mimeType) {\n    return {\n        fileData: {\n            fileUri: uri,\n            mimeType: mimeType,\n        },\n    };\n}\n/**\n * Creates a `Part` object from a `text` string.\n */\nfunction createPartFromText(text) {\n    return {\n        text: text,\n    };\n}\n/**\n * Creates a `Part` object from a `FunctionCall` object.\n */\nfunction createPartFromFunctionCall(name, args) {\n    return {\n        functionCall: {\n            name: name,\n            args: args,\n        },\n    };\n}\n/**\n * Creates a `Part` object from a `FunctionResponse` object.\n */\nfunction createPartFromFunctionResponse(id, name, response) {\n    return {\n        functionResponse: {\n            id: id,\n            name: name,\n            response: response,\n        },\n    };\n}\n/**\n * Creates a `Part` object from a `base64` encoded `string`.\n */\nfunction createPartFromBase64(data, mimeType) {\n    return {\n        inlineData: {\n            data: data,\n            mimeType: mimeType,\n        },\n    };\n}\n/**\n * Creates a `Part` object from the `outcome` and `output` of a `CodeExecutionResult` object.\n */\nfunction createPartFromCodeExecutionResult(outcome, output) {\n    return {\n        codeExecutionResult: {\n            outcome: outcome,\n            output: output,\n        },\n    };\n}\n/**\n * Creates a `Part` object from the `code` and `language` of an `ExecutableCode` object.\n */\nfunction createPartFromExecutableCode(code, language) {\n    return {\n        executableCode: {\n            code: code,\n            language: language,\n        },\n    };\n}\nfunction _isPart(obj) {\n    if (typeof obj === 'object' && obj !== null) {\n        return ('fileData' in obj ||\n            'text' in obj ||\n            'functionCall' in obj ||\n            'functionResponse' in obj ||\n            'inlineData' in obj ||\n            'videoMetadata' in obj ||\n            'codeExecutionResult' in obj ||\n            'executableCode' in obj);\n    }\n    return false;\n}\nfunction _toParts(partOrString) {\n    const parts = [];\n    if (typeof partOrString === 'string') {\n        parts.push(createPartFromText(partOrString));\n    }\n    else if (_isPart(partOrString)) {\n        parts.push(partOrString);\n    }\n    else if (Array.isArray(partOrString)) {\n        if (partOrString.length === 0) {\n            throw new Error('partOrString cannot be an empty array');\n        }\n        for (const part of partOrString) {\n            if (typeof part === 'string') {\n                parts.push(createPartFromText(part));\n            }\n            else if (_isPart(part)) {\n                parts.push(part);\n            }\n            else {\n                throw new Error('element in PartUnion must be a Part object or string');\n            }\n        }\n    }\n    else {\n        throw new Error('partOrString must be a Part object, string, or array');\n    }\n    return parts;\n}\n/**\n * Creates a `Content` object with a user role from a `PartListUnion` object or `string`.\n */\nfunction createUserContent(partOrString) {\n    return {\n        role: 'user',\n        parts: _toParts(partOrString),\n    };\n}\n/**\n * Creates a `Content` object with a model role from a `PartListUnion` object or `string`.\n */\nfunction createModelContent(partOrString) {\n    return {\n        role: 'model',\n        parts: _toParts(partOrString),\n    };\n}\n/** Content filter results for a prompt sent in the request. */\nclass GenerateContentResponsePromptFeedback {\n}\n/** Usage metadata about response(s). */\nclass GenerateContentResponseUsageMetadata {\n}\n/** Response message for PredictionService.GenerateContent. */\nclass GenerateContentResponse {\n    /**\n     * Returns the concatenation of all text parts from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the text from the first\n     * one will be returned.\n     * If there are non-text parts in the response, the concatenation of all text\n     * parts will be returned, and a warning will be logged.\n     * If there are thought parts in the response, the concatenation of all text\n     * parts excluding the thought parts will be returned.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateContent({\n     *   model: 'gemini-2.0-flash',\n     *   contents:\n     *     'Why is the sky blue?',\n     * });\n     *\n     * console.debug(response.text);\n     * ```\n     */\n    get text() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning text from the first one.');\n        }\n        let text = '';\n        let anyTextPartText = false;\n        const nonTextParts = [];\n        for (const part of (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) !== null && _h !== void 0 ? _h : []) {\n            for (const [fieldName, fieldValue] of Object.entries(part)) {\n                if (fieldName !== 'text' &&\n                    fieldName !== 'thought' &&\n                    (fieldValue !== null || fieldValue !== undefined)) {\n                    nonTextParts.push(fieldName);\n                }\n            }\n            if (typeof part.text === 'string') {\n                if (typeof part.thought === 'boolean' && part.thought) {\n                    continue;\n                }\n                anyTextPartText = true;\n                text += part.text;\n            }\n        }\n        if (nonTextParts.length > 0) {\n            console.warn(`there are non-text parts ${nonTextParts} in the response, returning concatenation of all text parts. Please refer to the non text parts for a full response from model.`);\n        }\n        // part.text === '' is different from part.text is null\n        return anyTextPartText ? text : undefined;\n    }\n    /**\n     * Returns the function calls from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the function calls from\n     * the first one will be returned.\n     * If there are no function calls in the response, undefined will be returned.\n     *\n     * @example\n     * ```ts\n     * const controlLightFunctionDeclaration: FunctionDeclaration = {\n     *   name: 'controlLight',\n     *   parameters: {\n     *   type: Type.OBJECT,\n     *   description: 'Set the brightness and color temperature of a room light.',\n     *   properties: {\n     *     brightness: {\n     *       type: Type.NUMBER,\n     *       description:\n     *         'Light level from 0 to 100. Zero is off and 100 is full brightness.',\n     *     },\n     *     colorTemperature: {\n     *       type: Type.STRING,\n     *       description:\n     *         'Color temperature of the light fixture which can be `daylight`, `cool` or `warm`.',\n     *     },\n     *   },\n     *   required: ['brightness', 'colorTemperature'],\n     *  };\n     *  const response = await ai.models.generateContent({\n     *     model: 'gemini-2.0-flash',\n     *     contents: 'Dim the lights so the room feels cozy and warm.',\n     *     config: {\n     *       tools: [{functionDeclarations: [controlLightFunctionDeclaration]}],\n     *       toolConfig: {\n     *         functionCallingConfig: {\n     *           mode: FunctionCallingConfigMode.ANY,\n     *           allowedFunctionNames: ['controlLight'],\n     *         },\n     *       },\n     *     },\n     *   });\n     *  console.debug(JSON.stringify(response.functionCalls));\n     * ```\n     */\n    get functionCalls() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning function calls from the first one.');\n        }\n        const functionCalls = (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) === null || _h === void 0 ? void 0 : _h.filter((part) => part.functionCall).map((part) => part.functionCall).filter((functionCall) => functionCall !== undefined);\n        if ((functionCalls === null || functionCalls === void 0 ? void 0 : functionCalls.length) === 0) {\n            return undefined;\n        }\n        return functionCalls;\n    }\n    /**\n     * Returns the first executable code from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the executable code from\n     * the first one will be returned.\n     * If there are no executable code in the response, undefined will be\n     * returned.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateContent({\n     *   model: 'gemini-2.0-flash',\n     *   contents:\n     *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n     *   config: {\n     *     tools: [{codeExecution: {}}],\n     *   },\n     * });\n     *\n     * console.debug(response.executableCode);\n     * ```\n     */\n    get executableCode() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning executable code from the first one.');\n        }\n        const executableCode = (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) === null || _h === void 0 ? void 0 : _h.filter((part) => part.executableCode).map((part) => part.executableCode).filter((executableCode) => executableCode !== undefined);\n        if ((executableCode === null || executableCode === void 0 ? void 0 : executableCode.length) === 0) {\n            return undefined;\n        }\n        return (_j = executableCode === null || executableCode === void 0 ? void 0 : executableCode[0]) === null || _j === void 0 ? void 0 : _j.code;\n    }\n    /**\n     * Returns the first code execution result from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the code execution result from\n     * the first one will be returned.\n     * If there are no code execution result in the response, undefined will be returned.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateContent({\n     *   model: 'gemini-2.0-flash',\n     *   contents:\n     *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n     *   config: {\n     *     tools: [{codeExecution: {}}],\n     *   },\n     * });\n     *\n     * console.debug(response.codeExecutionResult);\n     * ```\n     */\n    get codeExecutionResult() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning code execution result from the first one.');\n        }\n        const codeExecutionResult = (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) === null || _h === void 0 ? void 0 : _h.filter((part) => part.codeExecutionResult).map((part) => part.codeExecutionResult).filter((codeExecutionResult) => codeExecutionResult !== undefined);\n        if ((codeExecutionResult === null || codeExecutionResult === void 0 ? void 0 : codeExecutionResult.length) === 0) {\n            return undefined;\n        }\n        return (_j = codeExecutionResult === null || codeExecutionResult === void 0 ? void 0 : codeExecutionResult[0]) === null || _j === void 0 ? void 0 : _j.output;\n    }\n}\n/** Response for the embed_content method. */\nclass EmbedContentResponse {\n}\n/** The output images response. */\nclass GenerateImagesResponse {\n}\n/** Response for counting tokens. */\nclass CountTokensResponse {\n}\n/** Response for computing tokens. */\nclass ComputeTokensResponse {\n}\n/** Response with generated videos. */\nclass GenerateVideosResponse {\n}\n/** Empty response for caches.delete method. */\nclass DeleteCachedContentResponse {\n}\nclass ListCachedContentsResponse {\n}\n/** Response for the list files method. */\nclass ListFilesResponse {\n}\n/** A wrapper class for the http response. */\nclass HttpResponse {\n    constructor(response) {\n        // Process the headers.\n        const headers = {};\n        for (const pair of response.headers.entries()) {\n            headers[pair[0]] = pair[1];\n        }\n        this.headers = headers;\n        // Keep the original response.\n        this.responseInternal = response;\n    }\n    json() {\n        return this.responseInternal.json();\n    }\n}\n/** Response for the create file method. */\nclass CreateFileResponse {\n}\n/** Response for the delete file method. */\nclass DeleteFileResponse {\n}\n/** Represents a single response in a replay. */\nclass ReplayResponse {\n}\n/** Client generated response to a `ToolCall` received from the server.\n\n  Individual `FunctionResponse` objects are matched to the respective\n  `FunctionCall` objects by the `id` field.\n\n  Note that in the unary and server-streaming GenerateContent APIs function\n  calling happens by exchanging the `Content` parts, while in the bidi\n  GenerateContent APIs function calling happens over this dedicated set of\n  messages.\n   */\nclass LiveClientToolResponse {\n}\n/** Parameters for sending tool responses to the live API. */\nclass LiveSendToolResponseParameters {\n    constructor() {\n        /** Tool responses to send to the session. */\n        this.functionResponses = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Caches extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Lists cached content configurations.\n         *\n         * @param params - The parameters for the list request.\n         * @return The paginated results of the list of cached contents.\n         *\n         * @example\n         * ```ts\n         * const cachedContents = await ai.caches.list({config: {'pageSize': 2}});\n         * for (const cachedContent of cachedContents) {\n         *   console.log(cachedContent);\n         * }\n         * ```\n         */\n        this.list = async (params = {}) => {\n            return new Pager(PagedItem.PAGED_ITEM_CACHED_CONTENTS, (x) => this.listInternal(x), await this.listInternal(params), params);\n        };\n    }\n    /**\n     * Creates a cached contents resource.\n     *\n     * @remarks\n     * Context caching is only supported for specific models. See [Gemini\n     * Developer API reference](https://ai.google.dev/gemini-api/docs/caching?lang=node/context-cac)\n     * and [Vertex AI reference](https://cloud.google.com/vertex-ai/generative-ai/docs/context-cache/context-cache-overview#supported_models)\n     * for more information.\n     *\n     * @param params - The parameters for the create request.\n     * @return The created cached content.\n     *\n     * @example\n     * ```ts\n     * const contents = ...; // Initialize the content to cache.\n     * const response = await ai.caches.create({\n     *   model: 'gemini-1.5-flash',\n     *   config: {\n     *    'contents': contents,\n     *    'displayName': 'test cache',\n     *    'systemInstruction': 'What is the sum of the two pdfs?',\n     *    'ttl': '86400s',\n     *  }\n     * });\n     * ```\n     */\n    async create(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = createCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromVertex(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = createCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromMldev(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Gets cached content configurations.\n     *\n     * @param params - The parameters for the get request.\n     * @return The cached content.\n     *\n     * @example\n     * ```ts\n     * await ai.caches.get({name: 'gemini-1.5-flash'});\n     * ```\n     */\n    async get(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromVertex(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromMldev(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Deletes cached content.\n     *\n     * @param params - The parameters for the delete request.\n     * @return The empty response returned by the API.\n     *\n     * @example\n     * ```ts\n     * await ai.caches.delete({name: 'gemini-1.5-flash'});\n     * ```\n     */\n    async delete(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = deleteCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteCachedContentResponseFromVertex();\n                const typedResp = new DeleteCachedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = deleteCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteCachedContentResponseFromMldev();\n                const typedResp = new DeleteCachedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Updates cached content configurations.\n     *\n     * @param params - The parameters for the update request.\n     * @return The updated cached content.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.caches.update({\n     *   name: 'gemini-1.5-flash',\n     *   config: {'ttl': '7600s'}\n     * });\n     * ```\n     */\n    async update(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = updateCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'PATCH',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromVertex(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = updateCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'PATCH',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromMldev(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n    async listInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = listCachedContentsParametersToVertex(this.apiClient, params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listCachedContentsResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new ListCachedContentsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = listCachedContentsParametersToMldev(this.apiClient, params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listCachedContentsResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new ListCachedContentsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns true if the response is valid, false otherwise.\n */\nfunction isValidResponse(response) {\n    var _a;\n    if (response.candidates == undefined || response.candidates.length === 0) {\n        return false;\n    }\n    const content = (_a = response.candidates[0]) === null || _a === void 0 ? void 0 : _a.content;\n    if (content === undefined) {\n        return false;\n    }\n    return isValidContent(content);\n}\nfunction isValidContent(content) {\n    if (content.parts === undefined || content.parts.length === 0) {\n        return false;\n    }\n    for (const part of content.parts) {\n        if (part === undefined || Object.keys(part).length === 0) {\n            return false;\n        }\n        if (part.text !== undefined && part.text === '') {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Validates the history contains the correct roles.\n *\n * @remarks\n * Expects the history to start with a user turn and then alternate between\n * user and model turns.\n *\n * @throws Error if the history does not start with a user turn.\n * @throws Error if the history contains an invalid role.\n */\nfunction validateHistory(history) {\n    // Empty history is valid.\n    if (history.length === 0) {\n        return;\n    }\n    if (history[0].role !== 'user') {\n        throw new Error('History must start with a user turn.');\n    }\n    for (const content of history) {\n        if (content.role !== 'user' && content.role !== 'model') {\n            throw new Error(`Role must be user or model, but got ${content.role}.`);\n        }\n    }\n}\n/**\n * Extracts the curated (valid) history from a comprehensive history.\n *\n * @remarks\n * The model may sometimes generate invalid or empty contents(e.g., due to safty\n * filters or recitation). Extracting valid turns from the history\n * ensures that subsequent requests could be accpeted by the model.\n */\nfunction extractCuratedHistory(comprehensiveHistory) {\n    if (comprehensiveHistory === undefined || comprehensiveHistory.length === 0) {\n        return [];\n    }\n    const curatedHistory = [];\n    const length = comprehensiveHistory.length;\n    let i = 0;\n    let userInput = comprehensiveHistory[0];\n    while (i < length) {\n        if (comprehensiveHistory[i].role === 'user') {\n            userInput = comprehensiveHistory[i];\n            i++;\n        }\n        else {\n            const modelOutput = [];\n            let isValid = true;\n            while (i < length && comprehensiveHistory[i].role === 'model') {\n                modelOutput.push(comprehensiveHistory[i]);\n                if (isValid && !isValidContent(comprehensiveHistory[i])) {\n                    isValid = false;\n                }\n                i++;\n            }\n            if (isValid) {\n                curatedHistory.push(userInput);\n                curatedHistory.push(...modelOutput);\n            }\n        }\n    }\n    return curatedHistory;\n}\n/**\n * A utility class to create a chat session.\n */\nclass Chats {\n    constructor(modelsModule, apiClient) {\n        this.modelsModule = modelsModule;\n        this.apiClient = apiClient;\n    }\n    /**\n     * Creates a new chat session.\n     *\n     * @remarks\n     * The config in the params will be used for all requests within the chat\n     * session unless overridden by a per-request `config` in\n     * @see {@link types.SendMessageParameters#config}.\n     *\n     * @param params - Parameters for creating a chat session.\n     * @returns A new chat session.\n     *\n     * @example\n     * ```ts\n     * const chat = ai.chats.create({\n     *   model: 'gemini-2.0-flash'\n     *   config: {\n     *     temperature: 0.5,\n     *     maxOutputTokens: 1024,\n     *   }\n     * });\n     * ```\n     */\n    create(params) {\n        return new Chat(this.apiClient, this.modelsModule, params.model, params.config, params.history);\n    }\n}\n/**\n * Chat session that enables sending messages to the model with previous\n * conversation context.\n *\n * @remarks\n * The session maintains all the turns between user and model.\n */\nclass Chat {\n    constructor(apiClient, modelsModule, model, config = {}, history = []) {\n        this.apiClient = apiClient;\n        this.modelsModule = modelsModule;\n        this.model = model;\n        this.config = config;\n        this.history = history;\n        // A promise to represent the current state of the message being sent to the\n        // model.\n        this.sendPromise = Promise.resolve();\n        validateHistory(history);\n    }\n    /**\n     * Sends a message to the model and returns the response.\n     *\n     * @remarks\n     * This method will wait for the previous message to be processed before\n     * sending the next message.\n     *\n     * @see {@link Chat#sendMessageStream} for streaming method.\n     * @param params - parameters for sending messages within a chat session.\n     * @returns The model's response.\n     *\n     * @example\n     * ```ts\n     * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n     * const response = await chat.sendMessage({\n     *   message: 'Why is the sky blue?'\n     * });\n     * console.log(response.text);\n     * ```\n     */\n    async sendMessage(params) {\n        var _a;\n        await this.sendPromise;\n        const inputContent = tContent(this.apiClient, params.message);\n        const responsePromise = this.modelsModule.generateContent({\n            model: this.model,\n            contents: this.getHistory(true).concat(inputContent),\n            config: (_a = params.config) !== null && _a !== void 0 ? _a : this.config,\n        });\n        this.sendPromise = (async () => {\n            var _a, _b;\n            const response = await responsePromise;\n            const outputContent = (_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content;\n            const modelOutput = outputContent ? [outputContent] : [];\n            this.recordHistory(inputContent, modelOutput);\n            return;\n        })();\n        await this.sendPromise;\n        return responsePromise;\n    }\n    /**\n     * Sends a message to the model and returns the response in chunks.\n     *\n     * @remarks\n     * This method will wait for the previous message to be processed before\n     * sending the next message.\n     *\n     * @see {@link Chat#sendMessage} for non-streaming method.\n     * @param params - parameters for sending the message.\n     * @return The model's response.\n     *\n     * @example\n     * ```ts\n     * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n     * const response = await chat.sendMessageStream({\n     *   message: 'Why is the sky blue?'\n     * });\n     * for await (const chunk of response) {\n     *   console.log(chunk.text);\n     * }\n     * ```\n     */\n    async sendMessageStream(params) {\n        var _a;\n        await this.sendPromise;\n        const inputContent = tContent(this.apiClient, params.message);\n        const streamResponse = this.modelsModule.generateContentStream({\n            model: this.model,\n            contents: this.getHistory(true).concat(inputContent),\n            config: (_a = params.config) !== null && _a !== void 0 ? _a : this.config,\n        });\n        this.sendPromise = streamResponse.then(() => undefined);\n        const response = await streamResponse;\n        const result = this.processStreamResponse(response, inputContent);\n        return result;\n    }\n    /**\n     * Returns the chat history.\n     *\n     * @remarks\n     * The history is a list of contents alternating between user and model.\n     *\n     * There are two types of history:\n     * - The `curated history` contains only the valid turns between user and\n     * model, which will be included in the subsequent requests sent to the model.\n     * - The `comprehensive history` contains all turns, including invalid or\n     *   empty model outputs, providing a complete record of the history.\n     *\n     * The history is updated after receiving the response from the model,\n     * for streaming response, it means receiving the last chunk of the response.\n     *\n     * The `comprehensive history` is returned by default. To get the `curated\n     * history`, set the `curated` parameter to `true`.\n     *\n     * @param curated - whether to return the curated history or the comprehensive\n     *     history.\n     * @return History contents alternating between user and model for the entire\n     *     chat session.\n     */\n    getHistory(curated = false) {\n        return curated ? extractCuratedHistory(this.history) : this.history;\n    }\n    processStreamResponse(streamResponse, inputContent) {\n        var _a, _b;\n        return __asyncGenerator(this, arguments, function* processStreamResponse_1() {\n            var _c, e_1, _d, _e;\n            const outputContent = [];\n            try {\n                for (var _f = true, streamResponse_1 = __asyncValues(streamResponse), streamResponse_1_1; streamResponse_1_1 = yield __await(streamResponse_1.next()), _c = streamResponse_1_1.done, !_c; _f = true) {\n                    _e = streamResponse_1_1.value;\n                    _f = false;\n                    const chunk = _e;\n                    if (isValidResponse(chunk)) {\n                        const content = (_b = (_a = chunk.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content;\n                        if (content !== undefined) {\n                            outputContent.push(content);\n                        }\n                    }\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_f && !_c && (_d = streamResponse_1.return)) yield __await(_d.call(streamResponse_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.recordHistory(inputContent, outputContent);\n        });\n    }\n    recordHistory(userInput, modelOutput) {\n        let outputContents = [];\n        if (modelOutput.length > 0 &&\n            modelOutput.every((content) => content.role === 'model')) {\n            outputContents = modelOutput;\n        }\n        else {\n            // Appends an empty content when model returns empty response, so that the\n            // history is always alternating between user and model.\n            outputContents.push({\n                role: 'model',\n                parts: [],\n            });\n        }\n        this.history.push(userInput);\n        this.history.push(...outputContents);\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction listFilesConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    return toObject;\n}\nfunction listFilesParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listFilesConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction fileStatusToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromDetails = getValueByPath(fromObject, ['details']);\n    if (fromDetails != null) {\n        setValueByPath(toObject, ['details'], fromDetails);\n    }\n    const fromMessage = getValueByPath(fromObject, ['message']);\n    if (fromMessage != null) {\n        setValueByPath(toObject, ['message'], fromMessage);\n    }\n    const fromCode = getValueByPath(fromObject, ['code']);\n    if (fromCode != null) {\n        setValueByPath(toObject, ['code'], fromCode);\n    }\n    return toObject;\n}\nfunction fileToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    const fromSizeBytes = getValueByPath(fromObject, ['sizeBytes']);\n    if (fromSizeBytes != null) {\n        setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromExpirationTime = getValueByPath(fromObject, [\n        'expirationTime',\n    ]);\n    if (fromExpirationTime != null) {\n        setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromSha256Hash = getValueByPath(fromObject, ['sha256Hash']);\n    if (fromSha256Hash != null) {\n        setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n    }\n    const fromUri = getValueByPath(fromObject, ['uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromDownloadUri = getValueByPath(fromObject, ['downloadUri']);\n    if (fromDownloadUri != null) {\n        setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], fromState);\n    }\n    const fromSource = getValueByPath(fromObject, ['source']);\n    if (fromSource != null) {\n        setValueByPath(toObject, ['source'], fromSource);\n    }\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fileStatusToMldev(apiClient, fromError));\n    }\n    return toObject;\n}\nfunction createFileParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromFile = getValueByPath(fromObject, ['file']);\n    if (fromFile != null) {\n        setValueByPath(toObject, ['file'], fileToMldev(apiClient, fromFile));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction getFileParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'file'], tFileName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction deleteFileParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'file'], tFileName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction fileStatusFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromDetails = getValueByPath(fromObject, ['details']);\n    if (fromDetails != null) {\n        setValueByPath(toObject, ['details'], fromDetails);\n    }\n    const fromMessage = getValueByPath(fromObject, ['message']);\n    if (fromMessage != null) {\n        setValueByPath(toObject, ['message'], fromMessage);\n    }\n    const fromCode = getValueByPath(fromObject, ['code']);\n    if (fromCode != null) {\n        setValueByPath(toObject, ['code'], fromCode);\n    }\n    return toObject;\n}\nfunction fileFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    const fromSizeBytes = getValueByPath(fromObject, ['sizeBytes']);\n    if (fromSizeBytes != null) {\n        setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromExpirationTime = getValueByPath(fromObject, [\n        'expirationTime',\n    ]);\n    if (fromExpirationTime != null) {\n        setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromSha256Hash = getValueByPath(fromObject, ['sha256Hash']);\n    if (fromSha256Hash != null) {\n        setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n    }\n    const fromUri = getValueByPath(fromObject, ['uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromDownloadUri = getValueByPath(fromObject, ['downloadUri']);\n    if (fromDownloadUri != null) {\n        setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], fromState);\n    }\n    const fromSource = getValueByPath(fromObject, ['source']);\n    if (fromSource != null) {\n        setValueByPath(toObject, ['source'], fromSource);\n    }\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fileStatusFromMldev(apiClient, fromError));\n    }\n    return toObject;\n}\nfunction listFilesResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromFiles = getValueByPath(fromObject, ['files']);\n    if (fromFiles != null) {\n        if (Array.isArray(fromFiles)) {\n            setValueByPath(toObject, ['files'], fromFiles.map((item) => {\n                return fileFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['files'], fromFiles);\n        }\n    }\n    return toObject;\n}\nfunction createFileResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction deleteFileResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Files extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Lists all current project files from the service.\n         *\n         * @param params - The parameters for the list request\n         * @return The paginated results of the list of files\n         *\n         * @example\n         * The following code prints the names of all files from the service, the\n         * size of each page is 10.\n         *\n         * ```ts\n         * const listResponse = await ai.files.list({config: {'pageSize': 10}});\n         * for await (const file of listResponse) {\n         *   console.log(file.name);\n         * }\n         * ```\n         */\n        this.list = async (params = {}) => {\n            return new Pager(PagedItem.PAGED_ITEM_FILES, (x) => this.listInternal(x), await this.listInternal(params), params);\n        };\n    }\n    /**\n     * Uploads a file asynchronously to the Gemini API.\n     * This method is not available in Vertex AI.\n     * Supported upload sources:\n     * - Node.js: File path (string) or Blob object.\n     * - Browser: Blob object (e.g., File).\n     *\n     * @remarks\n     * The `mimeType` can be specified in the `config` parameter. If omitted:\n     *  - For file path (string) inputs, the `mimeType` will be inferred from the\n     *     file extension.\n     *  - For Blob object inputs, the `mimeType` will be set to the Blob's `type`\n     *     property.\n     * Somex eamples for file extension to mimeType mapping:\n     * .txt -> text/plain\n     * .json -> application/json\n     * .jpg  -> image/jpeg\n     * .png -> image/png\n     * .mp3 -> audio/mpeg\n     * .mp4 -> video/mp4\n     *\n     * This section can contain multiple paragraphs and code examples.\n     *\n     * @param params - Optional parameters specified in the\n     *        `types.UploadFileParameters` interface.\n     *         @see {@link types.UploadFileParameters#config} for the optional\n     *         config in the parameters.\n     * @return A promise that resolves to a `types.File` object.\n     * @throws An error if called on a Vertex AI client.\n     * @throws An error if the `mimeType` is not provided and can not be inferred,\n     * the `mimeType` can be provided in the `params.config` parameter.\n     * @throws An error occurs if a suitable upload location cannot be established.\n     *\n     * @example\n     * The following code uploads a file to Gemini API.\n     *\n     * ```ts\n     * const file = await ai.files.upload({file: 'file.txt', config: {\n     *   mimeType: 'text/plain',\n     * }});\n     * console.log(file.name);\n     * ```\n     */\n    async upload(params) {\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('Vertex AI does not support uploading files. You can share files through a GCS bucket.');\n        }\n        return this.apiClient\n            .uploadFile(params.file, params.config)\n            .then((response) => {\n            const file = fileFromMldev(this.apiClient, response);\n            return file;\n        });\n    }\n    async listInternal(params) {\n        var _a;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = listFilesParametersToMldev(this.apiClient, params);\n            path = formatMap('files', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listFilesResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new ListFilesResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    async createInternal(params) {\n        var _a;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = createFileParametersToMldev(this.apiClient, params);\n            path = formatMap('upload/v1beta/files', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = createFileResponseFromMldev();\n                const typedResp = new CreateFileResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Retrieves the file information from the service.\n     *\n     * @param params - The parameters for the get request\n     * @return The Promise that resolves to the types.File object requested.\n     *\n     * @example\n     * ```ts\n     * const config: GetFileParameters = {\n     *   name: fileName,\n     * };\n     * file = await ai.files.get(config);\n     * console.log(file.name);\n     * ```\n     */\n    async get(params) {\n        var _a;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = getFileParametersToMldev(this.apiClient, params);\n            path = formatMap('files/{file}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = fileFromMldev(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Deletes a remotely stored file.\n     *\n     * @param params - The parameters for the delete request.\n     * @return The DeleteFileResponse, the response for the delete method.\n     *\n     * @example\n     * The following code deletes an example file named \"files/mehozpxf877d\".\n     *\n     * ```ts\n     * await ai.files.delete({name: file.name});\n     * ```\n     */\n    async delete(params) {\n        var _a;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = deleteFileParametersToMldev(this.apiClient, params);\n            path = formatMap('files/{file}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteFileResponseFromMldev();\n                const typedResp = new DeleteFileResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction partToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['videoMetadata']) !== undefined) {\n        throw new Error('videoMetadata parameter is not supported in Gemini API.');\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction partToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partToMldev$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction contentToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partToVertex$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromExample = getValueByPath(fromObject, ['example']);\n    if (fromExample != null) {\n        setValueByPath(toObject, ['example'], fromExample);\n    }\n    const fromPattern = getValueByPath(fromObject, ['pattern']);\n    if (fromPattern != null) {\n        setValueByPath(toObject, ['pattern'], fromPattern);\n    }\n    const fromDefault = getValueByPath(fromObject, ['default']);\n    if (fromDefault != null) {\n        setValueByPath(toObject, ['default'], fromDefault);\n    }\n    const fromMaxLength = getValueByPath(fromObject, ['maxLength']);\n    if (fromMaxLength != null) {\n        setValueByPath(toObject, ['maxLength'], fromMaxLength);\n    }\n    const fromMinLength = getValueByPath(fromObject, ['minLength']);\n    if (fromMinLength != null) {\n        setValueByPath(toObject, ['minLength'], fromMinLength);\n    }\n    const fromMinProperties = getValueByPath(fromObject, [\n        'minProperties',\n    ]);\n    if (fromMinProperties != null) {\n        setValueByPath(toObject, ['minProperties'], fromMinProperties);\n    }\n    const fromMaxProperties = getValueByPath(fromObject, [\n        'maxProperties',\n    ]);\n    if (fromMaxProperties != null) {\n        setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n    }\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['response']) !== undefined) {\n        throw new Error('response parameter is not supported in Gemini API.');\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    return toObject;\n}\nfunction functionDeclarationToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], schemaToVertex$1(apiClient, fromResponse));\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev$1() {\n    const toObject = {};\n    return toObject;\n}\nfunction googleSearchToVertex$1() {\n    const toObject = {};\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev$1(apiClient, fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToVertex$1(apiClient, fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction toolToMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        if (Array.isArray(fromFunctionDeclarations)) {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations.map((item) => {\n                return functionDeclarationToMldev$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations);\n        }\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev$1());\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev$1(apiClient, fromGoogleSearchRetrieval));\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction toolToVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        if (Array.isArray(fromFunctionDeclarations)) {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations.map((item) => {\n                return functionDeclarationToVertex$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations);\n        }\n    }\n    const fromRetrieval = getValueByPath(fromObject, ['retrieval']);\n    if (fromRetrieval != null) {\n        setValueByPath(toObject, ['retrieval'], fromRetrieval);\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToVertex$1());\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToVertex$1(apiClient, fromGoogleSearchRetrieval));\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction sessionResumptionConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromHandle = getValueByPath(fromObject, ['handle']);\n    if (fromHandle != null) {\n        setValueByPath(toObject, ['handle'], fromHandle);\n    }\n    if (getValueByPath(fromObject, ['transparent']) !== undefined) {\n        throw new Error('transparent parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction sessionResumptionConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromHandle = getValueByPath(fromObject, ['handle']);\n    if (fromHandle != null) {\n        setValueByPath(toObject, ['handle'], fromHandle);\n    }\n    const fromTransparent = getValueByPath(fromObject, ['transparent']);\n    if (fromTransparent != null) {\n        setValueByPath(toObject, ['transparent'], fromTransparent);\n    }\n    return toObject;\n}\nfunction audioTranscriptionConfigToMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction audioTranscriptionConfigToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction automaticActivityDetectionToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromDisabled = getValueByPath(fromObject, ['disabled']);\n    if (fromDisabled != null) {\n        setValueByPath(toObject, ['disabled'], fromDisabled);\n    }\n    const fromStartOfSpeechSensitivity = getValueByPath(fromObject, [\n        'startOfSpeechSensitivity',\n    ]);\n    if (fromStartOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['startOfSpeechSensitivity'], fromStartOfSpeechSensitivity);\n    }\n    const fromEndOfSpeechSensitivity = getValueByPath(fromObject, [\n        'endOfSpeechSensitivity',\n    ]);\n    if (fromEndOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['endOfSpeechSensitivity'], fromEndOfSpeechSensitivity);\n    }\n    const fromPrefixPaddingMs = getValueByPath(fromObject, [\n        'prefixPaddingMs',\n    ]);\n    if (fromPrefixPaddingMs != null) {\n        setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n    }\n    const fromSilenceDurationMs = getValueByPath(fromObject, [\n        'silenceDurationMs',\n    ]);\n    if (fromSilenceDurationMs != null) {\n        setValueByPath(toObject, ['silenceDurationMs'], fromSilenceDurationMs);\n    }\n    return toObject;\n}\nfunction automaticActivityDetectionToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromDisabled = getValueByPath(fromObject, ['disabled']);\n    if (fromDisabled != null) {\n        setValueByPath(toObject, ['disabled'], fromDisabled);\n    }\n    const fromStartOfSpeechSensitivity = getValueByPath(fromObject, [\n        'startOfSpeechSensitivity',\n    ]);\n    if (fromStartOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['startOfSpeechSensitivity'], fromStartOfSpeechSensitivity);\n    }\n    const fromEndOfSpeechSensitivity = getValueByPath(fromObject, [\n        'endOfSpeechSensitivity',\n    ]);\n    if (fromEndOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['endOfSpeechSensitivity'], fromEndOfSpeechSensitivity);\n    }\n    const fromPrefixPaddingMs = getValueByPath(fromObject, [\n        'prefixPaddingMs',\n    ]);\n    if (fromPrefixPaddingMs != null) {\n        setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n    }\n    const fromSilenceDurationMs = getValueByPath(fromObject, [\n        'silenceDurationMs',\n    ]);\n    if (fromSilenceDurationMs != null) {\n        setValueByPath(toObject, ['silenceDurationMs'], fromSilenceDurationMs);\n    }\n    return toObject;\n}\nfunction realtimeInputConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromAutomaticActivityDetection = getValueByPath(fromObject, [\n        'automaticActivityDetection',\n    ]);\n    if (fromAutomaticActivityDetection != null) {\n        setValueByPath(toObject, ['automaticActivityDetection'], automaticActivityDetectionToMldev(apiClient, fromAutomaticActivityDetection));\n    }\n    const fromActivityHandling = getValueByPath(fromObject, [\n        'activityHandling',\n    ]);\n    if (fromActivityHandling != null) {\n        setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n    }\n    const fromTurnCoverage = getValueByPath(fromObject, ['turnCoverage']);\n    if (fromTurnCoverage != null) {\n        setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n    }\n    return toObject;\n}\nfunction realtimeInputConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromAutomaticActivityDetection = getValueByPath(fromObject, [\n        'automaticActivityDetection',\n    ]);\n    if (fromAutomaticActivityDetection != null) {\n        setValueByPath(toObject, ['automaticActivityDetection'], automaticActivityDetectionToVertex(apiClient, fromAutomaticActivityDetection));\n    }\n    const fromActivityHandling = getValueByPath(fromObject, [\n        'activityHandling',\n    ]);\n    if (fromActivityHandling != null) {\n        setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n    }\n    const fromTurnCoverage = getValueByPath(fromObject, ['turnCoverage']);\n    if (fromTurnCoverage != null) {\n        setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n    }\n    return toObject;\n}\nfunction slidingWindowToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromTargetTokens = getValueByPath(fromObject, ['targetTokens']);\n    if (fromTargetTokens != null) {\n        setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n    }\n    return toObject;\n}\nfunction slidingWindowToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromTargetTokens = getValueByPath(fromObject, ['targetTokens']);\n    if (fromTargetTokens != null) {\n        setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n    }\n    return toObject;\n}\nfunction contextWindowCompressionConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromTriggerTokens = getValueByPath(fromObject, [\n        'triggerTokens',\n    ]);\n    if (fromTriggerTokens != null) {\n        setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n    }\n    const fromSlidingWindow = getValueByPath(fromObject, [\n        'slidingWindow',\n    ]);\n    if (fromSlidingWindow != null) {\n        setValueByPath(toObject, ['slidingWindow'], slidingWindowToMldev(apiClient, fromSlidingWindow));\n    }\n    return toObject;\n}\nfunction contextWindowCompressionConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromTriggerTokens = getValueByPath(fromObject, [\n        'triggerTokens',\n    ]);\n    if (fromTriggerTokens != null) {\n        setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n    }\n    const fromSlidingWindow = getValueByPath(fromObject, [\n        'slidingWindow',\n    ]);\n    if (fromSlidingWindow != null) {\n        setValueByPath(toObject, ['slidingWindow'], slidingWindowToVertex(apiClient, fromSlidingWindow));\n    }\n    return toObject;\n}\nfunction liveConnectConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig'], fromGenerationConfig);\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (parentObject !== undefined && fromResponseModalities != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'responseModalities'], fromResponseModalities);\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (parentObject !== undefined && fromTemperature != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (parentObject !== undefined && fromTopP != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (parentObject !== undefined && fromTopK != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topK'], fromTopK);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (parentObject !== undefined && fromMaxOutputTokens != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (parentObject !== undefined && fromMediaResolution != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'mediaResolution'], fromMediaResolution);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'seed'], fromSeed);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (parentObject !== undefined && fromSpeechConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'speechConfig'], fromSpeechConfig);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['setup', 'systemInstruction'], contentToMldev$1(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['setup', 'tools'], tTools(apiClient, tTools(apiClient, fromTools).map((item) => {\n                return toolToMldev$1(apiClient, tTool(apiClient, item));\n            })));\n        }\n        else {\n            setValueByPath(parentObject, ['setup', 'tools'], tTools(apiClient, fromTools));\n        }\n    }\n    const fromSessionResumption = getValueByPath(fromObject, [\n        'sessionResumption',\n    ]);\n    if (parentObject !== undefined && fromSessionResumption != null) {\n        setValueByPath(parentObject, ['setup', 'sessionResumption'], sessionResumptionConfigToMldev(apiClient, fromSessionResumption));\n    }\n    if (getValueByPath(fromObject, ['inputAudioTranscription']) !== undefined) {\n        throw new Error('inputAudioTranscription parameter is not supported in Gemini API.');\n    }\n    const fromOutputAudioTranscription = getValueByPath(fromObject, [\n        'outputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'outputAudioTranscription'], audioTranscriptionConfigToMldev());\n    }\n    const fromRealtimeInputConfig = getValueByPath(fromObject, [\n        'realtimeInputConfig',\n    ]);\n    if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n        setValueByPath(parentObject, ['setup', 'realtimeInputConfig'], realtimeInputConfigToMldev(apiClient, fromRealtimeInputConfig));\n    }\n    const fromContextWindowCompression = getValueByPath(fromObject, [\n        'contextWindowCompression',\n    ]);\n    if (parentObject !== undefined && fromContextWindowCompression != null) {\n        setValueByPath(parentObject, ['setup', 'contextWindowCompression'], contextWindowCompressionConfigToMldev(apiClient, fromContextWindowCompression));\n    }\n    return toObject;\n}\nfunction liveConnectConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig'], fromGenerationConfig);\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (parentObject !== undefined && fromResponseModalities != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'responseModalities'], fromResponseModalities);\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (parentObject !== undefined && fromTemperature != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (parentObject !== undefined && fromTopP != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (parentObject !== undefined && fromTopK != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topK'], fromTopK);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (parentObject !== undefined && fromMaxOutputTokens != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (parentObject !== undefined && fromMediaResolution != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'mediaResolution'], fromMediaResolution);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'seed'], fromSeed);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (parentObject !== undefined && fromSpeechConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'speechConfig'], fromSpeechConfig);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['setup', 'systemInstruction'], contentToVertex$1(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['setup', 'tools'], tTools(apiClient, tTools(apiClient, fromTools).map((item) => {\n                return toolToVertex$1(apiClient, tTool(apiClient, item));\n            })));\n        }\n        else {\n            setValueByPath(parentObject, ['setup', 'tools'], tTools(apiClient, fromTools));\n        }\n    }\n    const fromSessionResumption = getValueByPath(fromObject, [\n        'sessionResumption',\n    ]);\n    if (parentObject !== undefined && fromSessionResumption != null) {\n        setValueByPath(parentObject, ['setup', 'sessionResumption'], sessionResumptionConfigToVertex(apiClient, fromSessionResumption));\n    }\n    const fromInputAudioTranscription = getValueByPath(fromObject, [\n        'inputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromInputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'inputAudioTranscription'], audioTranscriptionConfigToVertex());\n    }\n    const fromOutputAudioTranscription = getValueByPath(fromObject, [\n        'outputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'outputAudioTranscription'], audioTranscriptionConfigToVertex());\n    }\n    const fromRealtimeInputConfig = getValueByPath(fromObject, [\n        'realtimeInputConfig',\n    ]);\n    if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n        setValueByPath(parentObject, ['setup', 'realtimeInputConfig'], realtimeInputConfigToVertex(apiClient, fromRealtimeInputConfig));\n    }\n    const fromContextWindowCompression = getValueByPath(fromObject, [\n        'contextWindowCompression',\n    ]);\n    if (parentObject !== undefined && fromContextWindowCompression != null) {\n        setValueByPath(parentObject, ['setup', 'contextWindowCompression'], contextWindowCompressionConfigToVertex(apiClient, fromContextWindowCompression));\n    }\n    return toObject;\n}\nfunction liveConnectParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['setup', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], liveConnectConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction liveConnectParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['setup', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], liveConnectConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction liveServerSetupCompleteFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction liveServerSetupCompleteFromVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction partFromMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction partFromVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partFromMldev$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction contentFromVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partFromVertex$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction transcriptionFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromFinished = getValueByPath(fromObject, ['finished']);\n    if (fromFinished != null) {\n        setValueByPath(toObject, ['finished'], fromFinished);\n    }\n    return toObject;\n}\nfunction transcriptionFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromFinished = getValueByPath(fromObject, ['finished']);\n    if (fromFinished != null) {\n        setValueByPath(toObject, ['finished'], fromFinished);\n    }\n    return toObject;\n}\nfunction liveServerContentFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModelTurn = getValueByPath(fromObject, ['modelTurn']);\n    if (fromModelTurn != null) {\n        setValueByPath(toObject, ['modelTurn'], contentFromMldev$1(apiClient, fromModelTurn));\n    }\n    const fromTurnComplete = getValueByPath(fromObject, ['turnComplete']);\n    if (fromTurnComplete != null) {\n        setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n    }\n    const fromInterrupted = getValueByPath(fromObject, ['interrupted']);\n    if (fromInterrupted != null) {\n        setValueByPath(toObject, ['interrupted'], fromInterrupted);\n    }\n    const fromGenerationComplete = getValueByPath(fromObject, [\n        'generationComplete',\n    ]);\n    if (fromGenerationComplete != null) {\n        setValueByPath(toObject, ['generationComplete'], fromGenerationComplete);\n    }\n    const fromInputTranscription = getValueByPath(fromObject, [\n        'inputTranscription',\n    ]);\n    if (fromInputTranscription != null) {\n        setValueByPath(toObject, ['inputTranscription'], transcriptionFromMldev(apiClient, fromInputTranscription));\n    }\n    const fromOutputTranscription = getValueByPath(fromObject, [\n        'outputTranscription',\n    ]);\n    if (fromOutputTranscription != null) {\n        setValueByPath(toObject, ['outputTranscription'], transcriptionFromMldev(apiClient, fromOutputTranscription));\n    }\n    return toObject;\n}\nfunction liveServerContentFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModelTurn = getValueByPath(fromObject, ['modelTurn']);\n    if (fromModelTurn != null) {\n        setValueByPath(toObject, ['modelTurn'], contentFromVertex$1(apiClient, fromModelTurn));\n    }\n    const fromTurnComplete = getValueByPath(fromObject, ['turnComplete']);\n    if (fromTurnComplete != null) {\n        setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n    }\n    const fromInterrupted = getValueByPath(fromObject, ['interrupted']);\n    if (fromInterrupted != null) {\n        setValueByPath(toObject, ['interrupted'], fromInterrupted);\n    }\n    const fromGenerationComplete = getValueByPath(fromObject, [\n        'generationComplete',\n    ]);\n    if (fromGenerationComplete != null) {\n        setValueByPath(toObject, ['generationComplete'], fromGenerationComplete);\n    }\n    const fromInputTranscription = getValueByPath(fromObject, [\n        'inputTranscription',\n    ]);\n    if (fromInputTranscription != null) {\n        setValueByPath(toObject, ['inputTranscription'], transcriptionFromVertex(apiClient, fromInputTranscription));\n    }\n    const fromOutputTranscription = getValueByPath(fromObject, [\n        'outputTranscription',\n    ]);\n    if (fromOutputTranscription != null) {\n        setValueByPath(toObject, ['outputTranscription'], transcriptionFromVertex(apiClient, fromOutputTranscription));\n    }\n    return toObject;\n}\nfunction functionCallFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromId = getValueByPath(fromObject, ['id']);\n    if (fromId != null) {\n        setValueByPath(toObject, ['id'], fromId);\n    }\n    const fromArgs = getValueByPath(fromObject, ['args']);\n    if (fromArgs != null) {\n        setValueByPath(toObject, ['args'], fromArgs);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    return toObject;\n}\nfunction functionCallFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromArgs = getValueByPath(fromObject, ['args']);\n    if (fromArgs != null) {\n        setValueByPath(toObject, ['args'], fromArgs);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    return toObject;\n}\nfunction liveServerToolCallFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionCalls = getValueByPath(fromObject, [\n        'functionCalls',\n    ]);\n    if (fromFunctionCalls != null) {\n        if (Array.isArray(fromFunctionCalls)) {\n            setValueByPath(toObject, ['functionCalls'], fromFunctionCalls.map((item) => {\n                return functionCallFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionCalls'], fromFunctionCalls);\n        }\n    }\n    return toObject;\n}\nfunction liveServerToolCallFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionCalls = getValueByPath(fromObject, [\n        'functionCalls',\n    ]);\n    if (fromFunctionCalls != null) {\n        if (Array.isArray(fromFunctionCalls)) {\n            setValueByPath(toObject, ['functionCalls'], fromFunctionCalls.map((item) => {\n                return functionCallFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionCalls'], fromFunctionCalls);\n        }\n    }\n    return toObject;\n}\nfunction liveServerToolCallCancellationFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromIds = getValueByPath(fromObject, ['ids']);\n    if (fromIds != null) {\n        setValueByPath(toObject, ['ids'], fromIds);\n    }\n    return toObject;\n}\nfunction liveServerToolCallCancellationFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromIds = getValueByPath(fromObject, ['ids']);\n    if (fromIds != null) {\n        setValueByPath(toObject, ['ids'], fromIds);\n    }\n    return toObject;\n}\nfunction modalityTokenCountFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModality = getValueByPath(fromObject, ['modality']);\n    if (fromModality != null) {\n        setValueByPath(toObject, ['modality'], fromModality);\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    return toObject;\n}\nfunction modalityTokenCountFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModality = getValueByPath(fromObject, ['modality']);\n    if (fromModality != null) {\n        setValueByPath(toObject, ['modality'], fromModality);\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    return toObject;\n}\nfunction usageMetadataFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromPromptTokenCount = getValueByPath(fromObject, [\n        'promptTokenCount',\n    ]);\n    if (fromPromptTokenCount != null) {\n        setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n    }\n    const fromCachedContentTokenCount = getValueByPath(fromObject, [\n        'cachedContentTokenCount',\n    ]);\n    if (fromCachedContentTokenCount != null) {\n        setValueByPath(toObject, ['cachedContentTokenCount'], fromCachedContentTokenCount);\n    }\n    const fromResponseTokenCount = getValueByPath(fromObject, [\n        'responseTokenCount',\n    ]);\n    if (fromResponseTokenCount != null) {\n        setValueByPath(toObject, ['responseTokenCount'], fromResponseTokenCount);\n    }\n    const fromToolUsePromptTokenCount = getValueByPath(fromObject, [\n        'toolUsePromptTokenCount',\n    ]);\n    if (fromToolUsePromptTokenCount != null) {\n        setValueByPath(toObject, ['toolUsePromptTokenCount'], fromToolUsePromptTokenCount);\n    }\n    const fromThoughtsTokenCount = getValueByPath(fromObject, [\n        'thoughtsTokenCount',\n    ]);\n    if (fromThoughtsTokenCount != null) {\n        setValueByPath(toObject, ['thoughtsTokenCount'], fromThoughtsTokenCount);\n    }\n    const fromTotalTokenCount = getValueByPath(fromObject, [\n        'totalTokenCount',\n    ]);\n    if (fromTotalTokenCount != null) {\n        setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n    }\n    const fromPromptTokensDetails = getValueByPath(fromObject, [\n        'promptTokensDetails',\n    ]);\n    if (fromPromptTokensDetails != null) {\n        if (Array.isArray(fromPromptTokensDetails)) {\n            setValueByPath(toObject, ['promptTokensDetails'], fromPromptTokensDetails.map((item) => {\n                return modalityTokenCountFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['promptTokensDetails'], fromPromptTokensDetails);\n        }\n    }\n    const fromCacheTokensDetails = getValueByPath(fromObject, [\n        'cacheTokensDetails',\n    ]);\n    if (fromCacheTokensDetails != null) {\n        if (Array.isArray(fromCacheTokensDetails)) {\n            setValueByPath(toObject, ['cacheTokensDetails'], fromCacheTokensDetails.map((item) => {\n                return modalityTokenCountFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['cacheTokensDetails'], fromCacheTokensDetails);\n        }\n    }\n    const fromResponseTokensDetails = getValueByPath(fromObject, [\n        'responseTokensDetails',\n    ]);\n    if (fromResponseTokensDetails != null) {\n        if (Array.isArray(fromResponseTokensDetails)) {\n            setValueByPath(toObject, ['responseTokensDetails'], fromResponseTokensDetails.map((item) => {\n                return modalityTokenCountFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['responseTokensDetails'], fromResponseTokensDetails);\n        }\n    }\n    const fromToolUsePromptTokensDetails = getValueByPath(fromObject, [\n        'toolUsePromptTokensDetails',\n    ]);\n    if (fromToolUsePromptTokensDetails != null) {\n        if (Array.isArray(fromToolUsePromptTokensDetails)) {\n            setValueByPath(toObject, ['toolUsePromptTokensDetails'], fromToolUsePromptTokensDetails.map((item) => {\n                return modalityTokenCountFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['toolUsePromptTokensDetails'], fromToolUsePromptTokensDetails);\n        }\n    }\n    return toObject;\n}\nfunction usageMetadataFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromPromptTokenCount = getValueByPath(fromObject, [\n        'promptTokenCount',\n    ]);\n    if (fromPromptTokenCount != null) {\n        setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n    }\n    const fromCachedContentTokenCount = getValueByPath(fromObject, [\n        'cachedContentTokenCount',\n    ]);\n    if (fromCachedContentTokenCount != null) {\n        setValueByPath(toObject, ['cachedContentTokenCount'], fromCachedContentTokenCount);\n    }\n    const fromResponseTokenCount = getValueByPath(fromObject, [\n        'candidatesTokenCount',\n    ]);\n    if (fromResponseTokenCount != null) {\n        setValueByPath(toObject, ['responseTokenCount'], fromResponseTokenCount);\n    }\n    const fromToolUsePromptTokenCount = getValueByPath(fromObject, [\n        'toolUsePromptTokenCount',\n    ]);\n    if (fromToolUsePromptTokenCount != null) {\n        setValueByPath(toObject, ['toolUsePromptTokenCount'], fromToolUsePromptTokenCount);\n    }\n    const fromThoughtsTokenCount = getValueByPath(fromObject, [\n        'thoughtsTokenCount',\n    ]);\n    if (fromThoughtsTokenCount != null) {\n        setValueByPath(toObject, ['thoughtsTokenCount'], fromThoughtsTokenCount);\n    }\n    const fromTotalTokenCount = getValueByPath(fromObject, [\n        'totalTokenCount',\n    ]);\n    if (fromTotalTokenCount != null) {\n        setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n    }\n    const fromPromptTokensDetails = getValueByPath(fromObject, [\n        'promptTokensDetails',\n    ]);\n    if (fromPromptTokensDetails != null) {\n        if (Array.isArray(fromPromptTokensDetails)) {\n            setValueByPath(toObject, ['promptTokensDetails'], fromPromptTokensDetails.map((item) => {\n                return modalityTokenCountFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['promptTokensDetails'], fromPromptTokensDetails);\n        }\n    }\n    const fromCacheTokensDetails = getValueByPath(fromObject, [\n        'cacheTokensDetails',\n    ]);\n    if (fromCacheTokensDetails != null) {\n        if (Array.isArray(fromCacheTokensDetails)) {\n            setValueByPath(toObject, ['cacheTokensDetails'], fromCacheTokensDetails.map((item) => {\n                return modalityTokenCountFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['cacheTokensDetails'], fromCacheTokensDetails);\n        }\n    }\n    const fromResponseTokensDetails = getValueByPath(fromObject, [\n        'candidatesTokensDetails',\n    ]);\n    if (fromResponseTokensDetails != null) {\n        if (Array.isArray(fromResponseTokensDetails)) {\n            setValueByPath(toObject, ['responseTokensDetails'], fromResponseTokensDetails.map((item) => {\n                return modalityTokenCountFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['responseTokensDetails'], fromResponseTokensDetails);\n        }\n    }\n    const fromToolUsePromptTokensDetails = getValueByPath(fromObject, [\n        'toolUsePromptTokensDetails',\n    ]);\n    if (fromToolUsePromptTokensDetails != null) {\n        if (Array.isArray(fromToolUsePromptTokensDetails)) {\n            setValueByPath(toObject, ['toolUsePromptTokensDetails'], fromToolUsePromptTokensDetails.map((item) => {\n                return modalityTokenCountFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['toolUsePromptTokensDetails'], fromToolUsePromptTokensDetails);\n        }\n    }\n    const fromTrafficType = getValueByPath(fromObject, ['trafficType']);\n    if (fromTrafficType != null) {\n        setValueByPath(toObject, ['trafficType'], fromTrafficType);\n    }\n    return toObject;\n}\nfunction liveServerGoAwayFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromTimeLeft = getValueByPath(fromObject, ['timeLeft']);\n    if (fromTimeLeft != null) {\n        setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n    }\n    return toObject;\n}\nfunction liveServerGoAwayFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromTimeLeft = getValueByPath(fromObject, ['timeLeft']);\n    if (fromTimeLeft != null) {\n        setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n    }\n    return toObject;\n}\nfunction liveServerSessionResumptionUpdateFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromNewHandle = getValueByPath(fromObject, ['newHandle']);\n    if (fromNewHandle != null) {\n        setValueByPath(toObject, ['newHandle'], fromNewHandle);\n    }\n    const fromResumable = getValueByPath(fromObject, ['resumable']);\n    if (fromResumable != null) {\n        setValueByPath(toObject, ['resumable'], fromResumable);\n    }\n    const fromLastConsumedClientMessageIndex = getValueByPath(fromObject, [\n        'lastConsumedClientMessageIndex',\n    ]);\n    if (fromLastConsumedClientMessageIndex != null) {\n        setValueByPath(toObject, ['lastConsumedClientMessageIndex'], fromLastConsumedClientMessageIndex);\n    }\n    return toObject;\n}\nfunction liveServerSessionResumptionUpdateFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromNewHandle = getValueByPath(fromObject, ['newHandle']);\n    if (fromNewHandle != null) {\n        setValueByPath(toObject, ['newHandle'], fromNewHandle);\n    }\n    const fromResumable = getValueByPath(fromObject, ['resumable']);\n    if (fromResumable != null) {\n        setValueByPath(toObject, ['resumable'], fromResumable);\n    }\n    const fromLastConsumedClientMessageIndex = getValueByPath(fromObject, [\n        'lastConsumedClientMessageIndex',\n    ]);\n    if (fromLastConsumedClientMessageIndex != null) {\n        setValueByPath(toObject, ['lastConsumedClientMessageIndex'], fromLastConsumedClientMessageIndex);\n    }\n    return toObject;\n}\nfunction liveServerMessageFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromSetupComplete = getValueByPath(fromObject, [\n        'setupComplete',\n    ]);\n    if (fromSetupComplete != null) {\n        setValueByPath(toObject, ['setupComplete'], liveServerSetupCompleteFromMldev());\n    }\n    const fromServerContent = getValueByPath(fromObject, [\n        'serverContent',\n    ]);\n    if (fromServerContent != null) {\n        setValueByPath(toObject, ['serverContent'], liveServerContentFromMldev(apiClient, fromServerContent));\n    }\n    const fromToolCall = getValueByPath(fromObject, ['toolCall']);\n    if (fromToolCall != null) {\n        setValueByPath(toObject, ['toolCall'], liveServerToolCallFromMldev(apiClient, fromToolCall));\n    }\n    const fromToolCallCancellation = getValueByPath(fromObject, [\n        'toolCallCancellation',\n    ]);\n    if (fromToolCallCancellation != null) {\n        setValueByPath(toObject, ['toolCallCancellation'], liveServerToolCallCancellationFromMldev(apiClient, fromToolCallCancellation));\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], usageMetadataFromMldev(apiClient, fromUsageMetadata));\n    }\n    const fromGoAway = getValueByPath(fromObject, ['goAway']);\n    if (fromGoAway != null) {\n        setValueByPath(toObject, ['goAway'], liveServerGoAwayFromMldev(apiClient, fromGoAway));\n    }\n    const fromSessionResumptionUpdate = getValueByPath(fromObject, [\n        'sessionResumptionUpdate',\n    ]);\n    if (fromSessionResumptionUpdate != null) {\n        setValueByPath(toObject, ['sessionResumptionUpdate'], liveServerSessionResumptionUpdateFromMldev(apiClient, fromSessionResumptionUpdate));\n    }\n    return toObject;\n}\nfunction liveServerMessageFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromSetupComplete = getValueByPath(fromObject, [\n        'setupComplete',\n    ]);\n    if (fromSetupComplete != null) {\n        setValueByPath(toObject, ['setupComplete'], liveServerSetupCompleteFromVertex());\n    }\n    const fromServerContent = getValueByPath(fromObject, [\n        'serverContent',\n    ]);\n    if (fromServerContent != null) {\n        setValueByPath(toObject, ['serverContent'], liveServerContentFromVertex(apiClient, fromServerContent));\n    }\n    const fromToolCall = getValueByPath(fromObject, ['toolCall']);\n    if (fromToolCall != null) {\n        setValueByPath(toObject, ['toolCall'], liveServerToolCallFromVertex(apiClient, fromToolCall));\n    }\n    const fromToolCallCancellation = getValueByPath(fromObject, [\n        'toolCallCancellation',\n    ]);\n    if (fromToolCallCancellation != null) {\n        setValueByPath(toObject, ['toolCallCancellation'], liveServerToolCallCancellationFromVertex(apiClient, fromToolCallCancellation));\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], usageMetadataFromVertex(apiClient, fromUsageMetadata));\n    }\n    const fromGoAway = getValueByPath(fromObject, ['goAway']);\n    if (fromGoAway != null) {\n        setValueByPath(toObject, ['goAway'], liveServerGoAwayFromVertex(apiClient, fromGoAway));\n    }\n    const fromSessionResumptionUpdate = getValueByPath(fromObject, [\n        'sessionResumptionUpdate',\n    ]);\n    if (fromSessionResumptionUpdate != null) {\n        setValueByPath(toObject, ['sessionResumptionUpdate'], liveServerSessionResumptionUpdateFromVertex(apiClient, fromSessionResumptionUpdate));\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction partToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['videoMetadata']) !== undefined) {\n        throw new Error('videoMetadata parameter is not supported in Gemini API.');\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partToMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['example']) !== undefined) {\n        throw new Error('example parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['pattern']) !== undefined) {\n        throw new Error('pattern parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['default']) !== undefined) {\n        throw new Error('default parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['maxLength']) !== undefined) {\n        throw new Error('maxLength parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['minLength']) !== undefined) {\n        throw new Error('minLength parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['minProperties']) !== undefined) {\n        throw new Error('minProperties parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['maxProperties']) !== undefined) {\n        throw new Error('maxProperties parameter is not supported in Gemini API.');\n    }\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction safetySettingToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['method']) !== undefined) {\n        throw new Error('method parameter is not supported in Gemini API.');\n    }\n    const fromCategory = getValueByPath(fromObject, ['category']);\n    if (fromCategory != null) {\n        setValueByPath(toObject, ['category'], fromCategory);\n    }\n    const fromThreshold = getValueByPath(fromObject, ['threshold']);\n    if (fromThreshold != null) {\n        setValueByPath(toObject, ['threshold'], fromThreshold);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['response']) !== undefined) {\n        throw new Error('response parameter is not supported in Gemini API.');\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction toolToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        if (Array.isArray(fromFunctionDeclarations)) {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations.map((item) => {\n                return functionDeclarationToMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations);\n        }\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev());\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval));\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction toolConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToMldev(apiClient, fromFunctionCallingConfig));\n    }\n    return toObject;\n}\nfunction prebuiltVoiceConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToMldev(apiClient, fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speechConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev(apiClient, fromVoiceConfig));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction thinkingConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromIncludeThoughts = getValueByPath(fromObject, [\n        'includeThoughts',\n    ]);\n    if (fromIncludeThoughts != null) {\n        setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n    }\n    const fromThinkingBudget = getValueByPath(fromObject, [\n        'thinkingBudget',\n    ]);\n    if (fromThinkingBudget != null) {\n        setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n    }\n    return toObject;\n}\nfunction generateContentConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToMldev(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (fromTopP != null) {\n        setValueByPath(toObject, ['topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromCandidateCount = getValueByPath(fromObject, [\n        'candidateCount',\n    ]);\n    if (fromCandidateCount != null) {\n        setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (fromMaxOutputTokens != null) {\n        setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromStopSequences = getValueByPath(fromObject, [\n        'stopSequences',\n    ]);\n    if (fromStopSequences != null) {\n        setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n    }\n    const fromResponseLogprobs = getValueByPath(fromObject, [\n        'responseLogprobs',\n    ]);\n    if (fromResponseLogprobs != null) {\n        setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n    }\n    const fromLogprobs = getValueByPath(fromObject, ['logprobs']);\n    if (fromLogprobs != null) {\n        setValueByPath(toObject, ['logprobs'], fromLogprobs);\n    }\n    const fromPresencePenalty = getValueByPath(fromObject, [\n        'presencePenalty',\n    ]);\n    if (fromPresencePenalty != null) {\n        setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n    }\n    const fromFrequencyPenalty = getValueByPath(fromObject, [\n        'frequencyPenalty',\n    ]);\n    if (fromFrequencyPenalty != null) {\n        setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromResponseMimeType = getValueByPath(fromObject, [\n        'responseMimeType',\n    ]);\n    if (fromResponseMimeType != null) {\n        setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n    }\n    const fromResponseSchema = getValueByPath(fromObject, [\n        'responseSchema',\n    ]);\n    if (fromResponseSchema != null) {\n        setValueByPath(toObject, ['responseSchema'], schemaToMldev(apiClient, tSchema(apiClient, fromResponseSchema)));\n    }\n    if (getValueByPath(fromObject, ['routingConfig']) !== undefined) {\n        throw new Error('routingConfig parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['modelSelectionConfig']) !== undefined) {\n        throw new Error('modelSelectionConfig parameter is not supported in Gemini API.');\n    }\n    const fromSafetySettings = getValueByPath(fromObject, [\n        'safetySettings',\n    ]);\n    if (parentObject !== undefined && fromSafetySettings != null) {\n        if (Array.isArray(fromSafetySettings)) {\n            setValueByPath(parentObject, ['safetySettings'], fromSafetySettings.map((item) => {\n                return safetySettingToMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(parentObject, ['safetySettings'], fromSafetySettings);\n        }\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['tools'], tTools(apiClient, tTools(apiClient, fromTools).map((item) => {\n                return toolToMldev(apiClient, tTool(apiClient, item));\n            })));\n        }\n        else {\n            setValueByPath(parentObject, ['tools'], tTools(apiClient, fromTools));\n        }\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToMldev(apiClient, fromToolConfig));\n    }\n    if (getValueByPath(fromObject, ['labels']) !== undefined) {\n        throw new Error('labels parameter is not supported in Gemini API.');\n    }\n    const fromCachedContent = getValueByPath(fromObject, [\n        'cachedContent',\n    ]);\n    if (parentObject !== undefined && fromCachedContent != null) {\n        setValueByPath(parentObject, ['cachedContent'], tCachedContentName(apiClient, fromCachedContent));\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (fromResponseModalities != null) {\n        setValueByPath(toObject, ['responseModalities'], fromResponseModalities);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (fromMediaResolution != null) {\n        setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (fromSpeechConfig != null) {\n        setValueByPath(toObject, ['speechConfig'], speechConfigToMldev(apiClient, tSpeechConfig(apiClient, fromSpeechConfig)));\n    }\n    if (getValueByPath(fromObject, ['audioTimestamp']) !== undefined) {\n        throw new Error('audioTimestamp parameter is not supported in Gemini API.');\n    }\n    const fromThinkingConfig = getValueByPath(fromObject, [\n        'thinkingConfig',\n    ]);\n    if (fromThinkingConfig != null) {\n        setValueByPath(toObject, ['thinkingConfig'], thinkingConfigToMldev(apiClient, fromThinkingConfig));\n    }\n    return toObject;\n}\nfunction generateContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToMldev(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['generationConfig'], generateContentConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction embedContentConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromTaskType = getValueByPath(fromObject, ['taskType']);\n    if (parentObject !== undefined && fromTaskType != null) {\n        setValueByPath(parentObject, ['requests[]', 'taskType'], fromTaskType);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (parentObject !== undefined && fromTitle != null) {\n        setValueByPath(parentObject, ['requests[]', 'title'], fromTitle);\n    }\n    const fromOutputDimensionality = getValueByPath(fromObject, [\n        'outputDimensionality',\n    ]);\n    if (parentObject !== undefined && fromOutputDimensionality != null) {\n        setValueByPath(parentObject, ['requests[]', 'outputDimensionality'], fromOutputDimensionality);\n    }\n    if (getValueByPath(fromObject, ['mimeType']) !== undefined) {\n        throw new Error('mimeType parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['autoTruncate']) !== undefined) {\n        throw new Error('autoTruncate parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction embedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        setValueByPath(toObject, ['requests[]', 'content'], tContentsForEmbed(apiClient, fromContents));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], embedContentConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    const fromModelForEmbedContent = getValueByPath(fromObject, ['model']);\n    if (fromModelForEmbedContent !== undefined) {\n        setValueByPath(toObject, ['requests[]', 'model'], tModel(apiClient, fromModelForEmbedContent));\n    }\n    return toObject;\n}\nfunction generateImagesConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n        throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['negativePrompt']) !== undefined) {\n        throw new Error('negativePrompt parameter is not supported in Gemini API.');\n    }\n    const fromNumberOfImages = getValueByPath(fromObject, [\n        'numberOfImages',\n    ]);\n    if (parentObject !== undefined && fromNumberOfImages != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfImages);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromGuidanceScale = getValueByPath(fromObject, [\n        'guidanceScale',\n    ]);\n    if (parentObject !== undefined && fromGuidanceScale != null) {\n        setValueByPath(parentObject, ['parameters', 'guidanceScale'], fromGuidanceScale);\n    }\n    if (getValueByPath(fromObject, ['seed']) !== undefined) {\n        throw new Error('seed parameter is not supported in Gemini API.');\n    }\n    const fromSafetyFilterLevel = getValueByPath(fromObject, [\n        'safetyFilterLevel',\n    ]);\n    if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n        setValueByPath(parentObject, ['parameters', 'safetySetting'], fromSafetyFilterLevel);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromIncludeSafetyAttributes = getValueByPath(fromObject, [\n        'includeSafetyAttributes',\n    ]);\n    if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n        setValueByPath(parentObject, ['parameters', 'includeSafetyAttributes'], fromIncludeSafetyAttributes);\n    }\n    const fromIncludeRaiReason = getValueByPath(fromObject, [\n        'includeRaiReason',\n    ]);\n    if (parentObject !== undefined && fromIncludeRaiReason != null) {\n        setValueByPath(parentObject, ['parameters', 'includeRaiReason'], fromIncludeRaiReason);\n    }\n    const fromLanguage = getValueByPath(fromObject, ['language']);\n    if (parentObject !== undefined && fromLanguage != null) {\n        setValueByPath(parentObject, ['parameters', 'language'], fromLanguage);\n    }\n    const fromOutputMimeType = getValueByPath(fromObject, [\n        'outputMimeType',\n    ]);\n    if (parentObject !== undefined && fromOutputMimeType != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'mimeType'], fromOutputMimeType);\n    }\n    const fromOutputCompressionQuality = getValueByPath(fromObject, [\n        'outputCompressionQuality',\n    ]);\n    if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'compressionQuality'], fromOutputCompressionQuality);\n    }\n    if (getValueByPath(fromObject, ['addWatermark']) !== undefined) {\n        throw new Error('addWatermark parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['enhancePrompt']) !== undefined) {\n        throw new Error('enhancePrompt parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction generateImagesParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateImagesConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getModelParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction countTokensConfigToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['systemInstruction']) !== undefined) {\n        throw new Error('systemInstruction parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['tools']) !== undefined) {\n        throw new Error('tools parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['generationConfig']) !== undefined) {\n        throw new Error('generationConfig parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction countTokensParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToMldev(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], countTokensConfigToMldev(apiClient, fromConfig));\n    }\n    return toObject;\n}\nfunction imageToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n        throw new Error('gcsUri parameter is not supported in Gemini API.');\n    }\n    const fromImageBytes = getValueByPath(fromObject, ['imageBytes']);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['bytesBase64Encoded'], tBytes(apiClient, fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generateVideosConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromNumberOfVideos = getValueByPath(fromObject, [\n        'numberOfVideos',\n    ]);\n    if (parentObject !== undefined && fromNumberOfVideos != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfVideos);\n    }\n    if (getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n        throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['fps']) !== undefined) {\n        throw new Error('fps parameter is not supported in Gemini API.');\n    }\n    const fromDurationSeconds = getValueByPath(fromObject, [\n        'durationSeconds',\n    ]);\n    if (parentObject !== undefined && fromDurationSeconds != null) {\n        setValueByPath(parentObject, ['parameters', 'durationSeconds'], fromDurationSeconds);\n    }\n    if (getValueByPath(fromObject, ['seed']) !== undefined) {\n        throw new Error('seed parameter is not supported in Gemini API.');\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    if (getValueByPath(fromObject, ['resolution']) !== undefined) {\n        throw new Error('resolution parameter is not supported in Gemini API.');\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    if (getValueByPath(fromObject, ['pubsubTopic']) !== undefined) {\n        throw new Error('pubsubTopic parameter is not supported in Gemini API.');\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    if (getValueByPath(fromObject, ['enhancePrompt']) !== undefined) {\n        throw new Error('enhancePrompt parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction generateVideosParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromImage = getValueByPath(fromObject, ['image']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['instances[0]', 'image'], imageToMldev(apiClient, fromImage));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateVideosConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction partToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partToVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromExample = getValueByPath(fromObject, ['example']);\n    if (fromExample != null) {\n        setValueByPath(toObject, ['example'], fromExample);\n    }\n    const fromPattern = getValueByPath(fromObject, ['pattern']);\n    if (fromPattern != null) {\n        setValueByPath(toObject, ['pattern'], fromPattern);\n    }\n    const fromDefault = getValueByPath(fromObject, ['default']);\n    if (fromDefault != null) {\n        setValueByPath(toObject, ['default'], fromDefault);\n    }\n    const fromMaxLength = getValueByPath(fromObject, ['maxLength']);\n    if (fromMaxLength != null) {\n        setValueByPath(toObject, ['maxLength'], fromMaxLength);\n    }\n    const fromMinLength = getValueByPath(fromObject, ['minLength']);\n    if (fromMinLength != null) {\n        setValueByPath(toObject, ['minLength'], fromMinLength);\n    }\n    const fromMinProperties = getValueByPath(fromObject, [\n        'minProperties',\n    ]);\n    if (fromMinProperties != null) {\n        setValueByPath(toObject, ['minProperties'], fromMinProperties);\n    }\n    const fromMaxProperties = getValueByPath(fromObject, [\n        'maxProperties',\n    ]);\n    if (fromMaxProperties != null) {\n        setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n    }\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction modelSelectionConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromFeatureSelectionPreference = getValueByPath(fromObject, [\n        'featureSelectionPreference',\n    ]);\n    if (fromFeatureSelectionPreference != null) {\n        setValueByPath(toObject, ['featureSelectionPreference'], fromFeatureSelectionPreference);\n    }\n    return toObject;\n}\nfunction safetySettingToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromMethod = getValueByPath(fromObject, ['method']);\n    if (fromMethod != null) {\n        setValueByPath(toObject, ['method'], fromMethod);\n    }\n    const fromCategory = getValueByPath(fromObject, ['category']);\n    if (fromCategory != null) {\n        setValueByPath(toObject, ['category'], fromCategory);\n    }\n    const fromThreshold = getValueByPath(fromObject, ['threshold']);\n    if (fromThreshold != null) {\n        setValueByPath(toObject, ['threshold'], fromThreshold);\n    }\n    return toObject;\n}\nfunction functionDeclarationToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], schemaToVertex(apiClient, fromResponse));\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    return toObject;\n}\nfunction googleSearchToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction dynamicRetrievalConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction toolToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        if (Array.isArray(fromFunctionDeclarations)) {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations.map((item) => {\n                return functionDeclarationToVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['functionDeclarations'], fromFunctionDeclarations);\n        }\n    }\n    const fromRetrieval = getValueByPath(fromObject, ['retrieval']);\n    if (fromRetrieval != null) {\n        setValueByPath(toObject, ['retrieval'], fromRetrieval);\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToVertex());\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval));\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction toolConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToVertex(apiClient, fromFunctionCallingConfig));\n    }\n    return toObject;\n}\nfunction prebuiltVoiceConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToVertex(apiClient, fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speechConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToVertex(apiClient, fromVoiceConfig));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction thinkingConfigToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromIncludeThoughts = getValueByPath(fromObject, [\n        'includeThoughts',\n    ]);\n    if (fromIncludeThoughts != null) {\n        setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n    }\n    const fromThinkingBudget = getValueByPath(fromObject, [\n        'thinkingBudget',\n    ]);\n    if (fromThinkingBudget != null) {\n        setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n    }\n    return toObject;\n}\nfunction generateContentConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToVertex(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (fromTopP != null) {\n        setValueByPath(toObject, ['topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromCandidateCount = getValueByPath(fromObject, [\n        'candidateCount',\n    ]);\n    if (fromCandidateCount != null) {\n        setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (fromMaxOutputTokens != null) {\n        setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromStopSequences = getValueByPath(fromObject, [\n        'stopSequences',\n    ]);\n    if (fromStopSequences != null) {\n        setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n    }\n    const fromResponseLogprobs = getValueByPath(fromObject, [\n        'responseLogprobs',\n    ]);\n    if (fromResponseLogprobs != null) {\n        setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n    }\n    const fromLogprobs = getValueByPath(fromObject, ['logprobs']);\n    if (fromLogprobs != null) {\n        setValueByPath(toObject, ['logprobs'], fromLogprobs);\n    }\n    const fromPresencePenalty = getValueByPath(fromObject, [\n        'presencePenalty',\n    ]);\n    if (fromPresencePenalty != null) {\n        setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n    }\n    const fromFrequencyPenalty = getValueByPath(fromObject, [\n        'frequencyPenalty',\n    ]);\n    if (fromFrequencyPenalty != null) {\n        setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromResponseMimeType = getValueByPath(fromObject, [\n        'responseMimeType',\n    ]);\n    if (fromResponseMimeType != null) {\n        setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n    }\n    const fromResponseSchema = getValueByPath(fromObject, [\n        'responseSchema',\n    ]);\n    if (fromResponseSchema != null) {\n        setValueByPath(toObject, ['responseSchema'], schemaToVertex(apiClient, tSchema(apiClient, fromResponseSchema)));\n    }\n    const fromRoutingConfig = getValueByPath(fromObject, [\n        'routingConfig',\n    ]);\n    if (fromRoutingConfig != null) {\n        setValueByPath(toObject, ['routingConfig'], fromRoutingConfig);\n    }\n    const fromModelSelectionConfig = getValueByPath(fromObject, [\n        'modelSelectionConfig',\n    ]);\n    if (fromModelSelectionConfig != null) {\n        setValueByPath(toObject, ['modelConfig'], modelSelectionConfigToVertex(apiClient, fromModelSelectionConfig));\n    }\n    const fromSafetySettings = getValueByPath(fromObject, [\n        'safetySettings',\n    ]);\n    if (parentObject !== undefined && fromSafetySettings != null) {\n        if (Array.isArray(fromSafetySettings)) {\n            setValueByPath(parentObject, ['safetySettings'], fromSafetySettings.map((item) => {\n                return safetySettingToVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(parentObject, ['safetySettings'], fromSafetySettings);\n        }\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['tools'], tTools(apiClient, tTools(apiClient, fromTools).map((item) => {\n                return toolToVertex(apiClient, tTool(apiClient, item));\n            })));\n        }\n        else {\n            setValueByPath(parentObject, ['tools'], tTools(apiClient, fromTools));\n        }\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToVertex(apiClient, fromToolConfig));\n    }\n    const fromLabels = getValueByPath(fromObject, ['labels']);\n    if (parentObject !== undefined && fromLabels != null) {\n        setValueByPath(parentObject, ['labels'], fromLabels);\n    }\n    const fromCachedContent = getValueByPath(fromObject, [\n        'cachedContent',\n    ]);\n    if (parentObject !== undefined && fromCachedContent != null) {\n        setValueByPath(parentObject, ['cachedContent'], tCachedContentName(apiClient, fromCachedContent));\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (fromResponseModalities != null) {\n        setValueByPath(toObject, ['responseModalities'], fromResponseModalities);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (fromMediaResolution != null) {\n        setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (fromSpeechConfig != null) {\n        setValueByPath(toObject, ['speechConfig'], speechConfigToVertex(apiClient, tSpeechConfig(apiClient, fromSpeechConfig)));\n    }\n    const fromAudioTimestamp = getValueByPath(fromObject, [\n        'audioTimestamp',\n    ]);\n    if (fromAudioTimestamp != null) {\n        setValueByPath(toObject, ['audioTimestamp'], fromAudioTimestamp);\n    }\n    const fromThinkingConfig = getValueByPath(fromObject, [\n        'thinkingConfig',\n    ]);\n    if (fromThinkingConfig != null) {\n        setValueByPath(toObject, ['thinkingConfig'], thinkingConfigToVertex(apiClient, fromThinkingConfig));\n    }\n    return toObject;\n}\nfunction generateContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToVertex(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['generationConfig'], generateContentConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction embedContentConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromTaskType = getValueByPath(fromObject, ['taskType']);\n    if (parentObject !== undefined && fromTaskType != null) {\n        setValueByPath(parentObject, ['instances[]', 'task_type'], fromTaskType);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (parentObject !== undefined && fromTitle != null) {\n        setValueByPath(parentObject, ['instances[]', 'title'], fromTitle);\n    }\n    const fromOutputDimensionality = getValueByPath(fromObject, [\n        'outputDimensionality',\n    ]);\n    if (parentObject !== undefined && fromOutputDimensionality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputDimensionality'], fromOutputDimensionality);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (parentObject !== undefined && fromMimeType != null) {\n        setValueByPath(parentObject, ['instances[]', 'mimeType'], fromMimeType);\n    }\n    const fromAutoTruncate = getValueByPath(fromObject, ['autoTruncate']);\n    if (parentObject !== undefined && fromAutoTruncate != null) {\n        setValueByPath(parentObject, ['parameters', 'autoTruncate'], fromAutoTruncate);\n    }\n    return toObject;\n}\nfunction embedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        setValueByPath(toObject, ['instances[]', 'content'], tContentsForEmbed(apiClient, fromContents));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], embedContentConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction generateImagesConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromOutputGcsUri = getValueByPath(fromObject, ['outputGcsUri']);\n    if (parentObject !== undefined && fromOutputGcsUri != null) {\n        setValueByPath(parentObject, ['parameters', 'storageUri'], fromOutputGcsUri);\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    const fromNumberOfImages = getValueByPath(fromObject, [\n        'numberOfImages',\n    ]);\n    if (parentObject !== undefined && fromNumberOfImages != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfImages);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromGuidanceScale = getValueByPath(fromObject, [\n        'guidanceScale',\n    ]);\n    if (parentObject !== undefined && fromGuidanceScale != null) {\n        setValueByPath(parentObject, ['parameters', 'guidanceScale'], fromGuidanceScale);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n    }\n    const fromSafetyFilterLevel = getValueByPath(fromObject, [\n        'safetyFilterLevel',\n    ]);\n    if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n        setValueByPath(parentObject, ['parameters', 'safetySetting'], fromSafetyFilterLevel);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromIncludeSafetyAttributes = getValueByPath(fromObject, [\n        'includeSafetyAttributes',\n    ]);\n    if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n        setValueByPath(parentObject, ['parameters', 'includeSafetyAttributes'], fromIncludeSafetyAttributes);\n    }\n    const fromIncludeRaiReason = getValueByPath(fromObject, [\n        'includeRaiReason',\n    ]);\n    if (parentObject !== undefined && fromIncludeRaiReason != null) {\n        setValueByPath(parentObject, ['parameters', 'includeRaiReason'], fromIncludeRaiReason);\n    }\n    const fromLanguage = getValueByPath(fromObject, ['language']);\n    if (parentObject !== undefined && fromLanguage != null) {\n        setValueByPath(parentObject, ['parameters', 'language'], fromLanguage);\n    }\n    const fromOutputMimeType = getValueByPath(fromObject, [\n        'outputMimeType',\n    ]);\n    if (parentObject !== undefined && fromOutputMimeType != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'mimeType'], fromOutputMimeType);\n    }\n    const fromOutputCompressionQuality = getValueByPath(fromObject, [\n        'outputCompressionQuality',\n    ]);\n    if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'compressionQuality'], fromOutputCompressionQuality);\n    }\n    const fromAddWatermark = getValueByPath(fromObject, ['addWatermark']);\n    if (parentObject !== undefined && fromAddWatermark != null) {\n        setValueByPath(parentObject, ['parameters', 'addWatermark'], fromAddWatermark);\n    }\n    const fromEnhancePrompt = getValueByPath(fromObject, [\n        'enhancePrompt',\n    ]);\n    if (parentObject !== undefined && fromEnhancePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'enhancePrompt'], fromEnhancePrompt);\n    }\n    return toObject;\n}\nfunction generateImagesParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateImagesConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getModelParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction countTokensConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToVertex(apiClient, tContent(apiClient, fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        if (Array.isArray(fromTools)) {\n            setValueByPath(parentObject, ['tools'], fromTools.map((item) => {\n                return toolToVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(parentObject, ['tools'], fromTools);\n        }\n    }\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['generationConfig'], fromGenerationConfig);\n    }\n    return toObject;\n}\nfunction countTokensParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToVertex(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], countTokensConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction computeTokensParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        if (Array.isArray(fromContents)) {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, tContents(apiClient, fromContents).map((item) => {\n                return contentToVertex(apiClient, item);\n            })));\n        }\n        else {\n            setValueByPath(toObject, ['contents'], tContents(apiClient, fromContents));\n        }\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction imageToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n    }\n    const fromImageBytes = getValueByPath(fromObject, ['imageBytes']);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['bytesBase64Encoded'], tBytes(apiClient, fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generateVideosConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromNumberOfVideos = getValueByPath(fromObject, [\n        'numberOfVideos',\n    ]);\n    if (parentObject !== undefined && fromNumberOfVideos != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfVideos);\n    }\n    const fromOutputGcsUri = getValueByPath(fromObject, ['outputGcsUri']);\n    if (parentObject !== undefined && fromOutputGcsUri != null) {\n        setValueByPath(parentObject, ['parameters', 'storageUri'], fromOutputGcsUri);\n    }\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (parentObject !== undefined && fromFps != null) {\n        setValueByPath(parentObject, ['parameters', 'fps'], fromFps);\n    }\n    const fromDurationSeconds = getValueByPath(fromObject, [\n        'durationSeconds',\n    ]);\n    if (parentObject !== undefined && fromDurationSeconds != null) {\n        setValueByPath(parentObject, ['parameters', 'durationSeconds'], fromDurationSeconds);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromResolution = getValueByPath(fromObject, ['resolution']);\n    if (parentObject !== undefined && fromResolution != null) {\n        setValueByPath(parentObject, ['parameters', 'resolution'], fromResolution);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromPubsubTopic = getValueByPath(fromObject, ['pubsubTopic']);\n    if (parentObject !== undefined && fromPubsubTopic != null) {\n        setValueByPath(parentObject, ['parameters', 'pubsubTopic'], fromPubsubTopic);\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    const fromEnhancePrompt = getValueByPath(fromObject, [\n        'enhancePrompt',\n    ]);\n    if (parentObject !== undefined && fromEnhancePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'enhancePrompt'], fromEnhancePrompt);\n    }\n    return toObject;\n}\nfunction generateVideosParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromImage = getValueByPath(fromObject, ['image']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['instances[0]', 'image'], imageToVertex(apiClient, fromImage));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateVideosConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction partFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction citationMetadataFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromCitations = getValueByPath(fromObject, ['citationSources']);\n    if (fromCitations != null) {\n        setValueByPath(toObject, ['citations'], fromCitations);\n    }\n    return toObject;\n}\nfunction candidateFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromContent = getValueByPath(fromObject, ['content']);\n    if (fromContent != null) {\n        setValueByPath(toObject, ['content'], contentFromMldev(apiClient, fromContent));\n    }\n    const fromCitationMetadata = getValueByPath(fromObject, [\n        'citationMetadata',\n    ]);\n    if (fromCitationMetadata != null) {\n        setValueByPath(toObject, ['citationMetadata'], citationMetadataFromMldev(apiClient, fromCitationMetadata));\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    const fromFinishReason = getValueByPath(fromObject, ['finishReason']);\n    if (fromFinishReason != null) {\n        setValueByPath(toObject, ['finishReason'], fromFinishReason);\n    }\n    const fromAvgLogprobs = getValueByPath(fromObject, ['avgLogprobs']);\n    if (fromAvgLogprobs != null) {\n        setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromIndex = getValueByPath(fromObject, ['index']);\n    if (fromIndex != null) {\n        setValueByPath(toObject, ['index'], fromIndex);\n    }\n    const fromLogprobsResult = getValueByPath(fromObject, [\n        'logprobsResult',\n    ]);\n    if (fromLogprobsResult != null) {\n        setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n    }\n    const fromSafetyRatings = getValueByPath(fromObject, [\n        'safetyRatings',\n    ]);\n    if (fromSafetyRatings != null) {\n        setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n    }\n    return toObject;\n}\nfunction generateContentResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromCandidates = getValueByPath(fromObject, ['candidates']);\n    if (fromCandidates != null) {\n        if (Array.isArray(fromCandidates)) {\n            setValueByPath(toObject, ['candidates'], fromCandidates.map((item) => {\n                return candidateFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['candidates'], fromCandidates);\n        }\n    }\n    const fromModelVersion = getValueByPath(fromObject, ['modelVersion']);\n    if (fromModelVersion != null) {\n        setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n    }\n    const fromPromptFeedback = getValueByPath(fromObject, [\n        'promptFeedback',\n    ]);\n    if (fromPromptFeedback != null) {\n        setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction contentEmbeddingFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromValues = getValueByPath(fromObject, ['values']);\n    if (fromValues != null) {\n        setValueByPath(toObject, ['values'], fromValues);\n    }\n    return toObject;\n}\nfunction embedContentMetadataFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction embedContentResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromEmbeddings = getValueByPath(fromObject, ['embeddings']);\n    if (fromEmbeddings != null) {\n        if (Array.isArray(fromEmbeddings)) {\n            setValueByPath(toObject, ['embeddings'], fromEmbeddings.map((item) => {\n                return contentEmbeddingFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['embeddings'], fromEmbeddings);\n        }\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], embedContentMetadataFromMldev());\n    }\n    return toObject;\n}\nfunction imageFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromImageBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['imageBytes'], tBytes(apiClient, fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction safetyAttributesFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromCategories = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'categories',\n    ]);\n    if (fromCategories != null) {\n        setValueByPath(toObject, ['categories'], fromCategories);\n    }\n    const fromScores = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'scores',\n    ]);\n    if (fromScores != null) {\n        setValueByPath(toObject, ['scores'], fromScores);\n    }\n    const fromContentType = getValueByPath(fromObject, ['contentType']);\n    if (fromContentType != null) {\n        setValueByPath(toObject, ['contentType'], fromContentType);\n    }\n    return toObject;\n}\nfunction generatedImageFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromImage = getValueByPath(fromObject, ['_self']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['image'], imageFromMldev(apiClient, fromImage));\n    }\n    const fromRaiFilteredReason = getValueByPath(fromObject, [\n        'raiFilteredReason',\n    ]);\n    if (fromRaiFilteredReason != null) {\n        setValueByPath(toObject, ['raiFilteredReason'], fromRaiFilteredReason);\n    }\n    const fromSafetyAttributes = getValueByPath(fromObject, ['_self']);\n    if (fromSafetyAttributes != null) {\n        setValueByPath(toObject, ['safetyAttributes'], safetyAttributesFromMldev(apiClient, fromSafetyAttributes));\n    }\n    return toObject;\n}\nfunction generateImagesResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromGeneratedImages = getValueByPath(fromObject, [\n        'predictions',\n    ]);\n    if (fromGeneratedImages != null) {\n        if (Array.isArray(fromGeneratedImages)) {\n            setValueByPath(toObject, ['generatedImages'], fromGeneratedImages.map((item) => {\n                return generatedImageFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['generatedImages'], fromGeneratedImages);\n        }\n    }\n    const fromPositivePromptSafetyAttributes = getValueByPath(fromObject, [\n        'positivePromptSafetyAttributes',\n    ]);\n    if (fromPositivePromptSafetyAttributes != null) {\n        setValueByPath(toObject, ['positivePromptSafetyAttributes'], safetyAttributesFromMldev(apiClient, fromPositivePromptSafetyAttributes));\n    }\n    return toObject;\n}\nfunction tunedModelInfoFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromBaseModel = getValueByPath(fromObject, ['baseModel']);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    return toObject;\n}\nfunction modelFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromVersion = getValueByPath(fromObject, ['version']);\n    if (fromVersion != null) {\n        setValueByPath(toObject, ['version'], fromVersion);\n    }\n    const fromTunedModelInfo = getValueByPath(fromObject, ['_self']);\n    if (fromTunedModelInfo != null) {\n        setValueByPath(toObject, ['tunedModelInfo'], tunedModelInfoFromMldev(apiClient, fromTunedModelInfo));\n    }\n    const fromInputTokenLimit = getValueByPath(fromObject, [\n        'inputTokenLimit',\n    ]);\n    if (fromInputTokenLimit != null) {\n        setValueByPath(toObject, ['inputTokenLimit'], fromInputTokenLimit);\n    }\n    const fromOutputTokenLimit = getValueByPath(fromObject, [\n        'outputTokenLimit',\n    ]);\n    if (fromOutputTokenLimit != null) {\n        setValueByPath(toObject, ['outputTokenLimit'], fromOutputTokenLimit);\n    }\n    const fromSupportedActions = getValueByPath(fromObject, [\n        'supportedGenerationMethods',\n    ]);\n    if (fromSupportedActions != null) {\n        setValueByPath(toObject, ['supportedActions'], fromSupportedActions);\n    }\n    return toObject;\n}\nfunction countTokensResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromTotalTokens = getValueByPath(fromObject, ['totalTokens']);\n    if (fromTotalTokens != null) {\n        setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n    }\n    const fromCachedContentTokenCount = getValueByPath(fromObject, [\n        'cachedContentTokenCount',\n    ]);\n    if (fromCachedContentTokenCount != null) {\n        setValueByPath(toObject, ['cachedContentTokenCount'], fromCachedContentTokenCount);\n    }\n    return toObject;\n}\nfunction videoFromMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['video', 'uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'video',\n        'encodedVideo',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(apiClient, fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['encoding']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromMldev$1(apiClient, fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, [\n        'generatedSamples',\n    ]);\n    if (fromGeneratedVideos != null) {\n        if (Array.isArray(fromGeneratedVideos)) {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos.map((item) => {\n                return generatedVideoFromMldev$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n        }\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromMldev$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, [\n        'response',\n        'generateVideoResponse',\n    ]);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromMldev$1(apiClient, fromResponse));\n    }\n    return toObject;\n}\nfunction partFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fromFileData);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], fromInlineData);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        if (Array.isArray(fromParts)) {\n            setValueByPath(toObject, ['parts'], fromParts.map((item) => {\n                return partFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['parts'], fromParts);\n        }\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction citationMetadataFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromCitations = getValueByPath(fromObject, ['citations']);\n    if (fromCitations != null) {\n        setValueByPath(toObject, ['citations'], fromCitations);\n    }\n    return toObject;\n}\nfunction candidateFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromContent = getValueByPath(fromObject, ['content']);\n    if (fromContent != null) {\n        setValueByPath(toObject, ['content'], contentFromVertex(apiClient, fromContent));\n    }\n    const fromCitationMetadata = getValueByPath(fromObject, [\n        'citationMetadata',\n    ]);\n    if (fromCitationMetadata != null) {\n        setValueByPath(toObject, ['citationMetadata'], citationMetadataFromVertex(apiClient, fromCitationMetadata));\n    }\n    const fromFinishMessage = getValueByPath(fromObject, [\n        'finishMessage',\n    ]);\n    if (fromFinishMessage != null) {\n        setValueByPath(toObject, ['finishMessage'], fromFinishMessage);\n    }\n    const fromFinishReason = getValueByPath(fromObject, ['finishReason']);\n    if (fromFinishReason != null) {\n        setValueByPath(toObject, ['finishReason'], fromFinishReason);\n    }\n    const fromAvgLogprobs = getValueByPath(fromObject, ['avgLogprobs']);\n    if (fromAvgLogprobs != null) {\n        setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromIndex = getValueByPath(fromObject, ['index']);\n    if (fromIndex != null) {\n        setValueByPath(toObject, ['index'], fromIndex);\n    }\n    const fromLogprobsResult = getValueByPath(fromObject, [\n        'logprobsResult',\n    ]);\n    if (fromLogprobsResult != null) {\n        setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n    }\n    const fromSafetyRatings = getValueByPath(fromObject, [\n        'safetyRatings',\n    ]);\n    if (fromSafetyRatings != null) {\n        setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n    }\n    return toObject;\n}\nfunction generateContentResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromCandidates = getValueByPath(fromObject, ['candidates']);\n    if (fromCandidates != null) {\n        if (Array.isArray(fromCandidates)) {\n            setValueByPath(toObject, ['candidates'], fromCandidates.map((item) => {\n                return candidateFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['candidates'], fromCandidates);\n        }\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromResponseId = getValueByPath(fromObject, ['responseId']);\n    if (fromResponseId != null) {\n        setValueByPath(toObject, ['responseId'], fromResponseId);\n    }\n    const fromModelVersion = getValueByPath(fromObject, ['modelVersion']);\n    if (fromModelVersion != null) {\n        setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n    }\n    const fromPromptFeedback = getValueByPath(fromObject, [\n        'promptFeedback',\n    ]);\n    if (fromPromptFeedback != null) {\n        setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction contentEmbeddingStatisticsFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromTruncated = getValueByPath(fromObject, ['truncated']);\n    if (fromTruncated != null) {\n        setValueByPath(toObject, ['truncated'], fromTruncated);\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['token_count']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    return toObject;\n}\nfunction contentEmbeddingFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromValues = getValueByPath(fromObject, ['values']);\n    if (fromValues != null) {\n        setValueByPath(toObject, ['values'], fromValues);\n    }\n    const fromStatistics = getValueByPath(fromObject, ['statistics']);\n    if (fromStatistics != null) {\n        setValueByPath(toObject, ['statistics'], contentEmbeddingStatisticsFromVertex(apiClient, fromStatistics));\n    }\n    return toObject;\n}\nfunction embedContentMetadataFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromBillableCharacterCount = getValueByPath(fromObject, [\n        'billableCharacterCount',\n    ]);\n    if (fromBillableCharacterCount != null) {\n        setValueByPath(toObject, ['billableCharacterCount'], fromBillableCharacterCount);\n    }\n    return toObject;\n}\nfunction embedContentResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromEmbeddings = getValueByPath(fromObject, [\n        'predictions[]',\n        'embeddings',\n    ]);\n    if (fromEmbeddings != null) {\n        if (Array.isArray(fromEmbeddings)) {\n            setValueByPath(toObject, ['embeddings'], fromEmbeddings.map((item) => {\n                return contentEmbeddingFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['embeddings'], fromEmbeddings);\n        }\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], embedContentMetadataFromVertex(apiClient, fromMetadata));\n    }\n    return toObject;\n}\nfunction imageFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n    }\n    const fromImageBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['imageBytes'], tBytes(apiClient, fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction safetyAttributesFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromCategories = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'categories',\n    ]);\n    if (fromCategories != null) {\n        setValueByPath(toObject, ['categories'], fromCategories);\n    }\n    const fromScores = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'scores',\n    ]);\n    if (fromScores != null) {\n        setValueByPath(toObject, ['scores'], fromScores);\n    }\n    const fromContentType = getValueByPath(fromObject, ['contentType']);\n    if (fromContentType != null) {\n        setValueByPath(toObject, ['contentType'], fromContentType);\n    }\n    return toObject;\n}\nfunction generatedImageFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromImage = getValueByPath(fromObject, ['_self']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['image'], imageFromVertex(apiClient, fromImage));\n    }\n    const fromRaiFilteredReason = getValueByPath(fromObject, [\n        'raiFilteredReason',\n    ]);\n    if (fromRaiFilteredReason != null) {\n        setValueByPath(toObject, ['raiFilteredReason'], fromRaiFilteredReason);\n    }\n    const fromSafetyAttributes = getValueByPath(fromObject, ['_self']);\n    if (fromSafetyAttributes != null) {\n        setValueByPath(toObject, ['safetyAttributes'], safetyAttributesFromVertex(apiClient, fromSafetyAttributes));\n    }\n    const fromEnhancedPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromEnhancedPrompt != null) {\n        setValueByPath(toObject, ['enhancedPrompt'], fromEnhancedPrompt);\n    }\n    return toObject;\n}\nfunction generateImagesResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromGeneratedImages = getValueByPath(fromObject, [\n        'predictions',\n    ]);\n    if (fromGeneratedImages != null) {\n        if (Array.isArray(fromGeneratedImages)) {\n            setValueByPath(toObject, ['generatedImages'], fromGeneratedImages.map((item) => {\n                return generatedImageFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['generatedImages'], fromGeneratedImages);\n        }\n    }\n    const fromPositivePromptSafetyAttributes = getValueByPath(fromObject, [\n        'positivePromptSafetyAttributes',\n    ]);\n    if (fromPositivePromptSafetyAttributes != null) {\n        setValueByPath(toObject, ['positivePromptSafetyAttributes'], safetyAttributesFromVertex(apiClient, fromPositivePromptSafetyAttributes));\n    }\n    return toObject;\n}\nfunction endpointFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['endpoint']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDeployedModelId = getValueByPath(fromObject, [\n        'deployedModelId',\n    ]);\n    if (fromDeployedModelId != null) {\n        setValueByPath(toObject, ['deployedModelId'], fromDeployedModelId);\n    }\n    return toObject;\n}\nfunction tunedModelInfoFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromBaseModel = getValueByPath(fromObject, [\n        'labels',\n        'google-vertex-llm-tuning-base-model-id',\n    ]);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    return toObject;\n}\nfunction modelFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromVersion = getValueByPath(fromObject, ['versionId']);\n    if (fromVersion != null) {\n        setValueByPath(toObject, ['version'], fromVersion);\n    }\n    const fromEndpoints = getValueByPath(fromObject, ['deployedModels']);\n    if (fromEndpoints != null) {\n        if (Array.isArray(fromEndpoints)) {\n            setValueByPath(toObject, ['endpoints'], fromEndpoints.map((item) => {\n                return endpointFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['endpoints'], fromEndpoints);\n        }\n    }\n    const fromLabels = getValueByPath(fromObject, ['labels']);\n    if (fromLabels != null) {\n        setValueByPath(toObject, ['labels'], fromLabels);\n    }\n    const fromTunedModelInfo = getValueByPath(fromObject, ['_self']);\n    if (fromTunedModelInfo != null) {\n        setValueByPath(toObject, ['tunedModelInfo'], tunedModelInfoFromVertex(apiClient, fromTunedModelInfo));\n    }\n    return toObject;\n}\nfunction countTokensResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromTotalTokens = getValueByPath(fromObject, ['totalTokens']);\n    if (fromTotalTokens != null) {\n        setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n    }\n    return toObject;\n}\nfunction computeTokensResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromTokensInfo = getValueByPath(fromObject, ['tokensInfo']);\n    if (fromTokensInfo != null) {\n        setValueByPath(toObject, ['tokensInfo'], fromTokensInfo);\n    }\n    return toObject;\n}\nfunction videoFromVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(apiClient, fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromVertex$1(apiClient, fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, ['videos']);\n    if (fromGeneratedVideos != null) {\n        if (Array.isArray(fromGeneratedVideos)) {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos.map((item) => {\n                return generatedVideoFromVertex$1(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n        }\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromVertex$1(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromVertex$1(apiClient, fromResponse));\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst FUNCTION_RESPONSE_REQUIRES_ID = 'FunctionResponse request must have an `id` field from the response of a ToolCall.FunctionalCalls in Google AI.';\n/**\n * Handles incoming messages from the WebSocket.\n *\n * @remarks\n * This function is responsible for parsing incoming messages, transforming them\n * into LiveServerMessages, and then calling the onmessage callback. Note that\n * the first message which is received from the server is a setupComplete\n * message.\n *\n * @param apiClient The ApiClient instance.\n * @param onmessage The user-provided onmessage callback (if any).\n * @param event The MessageEvent from the WebSocket.\n */\nasync function handleWebSocketMessage(apiClient, onmessage, event) {\n    let serverMessage;\n    let data;\n    if (event.data instanceof Blob) {\n        data = JSON.parse(await event.data.text());\n    }\n    else {\n        data = JSON.parse(event.data);\n    }\n    if (apiClient.isVertexAI()) {\n        serverMessage = liveServerMessageFromVertex(apiClient, data);\n    }\n    else {\n        serverMessage = liveServerMessageFromMldev(apiClient, data);\n    }\n    onmessage(serverMessage);\n}\n/**\n   Live class encapsulates the configuration for live interaction with the\n   Generative Language API. It embeds ApiClient for general API settings.\n\n   @experimental\n  */\nclass Live {\n    constructor(apiClient, auth, webSocketFactory) {\n        this.apiClient = apiClient;\n        this.auth = auth;\n        this.webSocketFactory = webSocketFactory;\n    }\n    /**\n       Establishes a connection to the specified model with the given\n       configuration and returns a Session object representing that connection.\n  \n       @experimental\n  \n       @remarks\n  \n       @param params - The parameters for establishing a connection to the model.\n       @return A live session.\n  \n       @example\n       ```ts\n       let model: string;\n       if (GOOGLE_GENAI_USE_VERTEXAI) {\n         model = 'gemini-2.0-flash-live-preview-04-09';\n       } else {\n         model = 'gemini-2.0-flash-live-001';\n       }\n       const session = await ai.live.connect({\n         model: model,\n         config: {\n           responseModalities: [Modality.AUDIO],\n         },\n         callbacks: {\n           onopen: () => {\n             console.log('Connected to the socket.');\n           },\n           onmessage: (e: MessageEvent) => {\n             console.log('Received message from the server: %s\\n', debug(e.data));\n           },\n           onerror: (e: ErrorEvent) => {\n             console.log('Error occurred: %s\\n', debug(e.error));\n           },\n           onclose: (e: CloseEvent) => {\n             console.log('Connection closed.');\n           },\n         },\n       });\n       ```\n      */\n    async connect(params) {\n        var _a, _b, _c, _d;\n        const websocketBaseUrl = this.apiClient.getWebsocketBaseUrl();\n        const apiVersion = this.apiClient.getApiVersion();\n        let url;\n        const headers = mapToHeaders(this.apiClient.getDefaultHeaders());\n        if (this.apiClient.isVertexAI()) {\n            url = `${websocketBaseUrl}/ws/google.cloud.aiplatform.${apiVersion}.LlmBidiService/BidiGenerateContent`;\n            await this.auth.addAuthHeaders(headers);\n        }\n        else {\n            const apiKey = this.apiClient.getApiKey();\n            url = `${websocketBaseUrl}/ws/google.ai.generativelanguage.${apiVersion}.GenerativeService.BidiGenerateContent?key=${apiKey}`;\n        }\n        let onopenResolve = () => { };\n        const onopenPromise = new Promise((resolve) => {\n            onopenResolve = resolve;\n        });\n        const callbacks = params.callbacks;\n        const onopenAwaitedCallback = function () {\n            var _a;\n            (_a = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onopen) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n            onopenResolve({});\n        };\n        const apiClient = this.apiClient;\n        const websocketCallbacks = {\n            onopen: onopenAwaitedCallback,\n            onmessage: (event) => {\n                void handleWebSocketMessage(apiClient, callbacks.onmessage, event);\n            },\n            onerror: (_a = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onerror) !== null && _a !== void 0 ? _a : function (e) {\n            },\n            onclose: (_b = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onclose) !== null && _b !== void 0 ? _b : function (e) {\n            },\n        };\n        const conn = this.webSocketFactory.create(url, headersToMap(headers), websocketCallbacks);\n        conn.connect();\n        // Wait for the websocket to open before sending requests.\n        await onopenPromise;\n        let transformedModel = tModel(this.apiClient, params.model);\n        if (this.apiClient.isVertexAI() &&\n            transformedModel.startsWith('publishers/')) {\n            const project = this.apiClient.getProject();\n            const location = this.apiClient.getLocation();\n            transformedModel =\n                `projects/${project}/locations/${location}/` + transformedModel;\n        }\n        let clientMessage = {};\n        if (this.apiClient.isVertexAI() &&\n            ((_c = params.config) === null || _c === void 0 ? void 0 : _c.responseModalities) === undefined) {\n            // Set default to AUDIO to align with MLDev API.\n            if (params.config === undefined) {\n                params.config = { responseModalities: [Modality.AUDIO] };\n            }\n            else {\n                params.config.responseModalities = [Modality.AUDIO];\n            }\n        }\n        if ((_d = params.config) === null || _d === void 0 ? void 0 : _d.generationConfig) {\n            // Raise deprecation warning for generationConfig.\n            console.warn('Setting `LiveConnectConfig.generation_config` is deprecated, please set the fields on `LiveConnectConfig` directly. This will become an error in a future version (not before Q3 2025).');\n        }\n        const liveConnectParameters = {\n            model: transformedModel,\n            config: params.config,\n            callbacks: params.callbacks,\n        };\n        if (this.apiClient.isVertexAI()) {\n            clientMessage = liveConnectParametersToVertex(this.apiClient, liveConnectParameters);\n        }\n        else {\n            clientMessage = liveConnectParametersToMldev(this.apiClient, liveConnectParameters);\n        }\n        delete clientMessage['config'];\n        conn.send(JSON.stringify(clientMessage));\n        return new Session(conn, this.apiClient);\n    }\n}\nconst defaultLiveSendClientContentParamerters = {\n    turnComplete: true,\n};\n/**\n   Represents a connection to the API.\n\n   @experimental\n  */\nclass Session {\n    constructor(conn, apiClient) {\n        this.conn = conn;\n        this.apiClient = apiClient;\n    }\n    tLiveClientContent(apiClient, params) {\n        if (params.turns !== null && params.turns !== undefined) {\n            let contents = [];\n            try {\n                contents = tContents(apiClient, params.turns);\n                if (apiClient.isVertexAI()) {\n                    contents = contents.map((item) => contentToVertex(apiClient, item));\n                }\n                else {\n                    contents = contents.map((item) => contentToMldev(apiClient, item));\n                }\n            }\n            catch (_a) {\n                throw new Error(`Failed to parse client content \"turns\", type: '${typeof params.turns}'`);\n            }\n            return {\n                clientContent: { turns: contents, turnComplete: params.turnComplete },\n            };\n        }\n        return {\n            clientContent: { turnComplete: params.turnComplete },\n        };\n    }\n    tLiveClientRealtimeInput(apiClient, params) {\n        let clientMessage = {};\n        if (!('media' in params) || !params.media) {\n            throw new Error(`Failed to convert realtime input \"media\", type: '${typeof params.media}'`);\n        }\n        // LiveClientRealtimeInput\n        clientMessage = {\n            realtimeInput: {\n                mediaChunks: [params.media],\n                activityStart: params.activityStart,\n                activityEnd: params.activityEnd,\n            },\n        };\n        return clientMessage;\n    }\n    tLiveClienttToolResponse(apiClient, params) {\n        let functionResponses = [];\n        if (params.functionResponses == null) {\n            throw new Error('functionResponses is required.');\n        }\n        if (!Array.isArray(params.functionResponses)) {\n            functionResponses = [params.functionResponses];\n        }\n        else {\n            functionResponses = params.functionResponses;\n        }\n        if (functionResponses.length === 0) {\n            throw new Error('functionResponses is required.');\n        }\n        for (const functionResponse of functionResponses) {\n            if (typeof functionResponse !== 'object' ||\n                functionResponse === null ||\n                !('name' in functionResponse) ||\n                !('response' in functionResponse)) {\n                throw new Error(`Could not parse function response, type '${typeof functionResponse}'.`);\n            }\n            if (!apiClient.isVertexAI() && !('id' in functionResponse)) {\n                throw new Error(FUNCTION_RESPONSE_REQUIRES_ID);\n            }\n        }\n        const clientMessage = {\n            toolResponse: { functionResponses: functionResponses },\n        };\n        return clientMessage;\n    }\n    /**\n      Send a message over the established connection.\n  \n      @param params - Contains two **optional** properties, `turns` and\n          `turnComplete`.\n  \n        - `turns` will be converted to a `Content[]`\n        - `turnComplete: true` [default] indicates that you are done sending\n          content and expect a response. If `turnComplete: false`, the server\n          will wait for additional messages before starting generation.\n  \n      @experimental\n  \n      @remarks\n      There are two ways to send messages to the live API:\n      `sendClientContent` and `sendRealtimeInput`.\n  \n      `sendClientContent` messages are added to the model context **in order**.\n      Having a conversation using `sendClientContent` messages is roughly\n      equivalent to using the `Chat.sendMessageStream`, except that the state of\n      the `chat` history is stored on the API server instead of locally.\n  \n      Because of `sendClientContent`'s order guarantee, the model cannot respons\n      as quickly to `sendClientContent` messages as to `sendRealtimeInput`\n      messages. This makes the biggest difference when sending objects that have\n      significant preprocessing time (typically images).\n  \n      The `sendClientContent` message sends a `Content[]`\n      which has more options than the `Blob` sent by `sendRealtimeInput`.\n  \n      So the main use-cases for `sendClientContent` over `sendRealtimeInput` are:\n  \n      - Sending anything that can't be represented as a `Blob` (text,\n      `sendClientContent({turns=\"Hello?\"}`)).\n      - Managing turns when not using audio input and voice activity detection.\n        (`sendClientContent({turnComplete:true})` or the short form\n      `sendClientContent()`)\n      - Prefilling a conversation context\n        ```\n        sendClientContent({\n            turns: [\n              Content({role:user, parts:...}),\n              Content({role:user, parts:...}),\n              ...\n            ]\n        })\n        ```\n      @experimental\n     */\n    sendClientContent(params) {\n        params = Object.assign(Object.assign({}, defaultLiveSendClientContentParamerters), params);\n        const clientMessage = this.tLiveClientContent(this.apiClient, params);\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n      Send a realtime message over the established connection.\n  \n      @param params - Contains one property, `media`.\n  \n        - `media` will be converted to a `Blob`\n  \n      @experimental\n  \n      @remarks\n      Use `sendRealtimeInput` for realtime audio chunks and video frames (images).\n  \n      With `sendRealtimeInput` the api will respond to audio automatically\n      based on voice activity detection (VAD).\n  \n      `sendRealtimeInput` is optimized for responsivness at the expense of\n      deterministic ordering guarantees. Audio and video tokens are to the\n      context when they become available.\n  \n      Note: The Call signature expects a `Blob` object, but only a subset\n      of audio and image mimetypes are allowed.\n     */\n    sendRealtimeInput(params) {\n        if (params.media == null) {\n            throw new Error('Media is required.');\n        }\n        const clientMessage = this.tLiveClientRealtimeInput(this.apiClient, params);\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n      Send a function response message over the established connection.\n  \n      @param params - Contains property `functionResponses`.\n  \n        - `functionResponses` will be converted to a `functionResponses[]`\n  \n      @remarks\n      Use `sendFunctionResponse` to reply to `LiveServerToolCall` from the server.\n  \n      Use {@link types.LiveConnectConfig#tools} to configure the callable functions.\n  \n      @experimental\n     */\n    sendToolResponse(params) {\n        if (params.functionResponses == null) {\n            throw new Error('Tool response parameters are required.');\n        }\n        const clientMessage = this.tLiveClienttToolResponse(this.apiClient, params);\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n       Terminates the WebSocket connection.\n  \n       @experimental\n  \n       @example\n       ```ts\n       let model: string;\n       if (GOOGLE_GENAI_USE_VERTEXAI) {\n         model = 'gemini-2.0-flash-live-preview-04-09';\n       } else {\n         model = 'gemini-2.0-flash-live-001';\n       }\n       const session = await ai.live.connect({\n         model: model,\n         config: {\n           responseModalities: [Modality.AUDIO],\n         }\n       });\n  \n       session.close();\n       ```\n     */\n    close() {\n        this.conn.close();\n    }\n}\n// Converts an headers object to a \"map\" object as expected by the WebSocket\n// constructor. We use this as the Auth interface works with Headers objects\n// while the WebSocket constructor takes a map.\nfunction headersToMap(headers) {\n    const headerMap = {};\n    headers.forEach((value, key) => {\n        headerMap[key] = value;\n    });\n    return headerMap;\n}\n// Converts a \"map\" object to a headers object. We use this as the Auth\n// interface works with Headers objects while the API client default headers\n// returns a map.\nfunction mapToHeaders(map) {\n    const headers = new Headers();\n    for (const [key, value] of Object.entries(map)) {\n        headers.append(key, value);\n    }\n    return headers;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Models extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Makes an API request to generate content with a given model.\n         *\n         * For the `model` parameter, supported formats for Vertex AI API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The full resource name starts with 'projects/', for example:\n         *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n         * - The partial resource name with 'publishers/', for example:\n         *  'publishers/google/models/gemini-2.0-flash' or\n         *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n         * - `/` separated publisher and model name, for example:\n         * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n         *\n         * For the `model` parameter, supported formats for Gemini API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The model name starts with 'models/', for example:\n         *  'models/gemini-2.0-flash'\n         * - For tuned models, the model name starts with 'tunedModels/',\n         * for example:\n         * 'tunedModels/1234567890123456789'\n         *\n         * Some models support multimodal input and output.\n         *\n         * @param params - The parameters for generating content.\n         * @return The response from generating content.\n         *\n         * @example\n         * ```ts\n         * const response = await ai.models.generateContent({\n         *   model: 'gemini-2.0-flash',\n         *   contents: 'why is the sky blue?',\n         *   config: {\n         *     candidateCount: 2,\n         *   }\n         * });\n         * console.log(response);\n         * ```\n         */\n        this.generateContent = async (params) => {\n            return await this.generateContentInternal(params);\n        };\n        /**\n         * Makes an API request to generate content with a given model and yields the\n         * response in chunks.\n         *\n         * For the `model` parameter, supported formats for Vertex AI API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The full resource name starts with 'projects/', for example:\n         *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n         * - The partial resource name with 'publishers/', for example:\n         *  'publishers/google/models/gemini-2.0-flash' or\n         *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n         * - `/` separated publisher and model name, for example:\n         * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n         *\n         * For the `model` parameter, supported formats for Gemini API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The model name starts with 'models/', for example:\n         *  'models/gemini-2.0-flash'\n         * - For tuned models, the model name starts with 'tunedModels/',\n         * for example:\n         *  'tunedModels/1234567890123456789'\n         *\n         * Some models support multimodal input and output.\n         *\n         * @param params - The parameters for generating content with streaming response.\n         * @return The response from generating content.\n         *\n         * @example\n         * ```ts\n         * const response = await ai.models.generateContentStream({\n         *   model: 'gemini-2.0-flash',\n         *   contents: 'why is the sky blue?',\n         *   config: {\n         *     maxOutputTokens: 200,\n         *   }\n         * });\n         * for await (const chunk of response) {\n         *   console.log(chunk);\n         * }\n         * ```\n         */\n        this.generateContentStream = async (params) => {\n            return await this.generateContentStreamInternal(params);\n        };\n        /**\n         * Generates an image based on a text description and configuration.\n         *\n         * @param model - The model to use.\n         * @param prompt - A text description of the image to generate.\n         * @param [config] - The config for image generation.\n         * @return The response from the API.\n         *\n         * @example\n         * ```ts\n         * const response = await client.models.generateImages({\n         *  model: 'imagen-3.0-generate-002',\n         *  prompt: 'Robot holding a red skateboard',\n         *  config: {\n         *    numberOfImages: 1,\n         *    includeRaiReason: true,\n         *  },\n         * });\n         * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n         * ```\n         */\n        this.generateImages = async (params) => {\n            return await this.generateImagesInternal(params).then((apiResponse) => {\n                var _a;\n                let positivePromptSafetyAttributes;\n                const generatedImages = [];\n                if (apiResponse === null || apiResponse === void 0 ? void 0 : apiResponse.generatedImages) {\n                    for (const generatedImage of apiResponse.generatedImages) {\n                        if (generatedImage &&\n                            (generatedImage === null || generatedImage === void 0 ? void 0 : generatedImage.safetyAttributes) &&\n                            ((_a = generatedImage === null || generatedImage === void 0 ? void 0 : generatedImage.safetyAttributes) === null || _a === void 0 ? void 0 : _a.contentType) === 'Positive Prompt') {\n                            positivePromptSafetyAttributes = generatedImage === null || generatedImage === void 0 ? void 0 : generatedImage.safetyAttributes;\n                        }\n                        else {\n                            generatedImages.push(generatedImage);\n                        }\n                    }\n                }\n                let response;\n                if (positivePromptSafetyAttributes) {\n                    response = {\n                        generatedImages: generatedImages,\n                        positivePromptSafetyAttributes: positivePromptSafetyAttributes,\n                    };\n                }\n                else {\n                    response = {\n                        generatedImages: generatedImages,\n                    };\n                }\n                return response;\n            });\n        };\n    }\n    async generateContentInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:generateContent', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateContentResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new GenerateContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = generateContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:generateContent', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateContentResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new GenerateContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    async generateContentStreamInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:streamGenerateContent?alt=sse', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            const apiClient = this.apiClient;\n            response = apiClient.requestStream({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            });\n            return response.then(function (apiResponse) {\n                return __asyncGenerator(this, arguments, function* () {\n                    var _a, e_1, _b, _c;\n                    try {\n                        for (var _d = true, apiResponse_1 = __asyncValues(apiResponse), apiResponse_1_1; apiResponse_1_1 = yield __await(apiResponse_1.next()), _a = apiResponse_1_1.done, !_a; _d = true) {\n                            _c = apiResponse_1_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            const resp = generateContentResponseFromVertex(apiClient, (yield __await(chunk.json())));\n                            const typedResp = new GenerateContentResponse();\n                            Object.assign(typedResp, resp);\n                            yield yield __await(typedResp);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = apiResponse_1.return)) yield __await(_b.call(apiResponse_1));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                });\n            });\n        }\n        else {\n            const body = generateContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:streamGenerateContent?alt=sse', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            const apiClient = this.apiClient;\n            response = apiClient.requestStream({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            });\n            return response.then(function (apiResponse) {\n                return __asyncGenerator(this, arguments, function* () {\n                    var _a, e_2, _b, _c;\n                    try {\n                        for (var _d = true, apiResponse_2 = __asyncValues(apiResponse), apiResponse_2_1; apiResponse_2_1 = yield __await(apiResponse_2.next()), _a = apiResponse_2_1.done, !_a; _d = true) {\n                            _c = apiResponse_2_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            const resp = generateContentResponseFromMldev(apiClient, (yield __await(chunk.json())));\n                            const typedResp = new GenerateContentResponse();\n                            Object.assign(typedResp, resp);\n                            yield yield __await(typedResp);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = apiResponse_2.return)) yield __await(_b.call(apiResponse_2));\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Calculates embeddings for the given contents. Only text is supported.\n     *\n     * @param params - The parameters for embedding contents.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.embedContent({\n     *  model: 'text-embedding-004',\n     *  contents: [\n     *    'What is your name?',\n     *    'What is your favorite color?',\n     *  ],\n     *  config: {\n     *    outputDimensionality: 64,\n     *  },\n     * });\n     * console.log(response);\n     * ```\n     */\n    async embedContent(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = embedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = embedContentResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new EmbedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = embedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:batchEmbedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = embedContentResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new EmbedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Generates an image based on a text description and configuration.\n     *\n     * @param params - The parameters for generating images.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateImages({\n     *  model: 'imagen-3.0-generate-002',\n     *  prompt: 'Robot holding a red skateboard',\n     *  config: {\n     *    numberOfImages: 1,\n     *    includeRaiReason: true,\n     *  },\n     * });\n     * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n     * ```\n     */\n    async generateImagesInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateImagesParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateImagesResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new GenerateImagesResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = generateImagesParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateImagesResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new GenerateImagesResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Fetches information about a model by name.\n     *\n     * @example\n     * ```ts\n     * const modelInfo = await ai.models.get({model: 'gemini-2.0-flash'});\n     * ```\n     */\n    async get(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getModelParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = modelFromVertex(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getModelParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = modelFromMldev(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Counts the number of tokens in the given contents. Multimodal input is\n     * supported for Gemini models.\n     *\n     * @param params - The parameters for counting tokens.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.countTokens({\n     *  model: 'gemini-2.0-flash',\n     *  contents: 'The quick brown fox jumps over the lazy dog.'\n     * });\n     * console.log(response);\n     * ```\n     */\n    async countTokens(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = countTokensParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:countTokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = countTokensResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new CountTokensResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = countTokensParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:countTokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = countTokensResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new CountTokensResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Given a list of contents, returns a corresponding TokensInfo containing\n     * the list of tokens and list of token ids.\n     *\n     * This method is not supported by the Gemini Developer API.\n     *\n     * @param params - The parameters for computing tokens.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.computeTokens({\n     *  model: 'gemini-2.0-flash',\n     *  contents: 'What is your name?'\n     * });\n     * console.log(response);\n     * ```\n     */\n    async computeTokens(params) {\n        var _a;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = computeTokensParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:computeTokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = computeTokensResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new ComputeTokensResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n    /**\n     *  Generates videos based on a text description and configuration.\n     *\n     * @param params - The parameters for generating videos.\n     * @return A Promise<GenerateVideosOperation> which allows you to track the progress and eventually retrieve the generated videos using the operations.get method.\n     *\n     * @example\n     * ```ts\n     * const operation = await ai.models.generateVideos({\n     *  model: 'veo-2.0-generate-001',\n     *  prompt: 'A neon hologram of a cat driving at top speed',\n     *  config: {\n     *    numberOfVideos: 1\n     * });\n     *\n     * while (!operation.done) {\n     *   await new Promise(resolve => setTimeout(resolve, 10000));\n     *   operation = await ai.operations.getVideosOperation({operation: operation});\n     * }\n     *\n     * console.log(operation.response?.generatedVideos?.[0]?.video?.uri);\n     * ```\n     */\n    async generateVideos(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateVideosParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:predictLongRunning', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromVertex$1(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = generateVideosParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:predictLongRunning', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromMldev$1(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction getOperationParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromOperationName = getValueByPath(fromObject, [\n        'operationName',\n    ]);\n    if (fromOperationName != null) {\n        setValueByPath(toObject, ['_url', 'operationName'], fromOperationName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction getOperationParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromOperationName = getValueByPath(fromObject, [\n        'operationName',\n    ]);\n    if (fromOperationName != null) {\n        setValueByPath(toObject, ['_url', 'operationName'], fromOperationName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction fetchPredictOperationParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromOperationName = getValueByPath(fromObject, [\n        'operationName',\n    ]);\n    if (fromOperationName != null) {\n        setValueByPath(toObject, ['operationName'], fromOperationName);\n    }\n    const fromResourceName = getValueByPath(fromObject, ['resourceName']);\n    if (fromResourceName != null) {\n        setValueByPath(toObject, ['_url', 'resourceName'], fromResourceName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction videoFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['video', 'uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'video',\n        'encodedVideo',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(apiClient, fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['encoding']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromMldev(apiClient, fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, [\n        'generatedSamples',\n    ]);\n    if (fromGeneratedVideos != null) {\n        if (Array.isArray(fromGeneratedVideos)) {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos.map((item) => {\n                return generatedVideoFromMldev(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n        }\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, [\n        'response',\n        'generateVideoResponse',\n    ]);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromMldev(apiClient, fromResponse));\n    }\n    return toObject;\n}\nfunction videoFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(apiClient, fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromVertex(apiClient, fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, ['videos']);\n    if (fromGeneratedVideos != null) {\n        if (Array.isArray(fromGeneratedVideos)) {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos.map((item) => {\n                return generatedVideoFromVertex(apiClient, item);\n            }));\n        }\n        else {\n            setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n        }\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromVertex(apiClient, fromResponse));\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Operations extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n    }\n    /**\n     * Gets the status of a long-running operation.\n     *\n     * @param parameters The parameters for the get operation request.\n     * @return The updated Operation object, with the latest status or result.\n     */\n    async getVideosOperation(parameters) {\n        const operation = parameters.operation;\n        const config = parameters.config;\n        if (operation.name === undefined || operation.name === '') {\n            throw new Error('Operation name is required.');\n        }\n        if (this.apiClient.isVertexAI()) {\n            const resourceName = operation.name.split('/operations/')[0];\n            let httpOptions = undefined;\n            if (config && 'httpOptions' in config) {\n                httpOptions = config.httpOptions;\n            }\n            return this.fetchPredictVideosOperationInternal({\n                operationName: operation.name,\n                resourceName: resourceName,\n                config: { httpOptions: httpOptions },\n            });\n        }\n        else {\n            return this.getVideosOperationInternal({\n                operationName: operation.name,\n                config: config,\n            });\n        }\n    }\n    async getVideosOperationInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getOperationParametersToVertex(this.apiClient, params);\n            path = formatMap('{operationName}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromVertex(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getOperationParametersToMldev(this.apiClient, params);\n            path = formatMap('{operationName}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_b = params.config) === null || _b === void 0 ? void 0 : _b.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromMldev(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n    }\n    async fetchPredictVideosOperationInternal(params) {\n        var _a;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = fetchPredictOperationParametersToVertex(this.apiClient, params);\n            path = formatMap('{resourceName}:fetchPredictOperation', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromVertex(this.apiClient, apiResponse);\n                return resp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst CONTENT_TYPE_HEADER = 'Content-Type';\nconst SERVER_TIMEOUT_HEADER = 'X-Server-Timeout';\nconst USER_AGENT_HEADER = 'User-Agent';\nconst GOOGLE_API_CLIENT_HEADER = 'x-goog-api-client';\nconst SDK_VERSION = '0.9.0'; // x-release-please-version\nconst LIBRARY_LABEL = `google-genai-sdk/${SDK_VERSION}`;\nconst VERTEX_AI_API_DEFAULT_VERSION = 'v1beta1';\nconst GOOGLE_AI_API_DEFAULT_VERSION = 'v1beta';\nconst responseLineRE = /^data: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Client errors raised by the GenAI API.\n */\nclass ClientError extends Error {\n    constructor(message, stackTrace) {\n        if (stackTrace) {\n            super(message, { cause: stackTrace });\n        }\n        else {\n            super(message, { cause: new Error().stack });\n        }\n        this.message = message;\n        this.name = 'ClientError';\n    }\n}\n/**\n * Server errors raised by the GenAI API.\n */\nclass ServerError extends Error {\n    constructor(message, stackTrace) {\n        if (stackTrace) {\n            super(message, { cause: stackTrace });\n        }\n        else {\n            super(message, { cause: new Error().stack });\n        }\n        this.message = message;\n        this.name = 'ServerError';\n    }\n}\n/**\n * The ApiClient class is used to send requests to the Gemini API or Vertex AI\n * endpoints.\n */\nclass ApiClient {\n    constructor(opts) {\n        var _a, _b;\n        this.clientOptions = Object.assign(Object.assign({}, opts), { project: opts.project, location: opts.location, apiKey: opts.apiKey, vertexai: opts.vertexai });\n        const initHttpOptions = {};\n        if (this.clientOptions.vertexai) {\n            initHttpOptions.apiVersion =\n                (_a = this.clientOptions.apiVersion) !== null && _a !== void 0 ? _a : VERTEX_AI_API_DEFAULT_VERSION;\n            // Assume that proj/api key validation occurs before they are passed in.\n            if (this.getProject() || this.getLocation()) {\n                initHttpOptions.baseUrl = `https://${this.clientOptions.location}-aiplatform.googleapis.com/`;\n                this.clientOptions.apiKey = undefined; // unset API key.\n            }\n            else {\n                initHttpOptions.baseUrl = `https://aiplatform.googleapis.com/`;\n                this.clientOptions.project = undefined; // unset project.\n                this.clientOptions.location = undefined; // unset location.\n            }\n        }\n        else {\n            initHttpOptions.apiVersion =\n                (_b = this.clientOptions.apiVersion) !== null && _b !== void 0 ? _b : GOOGLE_AI_API_DEFAULT_VERSION;\n            initHttpOptions.baseUrl = `https://generativelanguage.googleapis.com/`;\n        }\n        initHttpOptions.headers = this.getDefaultHeaders();\n        this.clientOptions.httpOptions = initHttpOptions;\n        if (opts.httpOptions) {\n            this.clientOptions.httpOptions = this.patchHttpOptions(initHttpOptions, opts.httpOptions);\n        }\n    }\n    isVertexAI() {\n        var _a;\n        return (_a = this.clientOptions.vertexai) !== null && _a !== void 0 ? _a : false;\n    }\n    getProject() {\n        return this.clientOptions.project;\n    }\n    getLocation() {\n        return this.clientOptions.location;\n    }\n    getApiVersion() {\n        if (this.clientOptions.httpOptions &&\n            this.clientOptions.httpOptions.apiVersion !== undefined) {\n            return this.clientOptions.httpOptions.apiVersion;\n        }\n        throw new Error('API version is not set.');\n    }\n    getBaseUrl() {\n        if (this.clientOptions.httpOptions &&\n            this.clientOptions.httpOptions.baseUrl !== undefined) {\n            return this.clientOptions.httpOptions.baseUrl;\n        }\n        throw new Error('Base URL is not set.');\n    }\n    getRequestUrl() {\n        return this.getRequestUrlInternal(this.clientOptions.httpOptions);\n    }\n    getHeaders() {\n        if (this.clientOptions.httpOptions &&\n            this.clientOptions.httpOptions.headers !== undefined) {\n            return this.clientOptions.httpOptions.headers;\n        }\n        else {\n            throw new Error('Headers are not set.');\n        }\n    }\n    getRequestUrlInternal(httpOptions) {\n        if (!httpOptions ||\n            httpOptions.baseUrl === undefined ||\n            httpOptions.apiVersion === undefined) {\n            throw new Error('HTTP options are not correctly set.');\n        }\n        const baseUrl = httpOptions.baseUrl.endsWith('/')\n            ? httpOptions.baseUrl.slice(0, -1)\n            : httpOptions.baseUrl;\n        const urlElement = [baseUrl];\n        if (httpOptions.apiVersion && httpOptions.apiVersion !== '') {\n            urlElement.push(httpOptions.apiVersion);\n        }\n        return urlElement.join('/');\n    }\n    getBaseResourcePath() {\n        return `projects/${this.clientOptions.project}/locations/${this.clientOptions.location}`;\n    }\n    getApiKey() {\n        return this.clientOptions.apiKey;\n    }\n    getWebsocketBaseUrl() {\n        const baseUrl = this.getBaseUrl();\n        const urlParts = new URL(baseUrl);\n        urlParts.protocol = 'wss';\n        return urlParts.toString();\n    }\n    setBaseUrl(url) {\n        if (this.clientOptions.httpOptions) {\n            this.clientOptions.httpOptions.baseUrl = url;\n        }\n        else {\n            throw new Error('HTTP options are not correctly set.');\n        }\n    }\n    constructUrl(path, httpOptions, prependProjectLocation) {\n        const urlElement = [this.getRequestUrlInternal(httpOptions)];\n        if (prependProjectLocation) {\n            urlElement.push(this.getBaseResourcePath());\n        }\n        if (path !== '') {\n            urlElement.push(path);\n        }\n        const url = new URL(`${urlElement.join('/')}`);\n        return url;\n    }\n    shouldPrependVertexProjectPath(request) {\n        if (this.clientOptions.apiKey) {\n            return false;\n        }\n        if (!this.clientOptions.vertexai) {\n            return false;\n        }\n        if (request.path.startsWith('projects/')) {\n            // Assume the path already starts with\n            // `projects/<project>/location/<location>`.\n            return false;\n        }\n        if (request.httpMethod === 'GET' &&\n            request.path.startsWith('publishers/google/models')) {\n            // These paths are used by Vertex's models.get and models.list\n            // calls. For base models Vertex does not accept a project/location\n            // prefix (for tuned model the prefix is required).\n            return false;\n        }\n        return true;\n    }\n    async request(request) {\n        let patchedHttpOptions = this.clientOptions.httpOptions;\n        if (request.httpOptions) {\n            patchedHttpOptions = this.patchHttpOptions(this.clientOptions.httpOptions, request.httpOptions);\n        }\n        const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n        const url = this.constructUrl(request.path, patchedHttpOptions, prependProjectLocation);\n        if (request.queryParams) {\n            for (const [key, value] of Object.entries(request.queryParams)) {\n                url.searchParams.append(key, String(value));\n            }\n        }\n        let requestInit = {};\n        if (request.httpMethod === 'GET') {\n            if (request.body && request.body !== '{}') {\n                throw new Error('Request body should be empty for GET request, but got non empty request body');\n            }\n        }\n        else {\n            requestInit.body = request.body;\n        }\n        requestInit = await this.includeExtraHttpOptionsToRequestInit(requestInit, patchedHttpOptions);\n        return this.unaryApiCall(url, requestInit, request.httpMethod);\n    }\n    patchHttpOptions(baseHttpOptions, requestHttpOptions) {\n        const patchedHttpOptions = JSON.parse(JSON.stringify(baseHttpOptions));\n        for (const [key, value] of Object.entries(requestHttpOptions)) {\n            // Records compile to objects.\n            if (typeof value === 'object') {\n                // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n                // because expression of type 'string' can't be used to index type\n                // 'HttpOptions'.\n                patchedHttpOptions[key] = Object.assign(Object.assign({}, patchedHttpOptions[key]), value);\n            }\n            else if (value !== undefined) {\n                // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n                // because expression of type 'string' can't be used to index type\n                // 'HttpOptions'.\n                patchedHttpOptions[key] = value;\n            }\n        }\n        return patchedHttpOptions;\n    }\n    async requestStream(request) {\n        let patchedHttpOptions = this.clientOptions.httpOptions;\n        if (request.httpOptions) {\n            patchedHttpOptions = this.patchHttpOptions(this.clientOptions.httpOptions, request.httpOptions);\n        }\n        const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n        const url = this.constructUrl(request.path, patchedHttpOptions, prependProjectLocation);\n        if (!url.searchParams.has('alt') || url.searchParams.get('alt') !== 'sse') {\n            url.searchParams.set('alt', 'sse');\n        }\n        let requestInit = {};\n        requestInit.body = request.body;\n        requestInit = await this.includeExtraHttpOptionsToRequestInit(requestInit, patchedHttpOptions);\n        return this.streamApiCall(url, requestInit, request.httpMethod);\n    }\n    async includeExtraHttpOptionsToRequestInit(requestInit, httpOptions) {\n        if (httpOptions && httpOptions.timeout && httpOptions.timeout > 0) {\n            const abortController = new AbortController();\n            const signal = abortController.signal;\n            setTimeout(() => abortController.abort(), httpOptions.timeout);\n            requestInit.signal = signal;\n        }\n        requestInit.headers = await this.getHeadersInternal(httpOptions);\n        return requestInit;\n    }\n    async unaryApiCall(url, requestInit, httpMethod) {\n        return this.apiCall(url.toString(), Object.assign(Object.assign({}, requestInit), { method: httpMethod }))\n            .then(async (response) => {\n            await throwErrorIfNotOK(response);\n            return new HttpResponse(response);\n        })\n            .catch((e) => {\n            if (e instanceof Error) {\n                throw e;\n            }\n            else {\n                throw new Error(JSON.stringify(e));\n            }\n        });\n    }\n    async streamApiCall(url, requestInit, httpMethod) {\n        return this.apiCall(url.toString(), Object.assign(Object.assign({}, requestInit), { method: httpMethod }))\n            .then(async (response) => {\n            await throwErrorIfNotOK(response);\n            return this.processStreamResponse(response);\n        })\n            .catch((e) => {\n            if (e instanceof Error) {\n                throw e;\n            }\n            else {\n                throw new Error(JSON.stringify(e));\n            }\n        });\n    }\n    processStreamResponse(response) {\n        var _a;\n        return __asyncGenerator(this, arguments, function* processStreamResponse_1() {\n            const reader = (_a = response === null || response === void 0 ? void 0 : response.body) === null || _a === void 0 ? void 0 : _a.getReader();\n            const decoder = new TextDecoder('utf-8');\n            if (!reader) {\n                throw new Error('Response body is empty');\n            }\n            try {\n                let buffer = '';\n                while (true) {\n                    const { done, value } = yield __await(reader.read());\n                    if (done) {\n                        if (buffer.trim().length > 0) {\n                            throw new Error('Incomplete JSON segment at the end');\n                        }\n                        break;\n                    }\n                    const chunkString = decoder.decode(value);\n                    buffer += chunkString;\n                    let match = buffer.match(responseLineRE);\n                    while (match) {\n                        const processedChunkString = match[1];\n                        try {\n                            const partialResponse = new Response(processedChunkString, {\n                                headers: response === null || response === void 0 ? void 0 : response.headers,\n                                status: response === null || response === void 0 ? void 0 : response.status,\n                                statusText: response === null || response === void 0 ? void 0 : response.statusText,\n                            });\n                            yield yield __await(new HttpResponse(partialResponse));\n                            buffer = buffer.slice(match[0].length);\n                            match = buffer.match(responseLineRE);\n                        }\n                        catch (e) {\n                            throw new Error(`exception parsing stream chunk ${processedChunkString}. ${e}`);\n                        }\n                    }\n                }\n            }\n            finally {\n                reader.releaseLock();\n            }\n        });\n    }\n    async apiCall(url, requestInit) {\n        return fetch(url, requestInit).catch((e) => {\n            throw new Error(`exception ${e} sending request`);\n        });\n    }\n    getDefaultHeaders() {\n        const headers = {};\n        const versionHeaderValue = LIBRARY_LABEL + ' ' + this.clientOptions.userAgentExtra;\n        headers[USER_AGENT_HEADER] = versionHeaderValue;\n        headers[GOOGLE_API_CLIENT_HEADER] = versionHeaderValue;\n        headers[CONTENT_TYPE_HEADER] = 'application/json';\n        return headers;\n    }\n    async getHeadersInternal(httpOptions) {\n        const headers = new Headers();\n        if (httpOptions && httpOptions.headers) {\n            for (const [key, value] of Object.entries(httpOptions.headers)) {\n                headers.append(key, value);\n            }\n            // Append a timeout header if it is set, note that the timeout option is\n            // in milliseconds but the header is in seconds.\n            if (httpOptions.timeout && httpOptions.timeout > 0) {\n                headers.append(SERVER_TIMEOUT_HEADER, String(Math.ceil(httpOptions.timeout / 1000)));\n            }\n        }\n        await this.clientOptions.auth.addAuthHeaders(headers);\n        return headers;\n    }\n    /**\n     * Uploads a file asynchronously using Gemini API only, this is not supported\n     * in Vertex AI.\n     *\n     * @param file The string path to the file to be uploaded or a Blob object.\n     * @param config Optional parameters specified in the `UploadFileConfig`\n     *     interface. @see {@link UploadFileConfig}\n     * @return A promise that resolves to a `File` object.\n     * @throws An error if called on a Vertex AI client.\n     * @throws An error if the `mimeType` is not provided and can not be inferred,\n     */\n    async uploadFile(file, config) {\n        var _a;\n        const fileToUpload = {};\n        if (config != null) {\n            fileToUpload.mimeType = config.mimeType;\n            fileToUpload.name = config.name;\n            fileToUpload.displayName = config.displayName;\n        }\n        if (fileToUpload.name && !fileToUpload.name.startsWith('files/')) {\n            fileToUpload.name = `files/${fileToUpload.name}`;\n        }\n        const uploader = this.clientOptions.uploader;\n        const fileStat = await uploader.stat(file);\n        fileToUpload.sizeBytes = String(fileStat.size);\n        const mimeType = (_a = config === null || config === void 0 ? void 0 : config.mimeType) !== null && _a !== void 0 ? _a : fileStat.type;\n        if (mimeType === undefined || mimeType === '') {\n            throw new Error('Can not determine mimeType. Please provide mimeType in the config.');\n        }\n        fileToUpload.mimeType = mimeType;\n        const uploadUrl = await this.fetchUploadUrl(fileToUpload, config);\n        return uploader.upload(file, uploadUrl, this);\n    }\n    async fetchUploadUrl(file, config) {\n        var _a;\n        let httpOptions = {};\n        if (config === null || config === void 0 ? void 0 : config.httpOptions) {\n            httpOptions = config.httpOptions;\n        }\n        else {\n            httpOptions = {\n                apiVersion: '',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Goog-Upload-Protocol': 'resumable',\n                    'X-Goog-Upload-Command': 'start',\n                    'X-Goog-Upload-Header-Content-Length': `${file.sizeBytes}`,\n                    'X-Goog-Upload-Header-Content-Type': `${file.mimeType}`,\n                },\n            };\n        }\n        const body = {\n            'file': file,\n        };\n        const httpResponse = await this.request({\n            path: formatMap('upload/v1beta/files', body['_url']),\n            body: JSON.stringify(body),\n            httpMethod: 'POST',\n            httpOptions,\n        });\n        if (!httpResponse || !(httpResponse === null || httpResponse === void 0 ? void 0 : httpResponse.headers)) {\n            throw new Error('Server did not return an HttpResponse or the returned HttpResponse did not have headers.');\n        }\n        const uploadUrl = (_a = httpResponse === null || httpResponse === void 0 ? void 0 : httpResponse.headers) === null || _a === void 0 ? void 0 : _a['x-goog-upload-url'];\n        if (uploadUrl === undefined) {\n            throw new Error('Failed to get upload url. Server did not return the x-google-upload-url in the headers');\n        }\n        return uploadUrl;\n    }\n}\nasync function throwErrorIfNotOK(response) {\n    var _a;\n    if (response === undefined) {\n        throw new ServerError('response is undefined');\n    }\n    if (!response.ok) {\n        const status = response.status;\n        const statusText = response.statusText;\n        let errorBody;\n        if ((_a = response.headers.get('content-type')) === null || _a === void 0 ? void 0 : _a.includes('application/json')) {\n            errorBody = await response.json();\n        }\n        else {\n            errorBody = {\n                error: {\n                    message: 'exception parsing response',\n                    code: response.status,\n                    status: response.statusText,\n                },\n            };\n        }\n        const errorMessage = `got status: ${status} ${statusText}. ${JSON.stringify(errorBody)}`;\n        if (status >= 400 && status < 500) {\n            const clientError = new ClientError(errorMessage);\n            throw clientError;\n        }\n        else if (status >= 500 && status < 600) {\n            const serverError = new ServerError(errorMessage);\n            throw serverError;\n        }\n        throw new Error(errorMessage);\n    }\n}\n\nconst MAX_CHUNK_SIZE = 1024 * 1024 * 8; // bytes\nasync function uploadBlob(file, uploadUrl, apiClient) {\n    var _a, _b;\n    let fileSize = 0;\n    let offset = 0;\n    let response = new HttpResponse(new Response());\n    let uploadCommand = 'upload';\n    fileSize = file.size;\n    while (offset < fileSize) {\n        const chunkSize = Math.min(MAX_CHUNK_SIZE, fileSize - offset);\n        const chunk = file.slice(offset, offset + chunkSize);\n        if (offset + chunkSize >= fileSize) {\n            uploadCommand += ', finalize';\n        }\n        response = await apiClient.request({\n            path: '',\n            body: chunk,\n            httpMethod: 'POST',\n            httpOptions: {\n                apiVersion: '',\n                baseUrl: uploadUrl,\n                headers: {\n                    'X-Goog-Upload-Command': uploadCommand,\n                    'X-Goog-Upload-Offset': String(offset),\n                    'Content-Length': String(chunkSize),\n                },\n            },\n        });\n        offset += chunkSize;\n        // The `x-goog-upload-status` header field can be `active`, `final` and\n        //`cancelled` in resposne.\n        if (((_a = response === null || response === void 0 ? void 0 : response.headers) === null || _a === void 0 ? void 0 : _a['x-goog-upload-status']) !== 'active') {\n            break;\n        }\n        // TODO(b/401391430) Investigate why the upload status is not finalized\n        // even though all content has been uploaded.\n        if (fileSize <= offset) {\n            throw new Error('All content has been uploaded, but the upload status is not finalized.');\n        }\n    }\n    const responseJson = (await (response === null || response === void 0 ? void 0 : response.json()));\n    if (((_b = response === null || response === void 0 ? void 0 : response.headers) === null || _b === void 0 ? void 0 : _b['x-goog-upload-status']) !== 'final') {\n        throw new Error('Failed to upload file: Upload status is not finalized.');\n    }\n    return responseJson['file'];\n}\nasync function getBlobStat(file) {\n    const fileStat = { size: file.size, type: file.type };\n    return fileStat;\n}\n\nclass BrowserUploader {\n    async upload(file, uploadUrl, apiClient) {\n        if (typeof file === 'string') {\n            throw new Error('File path is not supported in browser uploader.');\n        }\n        return await uploadBlob(file, uploadUrl, apiClient);\n    }\n    async stat(file) {\n        if (typeof file === 'string') {\n            throw new Error('File path is not supported in browser uploader.');\n        }\n        else {\n            return await getBlobStat(file);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// TODO((b/401271082): re-enable lint once BrowserWebSocketFactory is\n// implemented.\n/*  eslint-disable @typescript-eslint/no-unused-vars */\nclass BrowserWebSocketFactory {\n    create(url, headers, callbacks) {\n        return new BrowserWebSocket(url, headers, callbacks);\n    }\n}\nclass BrowserWebSocket {\n    constructor(url, headers, callbacks) {\n        this.url = url;\n        this.headers = headers;\n        this.callbacks = callbacks;\n    }\n    connect() {\n        this.ws = new WebSocket(this.url);\n        this.ws.onopen = this.callbacks.onopen;\n        this.ws.onerror = this.callbacks.onerror;\n        this.ws.onclose = this.callbacks.onclose;\n        this.ws.onmessage = this.callbacks.onmessage;\n    }\n    send(message) {\n        if (this.ws === undefined) {\n            throw new Error('WebSocket is not connected');\n        }\n        this.ws.send(message);\n    }\n    close() {\n        if (this.ws === undefined) {\n            throw new Error('WebSocket is not connected');\n        }\n        this.ws.close();\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst GOOGLE_API_KEY_HEADER = 'x-goog-api-key';\n// TODO(b/395122533): We need a secure client side authentication mechanism.\nclass WebAuth {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    async addAuthHeaders(headers) {\n        if (headers.get(GOOGLE_API_KEY_HEADER) !== null) {\n            return;\n        }\n        headers.append(GOOGLE_API_KEY_HEADER, this.apiKey);\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst LANGUAGE_LABEL_PREFIX = 'gl-node/';\n/**\n * The Google GenAI SDK.\n *\n * @remarks\n * Provides access to the GenAI features through either the {@link\n * https://cloud.google.com/vertex-ai/docs/reference/rest | Gemini API} or\n * the {@link https://cloud.google.com/vertex-ai/docs/reference/rest | Vertex AI\n * API}.\n *\n * The {@link GoogleGenAIOptions.vertexai} value determines which of the API\n * services to use.\n *\n * When using the Gemini API, a {@link GoogleGenAIOptions.apiKey} must also be\n * set. When using Vertex AI, currently only {@link GoogleGenAIOptions.apiKey}\n * is supported via Express mode. {@link GoogleGenAIOptions.project} and {@link\n * GoogleGenAIOptions.location} should not be set.\n *\n * @example\n * Initializing the SDK for using the Gemini API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});\n * ```\n *\n * @example\n * Initializing the SDK for using the Vertex AI API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({\n *   vertexai: true,\n *   project: 'PROJECT_ID',\n *   location: 'PROJECT_LOCATION'\n * });\n * ```\n *\n */\nclass GoogleGenAI {\n    constructor(options) {\n        var _a;\n        if (options.apiKey == null) {\n            throw new Error('An API Key must be set when running in a browser');\n        }\n        // Web client only supports API key mode for Vertex AI.\n        if (options.project || options.location) {\n            throw new Error('Vertex AI project based authentication is not supported on browser runtimes. Please do not provide a project or location.');\n        }\n        this.vertexai = (_a = options.vertexai) !== null && _a !== void 0 ? _a : false;\n        this.apiKey = options.apiKey;\n        this.apiVersion = options.apiVersion;\n        const auth = new WebAuth(this.apiKey);\n        this.apiClient = new ApiClient({\n            auth: auth,\n            apiVersion: this.apiVersion,\n            apiKey: this.apiKey,\n            vertexai: this.vertexai,\n            httpOptions: options.httpOptions,\n            userAgentExtra: LANGUAGE_LABEL_PREFIX + 'web',\n            uploader: new BrowserUploader(),\n        });\n        this.models = new Models(this.apiClient);\n        this.live = new Live(this.apiClient, auth, new BrowserWebSocketFactory());\n        this.chats = new Chats(this.models, this.apiClient);\n        this.caches = new Caches(this.apiClient);\n        this.files = new Files(this.apiClient);\n        this.operations = new Operations(this.apiClient);\n    }\n}\n\nexport { ActivityHandling, BlockedReason, Caches, Chat, Chats, ComputeTokensResponse, ControlReferenceType, CountTokensResponse, CreateFileResponse, DeleteCachedContentResponse, DeleteFileResponse, DynamicRetrievalConfigMode, EmbedContentResponse, EndSensitivity, FeatureSelectionPreference, FileSource, FileState, Files, FinishReason, FunctionCallingConfigMode, FunctionResponse, GenerateContentResponse, GenerateContentResponsePromptFeedback, GenerateContentResponseUsageMetadata, GenerateImagesResponse, GenerateVideosResponse, GoogleGenAI, HarmBlockMethod, HarmBlockThreshold, HarmCategory, HarmProbability, HarmSeverity, HttpResponse, ImagePromptLanguage, Language, ListCachedContentsResponse, ListFilesResponse, Live, LiveClientToolResponse, LiveSendToolResponseParameters, MaskReferenceMode, MediaModality, MediaResolution, Modality, Mode, Models, Operations, Outcome, PagedItem, Pager, PersonGeneration, ReplayResponse, SafetyFilterLevel, Session, StartSensitivity, SubjectReferenceType, TrafficType, TurnCoverage, Type, createModelContent, createPartFromBase64, createPartFromCodeExecutionResult, createPartFromExecutableCode, createPartFromFunctionCall, createPartFromFunctionResponse, createPartFromText, createPartFromUri, createUserContent };\n//# sourceMappingURL=index.mjs.map\n"],"names":["BaseModule","formatMap","templateString","valueMap","regex","match","key","value","setValueByPath","data","keys","i","keyName","arrayData","j","entry","d","keyToSet","existingData","getValueByPath","error","tModel","apiClient","model","parts","tCachesModel","transformedModel","tPart","origin","tParts","item","_isContent","_isFunctionCallPart","_isFunctionResponsePart","tContent","tContentsForEmbed","content","tContents","result","accumulatedParts","isContentArray","isContent","processSchema","schema","subSchema","tSchema","tSpeechConfig","speechConfig","tTool","tool","tTools","resourceName","client","resourcePrefix","splitsAfterPrefix","shouldAppendPrefix","tCachedContentName","name","tBytes","fromImageBytes","tFileName","fromName","partToMldev$2","fromObject","toObject","fromThought","fromCodeExecutionResult","fromExecutableCode","fromFileData","fromFunctionCall","fromFunctionResponse","fromInlineData","fromText","contentToMldev$2","fromParts","fromRole","functionDeclarationToMldev$2","fromDescription","fromParameters","googleSearchToMldev$2","dynamicRetrievalConfigToMldev$2","fromMode","fromDynamicThreshold","googleSearchRetrievalToMldev$2","fromDynamicRetrievalConfig","toolToMldev$2","fromFunctionDeclarations","fromGoogleSearchRetrieval","fromCodeExecution","functionCallingConfigToMldev$1","fromAllowedFunctionNames","toolConfigToMldev$1","fromFunctionCallingConfig","createCachedContentConfigToMldev","parentObject","fromTtl","fromExpireTime","fromDisplayName","fromContents","fromSystemInstruction","fromTools","fromToolConfig","createCachedContentParametersToMldev","fromModel","fromConfig","getCachedContentParametersToMldev","deleteCachedContentParametersToMldev","updateCachedContentConfigToMldev","updateCachedContentParametersToMldev","listCachedContentsConfigToMldev","fromPageSize","fromPageToken","listCachedContentsParametersToMldev","partToVertex$2","fromVideoMetadata","contentToVertex$2","schemaToVertex$2","fromExample","fromPattern","fromDefault","fromMaxLength","fromMinLength","fromMinProperties","fromMaxProperties","fromAnyOf","fromEnum","fromFormat","fromItems","fromMaxItems","fromMaximum","fromMinItems","fromMinimum","fromNullable","fromProperties","fromPropertyOrdering","fromRequired","fromTitle","fromType","functionDeclarationToVertex$2","fromResponse","googleSearchToVertex$2","dynamicRetrievalConfigToVertex$2","googleSearchRetrievalToVertex$2","toolToVertex$2","fromRetrieval","functionCallingConfigToVertex$1","toolConfigToVertex$1","createCachedContentConfigToVertex","createCachedContentParametersToVertex","getCachedContentParametersToVertex","deleteCachedContentParametersToVertex","updateCachedContentConfigToVertex","updateCachedContentParametersToVertex","listCachedContentsConfigToVertex","listCachedContentsParametersToVertex","cachedContentFromMldev","fromCreateTime","fromUpdateTime","fromUsageMetadata","deleteCachedContentResponseFromMldev","listCachedContentsResponseFromMldev","fromNextPageToken","fromCachedContents","cachedContentFromVertex","deleteCachedContentResponseFromVertex","listCachedContentsResponseFromVertex","PagedItem","Pager","request","response","params","_a","_b","requestParams","index","Outcome","Language","Type","HarmCategory","HarmBlockMethod","HarmBlockThreshold","Mode","FinishReason","HarmProbability","HarmSeverity","BlockedReason","TrafficType","Modality","MediaResolution","FeatureSelectionPreference","DynamicRetrievalConfigMode","FunctionCallingConfigMode","SafetyFilterLevel","PersonGeneration","ImagePromptLanguage","FileState","FileSource","MaskReferenceMode","ControlReferenceType","SubjectReferenceType","MediaModality","StartSensitivity","EndSensitivity","ActivityHandling","TurnCoverage","GenerateContentResponse","_c","_d","_e","_f","_g","_h","text","anyTextPartText","nonTextParts","part","fieldName","fieldValue","functionCalls","functionCall","_j","executableCode","codeExecutionResult","EmbedContentResponse","GenerateImagesResponse","CountTokensResponse","ComputeTokensResponse","DeleteCachedContentResponse","ListCachedContentsResponse","ListFilesResponse","HttpResponse","headers","pair","CreateFileResponse","DeleteFileResponse","Caches","x","path","queryParams","body","httpResponse","apiResponse","resp","typedResp","__values","o","s","m","__await","v","__asyncGenerator","thisArg","_arguments","generator","g","q","verb","awaitReturn","f","reject","n","a","b","resume","step","e","settle","r","fulfill","__asyncValues","resolve","isValidResponse","isValidContent","validateHistory","history","extractCuratedHistory","comprehensiveHistory","curatedHistory","length","userInput","modelOutput","isValid","Chats","modelsModule","Chat","config","inputContent","responsePromise","outputContent","streamResponse","curated","e_1","streamResponse_1","streamResponse_1_1","chunk","e_1_1","outputContents","listFilesConfigToMldev","listFilesParametersToMldev","fileStatusToMldev","fromDetails","fromMessage","fromCode","fileToMldev","fromMimeType","fromSizeBytes","fromExpirationTime","fromSha256Hash","fromUri","fromDownloadUri","fromState","fromSource","fromError","createFileParametersToMldev","fromFile","getFileParametersToMldev","deleteFileParametersToMldev","fileStatusFromMldev","fileFromMldev","listFilesResponseFromMldev","fromFiles","createFileResponseFromMldev","deleteFileResponseFromMldev","Files","partToMldev$1","partToVertex$1","contentToMldev$1","contentToVertex$1","schemaToVertex$1","functionDeclarationToMldev$1","functionDeclarationToVertex$1","googleSearchToMldev$1","googleSearchToVertex$1","dynamicRetrievalConfigToMldev$1","dynamicRetrievalConfigToVertex$1","googleSearchRetrievalToMldev$1","googleSearchRetrievalToVertex$1","toolToMldev$1","toolToVertex$1","sessionResumptionConfigToMldev","fromHandle","sessionResumptionConfigToVertex","fromTransparent","audioTranscriptionConfigToMldev","audioTranscriptionConfigToVertex","automaticActivityDetectionToMldev","fromDisabled","fromStartOfSpeechSensitivity","fromEndOfSpeechSensitivity","fromPrefixPaddingMs","fromSilenceDurationMs","automaticActivityDetectionToVertex","realtimeInputConfigToMldev","fromAutomaticActivityDetection","fromActivityHandling","fromTurnCoverage","realtimeInputConfigToVertex","slidingWindowToMldev","fromTargetTokens","slidingWindowToVertex","contextWindowCompressionConfigToMldev","fromTriggerTokens","fromSlidingWindow","contextWindowCompressionConfigToVertex","liveConnectConfigToMldev","fromGenerationConfig","fromResponseModalities","fromTemperature","fromTopP","fromTopK","fromMaxOutputTokens","fromMediaResolution","fromSeed","fromSpeechConfig","fromSessionResumption","fromOutputAudioTranscription","fromRealtimeInputConfig","fromContextWindowCompression","liveConnectConfigToVertex","fromInputAudioTranscription","liveConnectParametersToMldev","liveConnectParametersToVertex","liveServerSetupCompleteFromMldev","liveServerSetupCompleteFromVertex","partFromMldev$1","partFromVertex$1","contentFromMldev$1","contentFromVertex$1","transcriptionFromMldev","fromFinished","transcriptionFromVertex","liveServerContentFromMldev","fromModelTurn","fromTurnComplete","fromInterrupted","fromGenerationComplete","fromInputTranscription","fromOutputTranscription","liveServerContentFromVertex","functionCallFromMldev","fromId","fromArgs","functionCallFromVertex","liveServerToolCallFromMldev","fromFunctionCalls","liveServerToolCallFromVertex","liveServerToolCallCancellationFromMldev","fromIds","liveServerToolCallCancellationFromVertex","modalityTokenCountFromMldev","fromModality","fromTokenCount","modalityTokenCountFromVertex","usageMetadataFromMldev","fromPromptTokenCount","fromCachedContentTokenCount","fromResponseTokenCount","fromToolUsePromptTokenCount","fromThoughtsTokenCount","fromTotalTokenCount","fromPromptTokensDetails","fromCacheTokensDetails","fromResponseTokensDetails","fromToolUsePromptTokensDetails","usageMetadataFromVertex","fromTrafficType","liveServerGoAwayFromMldev","fromTimeLeft","liveServerGoAwayFromVertex","liveServerSessionResumptionUpdateFromMldev","fromNewHandle","fromResumable","fromLastConsumedClientMessageIndex","liveServerSessionResumptionUpdateFromVertex","liveServerMessageFromMldev","fromServerContent","fromToolCall","fromToolCallCancellation","fromGoAway","fromSessionResumptionUpdate","liveServerMessageFromVertex","partToMldev","contentToMldev","schemaToMldev","safetySettingToMldev","fromCategory","fromThreshold","functionDeclarationToMldev","googleSearchToMldev","dynamicRetrievalConfigToMldev","googleSearchRetrievalToMldev","toolToMldev","functionCallingConfigToMldev","toolConfigToMldev","prebuiltVoiceConfigToMldev","fromVoiceName","voiceConfigToMldev","fromPrebuiltVoiceConfig","speechConfigToMldev","fromVoiceConfig","fromLanguageCode","thinkingConfigToMldev","fromIncludeThoughts","fromThinkingBudget","generateContentConfigToMldev","fromCandidateCount","fromStopSequences","fromResponseLogprobs","fromLogprobs","fromPresencePenalty","fromFrequencyPenalty","fromResponseMimeType","fromResponseSchema","fromSafetySettings","fromCachedContent","fromThinkingConfig","generateContentParametersToMldev","embedContentConfigToMldev","fromTaskType","fromOutputDimensionality","embedContentParametersToMldev","fromModelForEmbedContent","generateImagesConfigToMldev","fromNumberOfImages","fromAspectRatio","fromGuidanceScale","fromSafetyFilterLevel","fromPersonGeneration","fromIncludeSafetyAttributes","fromIncludeRaiReason","fromLanguage","fromOutputMimeType","fromOutputCompressionQuality","generateImagesParametersToMldev","fromPrompt","getModelParametersToMldev","countTokensConfigToMldev","countTokensParametersToMldev","imageToMldev","generateVideosConfigToMldev","fromNumberOfVideos","fromDurationSeconds","fromNegativePrompt","generateVideosParametersToMldev","fromImage","partToVertex","contentToVertex","schemaToVertex","modelSelectionConfigToVertex","fromFeatureSelectionPreference","safetySettingToVertex","fromMethod","functionDeclarationToVertex","googleSearchToVertex","dynamicRetrievalConfigToVertex","googleSearchRetrievalToVertex","toolToVertex","functionCallingConfigToVertex","toolConfigToVertex","prebuiltVoiceConfigToVertex","voiceConfigToVertex","speechConfigToVertex","thinkingConfigToVertex","generateContentConfigToVertex","fromRoutingConfig","fromModelSelectionConfig","fromLabels","fromAudioTimestamp","generateContentParametersToVertex","embedContentConfigToVertex","fromAutoTruncate","embedContentParametersToVertex","generateImagesConfigToVertex","fromOutputGcsUri","fromAddWatermark","fromEnhancePrompt","generateImagesParametersToVertex","getModelParametersToVertex","countTokensConfigToVertex","countTokensParametersToVertex","computeTokensParametersToVertex","imageToVertex","fromGcsUri","generateVideosConfigToVertex","fromFps","fromResolution","fromPubsubTopic","generateVideosParametersToVertex","partFromMldev","contentFromMldev","citationMetadataFromMldev","fromCitations","candidateFromMldev","fromContent","fromCitationMetadata","fromFinishReason","fromAvgLogprobs","fromGroundingMetadata","fromIndex","fromLogprobsResult","fromSafetyRatings","generateContentResponseFromMldev","fromCandidates","fromModelVersion","fromPromptFeedback","contentEmbeddingFromMldev","fromValues","embedContentMetadataFromMldev","embedContentResponseFromMldev","fromEmbeddings","imageFromMldev","safetyAttributesFromMldev","fromCategories","fromScores","fromContentType","generatedImageFromMldev","fromRaiFilteredReason","fromSafetyAttributes","generateImagesResponseFromMldev","fromGeneratedImages","fromPositivePromptSafetyAttributes","tunedModelInfoFromMldev","fromBaseModel","modelFromMldev","fromVersion","fromTunedModelInfo","fromInputTokenLimit","fromOutputTokenLimit","fromSupportedActions","countTokensResponseFromMldev","fromTotalTokens","videoFromMldev$1","fromVideoBytes","generatedVideoFromMldev$1","fromVideo","generateVideosResponseFromMldev$1","fromGeneratedVideos","fromRaiMediaFilteredCount","fromRaiMediaFilteredReasons","generateVideosOperationFromMldev$1","fromMetadata","fromDone","partFromVertex","contentFromVertex","citationMetadataFromVertex","candidateFromVertex","fromFinishMessage","generateContentResponseFromVertex","fromResponseId","contentEmbeddingStatisticsFromVertex","fromTruncated","contentEmbeddingFromVertex","fromStatistics","embedContentMetadataFromVertex","fromBillableCharacterCount","embedContentResponseFromVertex","imageFromVertex","safetyAttributesFromVertex","generatedImageFromVertex","fromEnhancedPrompt","generateImagesResponseFromVertex","endpointFromVertex","fromDeployedModelId","tunedModelInfoFromVertex","modelFromVertex","fromEndpoints","countTokensResponseFromVertex","computeTokensResponseFromVertex","fromTokensInfo","videoFromVertex$1","generatedVideoFromVertex$1","generateVideosResponseFromVertex$1","generateVideosOperationFromVertex$1","FUNCTION_RESPONSE_REQUIRES_ID","handleWebSocketMessage","onmessage","event","serverMessage","Live","auth","webSocketFactory","websocketBaseUrl","apiVersion","url","mapToHeaders","apiKey","onopenResolve","onopenPromise","callbacks","onopenAwaitedCallback","websocketCallbacks","conn","headersToMap","project","location","clientMessage","liveConnectParameters","Session","defaultLiveSendClientContentParamerters","contents","functionResponses","functionResponse","headerMap","map","Models","positivePromptSafetyAttributes","generatedImages","generatedImage","apiResponse_1","apiResponse_1_1","e_2","apiResponse_2","apiResponse_2_1","e_2_1","getOperationParametersToMldev","fromOperationName","getOperationParametersToVertex","fetchPredictOperationParametersToVertex","fromResourceName","videoFromMldev","generatedVideoFromMldev","generateVideosResponseFromMldev","generateVideosOperationFromMldev","videoFromVertex","generatedVideoFromVertex","generateVideosResponseFromVertex","generateVideosOperationFromVertex","Operations","parameters","operation","httpOptions","CONTENT_TYPE_HEADER","SERVER_TIMEOUT_HEADER","USER_AGENT_HEADER","GOOGLE_API_CLIENT_HEADER","SDK_VERSION","LIBRARY_LABEL","VERTEX_AI_API_DEFAULT_VERSION","GOOGLE_AI_API_DEFAULT_VERSION","responseLineRE","ClientError","message","stackTrace","ServerError","ApiClient","opts","initHttpOptions","urlElement","baseUrl","urlParts","prependProjectLocation","patchedHttpOptions","requestInit","baseHttpOptions","requestHttpOptions","abortController","signal","httpMethod","throwErrorIfNotOK","reader","decoder","buffer","done","chunkString","processedChunkString","partialResponse","versionHeaderValue","file","fileToUpload","uploader","fileStat","mimeType","uploadUrl","status","statusText","errorBody","errorMessage","MAX_CHUNK_SIZE","uploadBlob","fileSize","offset","uploadCommand","chunkSize","responseJson","getBlobStat","BrowserUploader","BrowserWebSocketFactory","BrowserWebSocket","GOOGLE_API_KEY_HEADER","WebAuth","LANGUAGE_LABEL_PREFIX","GoogleGenAI","options"],"mappings":"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","x_google_ignoreList":[0]}